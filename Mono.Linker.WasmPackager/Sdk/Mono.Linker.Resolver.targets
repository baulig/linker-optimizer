<Project>

  <!-- 
    The primary task in this file is _WasmPackager_Resolve, which resolves
    all the assemblies and assigns metadata.

    Inputs:
      @(_WasmPackager_RootAssemblies)
    
    Outputs:
      @(_WasmPackager_Assemblies)
        Metadata:
        - AOT - boolean
        - Name - Assembly base name
        - SkipCopy - boolean
        - SkipLink - boolean
        - LinkerInput
        - LinkerOutput
        - AotInput
        - DepFile

      @(_WasmPackager_FileList)

    Make sure to only edit those two in pairs:
      @(_WasmPackager_Copy_Inputs)
      @(_WasmPackager_Copy_Outputs)
  -->

  <PropertyGroup>
    <_WasmPackager_PackagerAssembly>$(MSBuildThisFileDirectory)\..\tools\Mono.Linker.WasmPackager.dll</_WasmPackager_PackagerAssembly>
  </PropertyGroup>
  <UsingTask TaskName="Mono.Linker.WasmPackager.WasmResolverTask" AssemblyFile="$(_WasmPackager_PackagerAssembly)" />

  <ItemGroup>
    <PackageReference Include="Mono.Linker.Optimizer" Version="1.0.0" />
    <PackageReference Include="Mono.WebAssembly.Framework" Version="$(MonoWebAssemblySdkVersion)" />
    <PackageReference Include="Mono.WebAssembly.Runtime" Version="$(MonoWebAssemblySdkVersion)" />
    <PackageReference Include="Mono.WebAssembly.Runtime.Aot" Version="$(MonoWebAssemblySdkVersion)" />
  </ItemGroup>

  <Import Project="$(MSBuildThisFileDirectory)\Mono.Linker.Settings.targets" />

  <!-- Derived and private settings -->
  <PropertyGroup>
    <_WasmPackager_NetCoreAppDir>/MARTIN/FIXME/netcore/shared/Microsoft.NETCore.App/3.0</_WasmPackager_NetCoreAppDir>
    <_WasmPackager_RuntimeJsIntermediate>$(WasmPackager_BuildDir)/runtime.js</_WasmPackager_RuntimeJsIntermediate>
    <_WasmPackager_ExecMode>AotInterp</_WasmPackager_ExecMode>

    <_WasmPackager_EnableDedup Condition="'$(WasmPackager_EnableLinker)' == 'true' OR '$(WasmPackager_EnableAot)' == 'true'">true</_WasmPackager_EnableDedup>
    <_WasmPackager_EnableDedup Condition="'$(_WasmPackager_EnableDedup)' != 'true'">false</_WasmPackager_EnableDedup>

    <_WasmPackager_ConfigCache>$(WasmPackager_BuildDir)/packager-config.cache</_WasmPackager_ConfigCache>
    <_WasmPackager_ResolveCache>$(WasmPackager_BuildDir)/packager-resolve.cache</_WasmPackager_ResolveCache>

    <_WasmPackager_Driver_Source>$(WasmPackager_MonoRuntimePath)/src/driver.c</_WasmPackager_Driver_Source>
    <_WasmPackager_Driver>$(WasmPackager_BuildDir)/driver.c</_WasmPackager_Driver>
    <_WasmPackager_Driver_Output>$(WasmPackager_BuildDir)/driver.o</_WasmPackager_Driver_Output>

    <_WasmPackager_MonoConfig>$(WasmPackager_BuildDir)/mono-config.js</_WasmPackager_MonoConfig>
    <_WasmPackager_DriverGen>$(WasmPackager_BuildDir)/driver-gen.c</_WasmPackager_DriverGen>
    <_WasmPackager_EmsdkEnv>$(WasmPackager_BuildDir)/emsdk_env.sh</_WasmPackager_EmsdkEnv>

    <_WasmPackager_EnableZLib Condition="('$(WasmPackager_EnableAot)' == 'true') OR ('$(WasmPackager_LinkIcalls)' == 'true')">true</_WasmPackager_EnableZLib>

    <_WasmPackager_Emcc_Flags>-Oz -g -s DISABLE_EXCEPTION_CATCHING=0 -s ASSERTIONS=1 -s WASM=1 -s ALLOW_MEMORY_GROWTH=1 -s BINARYEN=1 -s TOTAL_MEMORY=134217728 -s ALIASING_FUNCTION_POINTERS=0 -s NO_EXIT_RUNTIME=1 -s ERROR_ON_UNDEFINED_SYMBOLS=1 -s "EXTRA_EXPORTED_RUNTIME_METHODS=['ccall', 'cwrap', 'setValue', 'getValue', 'UTF8ToString']" -s "EXPORTED_FUNCTIONS=['___cxa_is_pointer_type', '___cxa_can_catch']" -s "DEFAULT_LIBRARY_FUNCS_TO_INCLUDE=['setThrew', 'memset']"</_WasmPackager_Emcc_Flags>
    <_WasmPackager_Emcc_Flags Condition="('$(WasmPackager_EnableAot)' != 'true') AND ('$(WasmPackager_LinkIcalls)' == 'true')">$(_WasmPackager_Emcc_Flags) --llvm-lto 1</_WasmPackager_Emcc_Flags>

    <_WasmPackager_MonoCrossBin>$(WasmPackager_MonoRuntimeAotDir)/bin/wasm32-unknown-none-mono-sgen</_WasmPackager_MonoCrossBin>
  </PropertyGroup>

  <PropertyGroup Condition="'$(_WasmPackager_EnableZLib)' == 'true'">
    <_WasmPackager_Emcc_Flags>$(_WasmPackager_Emcc_Flags) -s USE_ZLIB=1</_WasmPackager_Emcc_Flags>
    <_WasmPackager_ZLibHelper_Source>$(WasmPackager_MonoRuntimePath)/src/zlib-helper.c</_WasmPackager_ZLibHelper_Source>
    <_WasmPackager_ZLibHelper>$(WasmPackager_BuildDir)/zlib-helper.c</_WasmPackager_ZLibHelper>
    <_WasmPackager_ZLibHelper_Output>$(WasmPackager_BuildDir)/zlib-helper.o</_WasmPackager_ZLibHelper_Output>
  </PropertyGroup>

  <ItemGroup>
    <_WasmPackager_SdkSources Include="$(RuntimeTemplate);src/pinvoke-tables-default.h">
      <Source>$(WasmPackager_MonoRuntimePath)/%(Identity)</Source>
      <Intermediate>$(WasmPackager_BuildDir)/%(Filename)%(Extension)</Intermediate>
    </_WasmPackager_SdkSources>

    <_WasmPackager_SdkSources Include="$(_WasmPackager_ZLibHelper_Source)" Condition="'$(_WasmPackager_ZLibHelper_Source)' != ''">
      <Source>%(Identity)</Source>
      <Intermediate>$(_WasmPackager_ZLibHelper)</Intermediate>
      <Emcc_Output>$(_WasmPackager_ZLibHelper_Output)</Emcc_Output>
    </_WasmPackager_SdkSources>
  </ItemGroup>

  <!-- Resolve some conditional properties -->
  <Target Name="_WasmPackager_ResolveProperties" Outputs="$(_WasmPackager_ConfigCache)">
    <PropertyGroup>
      <_WasmPackager_PInvokeTable Condition="'@(WasmPackager_PInvokeLibraries)' != ''">$(WasmPackager_BuildDir)/pinvoke-table.h</_WasmPackager_PInvokeTable>
      <_WasmPackager_IcallTable Condition="'$(WasmPackager_LinkIcalls)' == 'true'">$(WasmPackager_BuildDir)/icall-table.h</_WasmPackager_IcallTable>
      <_WasmPackager_LinkerInput_Dir Condition="'$(WasmPackager_EnableLinker)' == 'true'">$(WasmPackager_BuildDir)/linker-in</_WasmPackager_LinkerInput_Dir>
      <_WasmPackager_LinkerOutput_Dir Condition="'$(WasmPackager_EnableLinker)' == 'true'">$(WasmPackager_BuildDir)/linker-out</_WasmPackager_LinkerOutput_Dir>
      <_WasmPackager_AotInput_Dir Condition="'$(WasmPackager_EnableLinker)' == 'true'">$(_WasmPackager_LinkerOutput_Dir)</_WasmPackager_AotInput_Dir>
      <_WasmPackager_AotInput_Dir Condition="'$(WasmPackager_EnableLinker)' != 'true'">$(WasmPackager_BuildDir)</_WasmPackager_AotInput_Dir>
      <_WasmPackager_AotDummy Condition="'$(_WasmPackager_EnableDedup)' == 'true'">$(WasmPackager_BuildDir)/aot-dummy.dll</_WasmPackager_AotDummy>

      <_WasmPackager_Emcc_Flags Condition="'$(_WasmPackager_PInvokeTable)' != ''">$(_WasmPackager_Emcc_Flags) -DGEN_PINVOKE</_WasmPackager_Emcc_Flags>
    </PropertyGroup>

    <ItemGroup>
      <_WasmPackager_RootAssemblies Include="@(IntermediateAssembly)" />

      <_WasmPackager_SdkSources Include="$(_WasmPackager_Driver)">
        <Source>$(_WasmPackager_Driver_Source)</Source>
        <Intermediate>$(_WasmPackager_Driver)</Intermediate>
        <Emcc_Output>$(_WasmPackager_Driver_Output)</Emcc_Output>
        <Emcc_Flags>-DDRIVER_GEN=1</Emcc_Flags>
        <Emcc_Deps>$(_WasmPackager_IcallTable);$(_WasmPackager_PInvokeTable)</Emcc_Deps>
      </_WasmPackager_SdkSources>

      <_WasmPackager_AotArgs Include="llvm-path=$(EmscriptenSdkDir)/upstream/bin" />
      <_WasmPackager_AotArgs Include="@(WasmPackager_Profilers->'--profile=%(Identity)')" />
      <_WasmPackager_AotArgs Include="profile=$(WasmPackager_AotProfile),profile-only" Condition="'$(WasmPackager_AotProfile)' != ''" />
      <_WasmPackager_AotArgs Include="interp" Condition="'$(_WasmPackager_ExecMode)' == 'AotInterp'" />
      <_WasmPackager_AotArgs Include="dedup-skip" Condition="'$(_WasmPackager_EnableDedup)' == 'true'" />
      <_WasmPackager_AotArgs Include="llvmonly;asmonly;no-opt;static;direct-icalls;deterministic" />
    </ItemGroup>

    <Message Importance="High" Text="WasmPackager - Resolve Properties: $(WasmPackager_MonoBclPath)" />
    <Message Importance="High" Text="  RootAssemblies: %(_WasmPackager_RootAssemblies.Identity)" />
    <Message Importance="High" Text="  ItermediateAssembly: %(IntermediateAssembly.Identity)" />

    <!--
      Include everything here that's supposed to be set by the user and separate item lists.
      We will write this into a digest file $(_WasmPackager_ConfigCache) that can be used as
      input dependency in some of the targets.
    -->
    <ItemGroup>
      <__WasmPackager_AllConfigItems Include="'$(RuntimeTemplate)';'$(WasmEnableDebug)';'$(EmscriptenSdkDir)'" />
      <__WasmPackager_AllConfigItems Include="'$(WasmPackager_BuildDir)';'$(WasmPackager_VfsPrefix)';'$(WasmPackager_DeployPrefix)'" />
      <__WasmPackager_AllConfigItems Include="'$(WasmPackager_LinkIcalls)';'$(WasmPackager_EnableLinker)';'$(WasmPackager_EnableAot)'" />
      <__WasmPackager_AllConfigItems Include="R;@(_WasmPackager_RootAssemblies);P;@(WasmPackager_Profilers);I;@(WasmPackager_PInvokeLibraries)" />
    </ItemGroup>

    <Hash ItemsToHash="@(__WasmPackager_AllConfigItems)">
      <Output TaskParameter="HashResult" PropertyName="_WasmPackager_ConfigHash" />
    </Hash>

    <WriteLinesToFile
      Lines="$(_WasmPackager_ConfigHash)"
      File="$(_WasmPackager_ConfigCache)"
      Overwrite="True"
      WriteOnlyWhenDifferent="True" />

    <Message Importance="High" Text="Wasm packager - got config hash $(_WasmPackager_ConfigHash)" />
  </Target>


  <Target
      Name="_WasmPackager_Resolve"
      Outputs="$(_WasmPackager_ResolveCache)"
      DependsOnTargets="_WasmPackager_ResolveProperties">

    <ItemGroup>
      <_WasmPackager_RootAssemblies Include="@(IntermediateAssembly)" />
    </ItemGroup>

    <Message Importance="High" Text="WasmPackager - resolving assemblies with root $(WasmPackager_MonoBclPath)" />
    <Message Importance="Normal" Text="  RootAssemblies: %(_WasmPackager_RootAssemblies.Identity)" />

    <WasmResolverTask
        MonoBclPath="$(WasmPackager_MonoBclPath)"
        RootAssemblies="@(_WasmPackager_RootAssemblies)"
        EnableAot="$(WasmPackager_EnableAot)"
        EnableDebug="$(WasmEnableDebug)">
        <Output TaskParameter="Assemblies" ItemName="__WasmPackager_Assemblies" />
        <Output TaskParameter="FileList" ItemName="_WasmPackager_FileList" />
    </WasmResolverTask>

    <ItemGroup Condition="'$(_WasmPackager_EnableDedup)' == 'true'">
      <__WasmPackager_Assemblies Include="$(_WasmPackager_AotDummy)">
        <Name>aot-dummy</Name>
        <AOT>true</AOT>
        <SkipCopy>true</SkipCopy>
        <SkipLink>true</SkipLink>
      </__WasmPackager_Assemblies>
    </ItemGroup>

    <ItemGroup Condition="'$(WasmPackager_EnableLinker)' == 'true'">
      <_WasmPackager_Assemblies Include="@(__WasmPackager_Assemblies)">
        <LinkerInput>$(_WasmPackager_LinkerInput_Dir)/%(Filename)%(Extension)</LinkerInput>
        <LinkerOutput>$(_WasmPackager_LinkerOutput_Dir)/%(Filename)%(Extension)</LinkerOutput>
        <AotInput>$(_WasmPackager_LinkerOutput_Dir)/%(Filename)%(Extension)</AotInput>
        <DepFile Condition="'$(WasmPackager_EnableAot)' == 'true'">$(_WasmPackager_LinkerOutput_Dir)/%(Filename).depfile</DepFile>
        <LlvmOutFile Condition="'$(WasmPackager_EnableAot)' == 'true'">$(_WasmPackager_LinkerOutput_Dir)/%(Filename).bc.tmp</LlvmOutFile>
      </_WasmPackager_Assemblies>
    </ItemGroup>

    <ItemGroup Condition="'$(WasmPackager_EnableLinker)' != 'true'">
      <_WasmPackager_Assemblies Include="@(__WasmPackager_Assemblies)" />
    </ItemGroup>

    <!-- Make sure to always modify these in pairs -->
    <ItemGroup>
      <_WasmPackager_Copy_Inputs Include="%(_WasmPackager_SdkSources.Source)" />
      <_WasmPackager_Copy_Outputs Include="%(_WasmPackager_SdkSources.Intermediate)" />
    </ItemGroup>

    <ItemGroup>
      <_WasmPackager_Copy_Inputs Include="%(_WasmPackager_Assemblies.Identity)" Condition="'%(_WasmPackager_Assemblies.LinkerInput)' != '' AND '%(_WasmPackager_Assemblies.SkipCopy)' != 'true'" />
      <_WasmPackager_Copy_Outputs Include="%(_WasmPackager_Assemblies.LinkerInput)" Condition="'%(_WasmPackager_Assemblies.LinkerInput)' != '' AND '%(_WasmPackager_Assemblies.SkipCopy)' != 'true'" />
    </ItemGroup>

    <ItemGroup>
      <_WasmPackager_Emcc_Sources Include="@(_WasmPackager_SdkSources)" Condition="'%(_WasmPackager_SdkSources.Emcc_Output)' != ''" />
    </ItemGroup>

    <Message Importance="Normal" Text="  Assemblies: %(_WasmPackager_Assemblies.Name) - %(_WasmPackager_Assemblies.Identity)" />
    <Message Importance="Normal" Text="  FileList: %(_WasmPackager_FileList.Identity)" />
    <Message Importance="Normal" Text="  SDK Sources: %(_WasmPackager_SdkSources.Identity) - %(_WasmPackager_SdkSources.Source) - %(_WasmPackager_SdkSources.Intermediate)" />
    <Message Importance="Normal" Text="  Emcc Sources: %(_WasmPackager_Emcc_Sources.Identity) - %(_WasmPackager_Emcc_Sources.Emcc_Output) - %(_WasmPackager_Emcc_Sources.Emcc_Flags)" />
    <Message Importance="Normal" Text="  Linker Inputs: %(_WasmPackager_Assemblies.Name) - %(_WasmPackager_Assemblies.LinkerInput)" />
    <Message Importance="Normal" Text="  Linker Outputs: %(_WasmPackager_Assemblies.Name) - %(_WasmPackager_Assemblies.LinkerOutput)" />

    <!-- Include all the results here and separate item lists. -->
    <ItemGroup>
      <__WasmPackager_AllResolveResults Include="'$(_WasmPackager_ConfigHash)';@(_WasmPackager_FileList)" />
      <__WasmPackager_AllResolveResults Include="A;@(_WasmPackager_Assemblies->'%(Identity):%(SrcPath):%(AOT):%(LinkerInput)')" />
      <__WasmPackager_AllResolveResults Include="S;@(_WasmPackager_SdkSources->'%(Identity):%(Emcc_Output):%(Emcc_Flags):%(Emcc_Deps)') " />
    </ItemGroup>

    <Hash ItemsToHash="@(__WasmPackager_AllResolveResults)">
      <Output TaskParameter="HashResult" PropertyName="_WasmPackager_ResolveHash" />
    </Hash>

    <WriteLinesToFile
      Lines="$(_WasmPackager_ResolveHash)"
      File="$(_WasmPackager_ResolveCache)"
      Overwrite="True"
      WriteOnlyWhenDifferent="True" />

    <Message Importance="High" Text="WasmPackager - done resolving assemblies, resolve hash is $(_WasmPackager_ResolveHash)" />
  </Target>

</Project>
