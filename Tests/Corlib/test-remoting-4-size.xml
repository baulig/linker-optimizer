<?xml version="1.0" encoding="utf-8"?>
<optimizer-report>
	<action-report>
		<namespace name="System.Globalization">
			<type name="CompareInfo">
				<method name="get_UseManagedCollation()" action="return-false" />
				<method name=".ctor(System.Globalization.CultureInfo)" action="scan" />
				<method name="StartsWith(System.String,System.String,System.Globalization.CompareOptions)" action="scan" dead-code="blocks,jumps" />
				<method name="CompareOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" action="scan" dead-code="blocks,jumps" />
				<method name="internal_compare_switch(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" action="scan" dead-code="blocks" />
				<method name="EndsWith(System.String,System.String,System.Globalization.CompareOptions)" action="scan" dead-code="blocks,jumps" />
				<method name="internal_index_switch(System.String,System.Int32,System.Int32,System.String,System.Globalization.CompareOptions,System.Boolean)" action="scan" dead-code="blocks" />
				<method name="CreateSortKeyCore(System.String,System.Globalization.CompareOptions)" action="scan" dead-code="blocks,jumps" />
			</type>
			<type name="GlobalizationMode">
				<method name="get_Invariant()" action="return-true" />
			</type>
			<type name="CalendarData">
				<method name=".ctor(System.String,System.Int32,System.Boolean)" action="scan" dead-code="blocks,jumps" />
				<method name="InitializeEraNames(System.String,System.Int32)" action="scan" dead-code="blocks" />
				<method name="InitializeAbbreviatedEraNames(System.String,System.Int32)" action="scan" dead-code="blocks" />
			</type>
			<type name="CultureInfo">
				<method name="get_DateTimeFormat()" action="scan" dead-code="blocks,jumps" />
			</type>
			<type name="CharUnicodeInfo">
				<method name="EndianSwap(System.UInt16)" action="scan" dead-code="variables" />
			</type>
			<type name="DateTimeFormatInfo">
				<method name="set_Calendar(System.Globalization.Calendar)" action="scan" dead-code="blocks,variables" />
				<method name="Tokenize(System.TokenType,System.TokenType&amp;,System.Int32&amp;,System.__DTString&amp;)" action="scan" dead-code="blocks,jumps,variables" />
				<method name="CreateTokenHashTable()" action="scan" dead-code="blocks,jumps,constant-jumps,variables" />
			</type>
		</namespace>
		<namespace name="System">
			<type name="Array">
				<method name="CreateInstance(System.Type,System.Int32[])" action="scan" dead-code="variables" />
			</type>
			<type name="RuntimeType">
				<method name="FilterApplyType(System.Type,System.Reflection.BindingFlags,System.String,System.Boolean,System.String)" action="scan" dead-code="variables" />
			</type>
			<type name="DateTimeFormat">
				<method name="FormatCustomized(System.DateTime,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.TimeSpan,System.Text.StringBuilder)" action="scan" dead-code="blocks,jumps,constant-jumps,variables" />
			</type>
			<type name="DateTimeParse">
				<method name="TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTimeResult&amp;)" action="scan" dead-code="blocks" />
				<method name="Lex(System.DateTimeParse/DS,System.__DTString&amp;,System.DateTimeToken&amp;,System.DateTimeRawInfo&amp;,System.DateTimeResult&amp;,System.Globalization.DateTimeFormatInfo&amp;,System.Globalization.DateTimeStyles)" action="scan" dead-code="blocks" />
			</type>
			<type name="MemoryExtensions">
				<method name="ToUpperInvariant(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Span`1&lt;System.Char&gt;)" action="scan" dead-code="blocks,jumps" />
			</type>
		</namespace>
		<namespace name="System.Threading">
			<type name="SpinLock">
				<method name="ContinueTryEnterWithThreadTracking(System.Int32,System.UInt32,System.Boolean&amp;)" action="scan" dead-code="variables" />
			</type>
			<type name="Thread">
				<method name="Start(System.Threading.StackCrawlMark&amp;)" action="scan" dead-code="variables" />
			</type>
		</namespace>
		<namespace name="System.Runtime.Serialization">
			<type name="ObjectManager">
				<method name="FixupSpecialObject(System.Runtime.Serialization.ObjectHolder)" action="scan" dead-code="variables" />
			</type>
		</namespace>
		<namespace name="System.Reflection">
			<type name="SignatureType">
				<method name="get_TypeHandle()" action="scan" dead-code="variables" />
				<method name="get_GUID()" action="scan" dead-code="variables" />
			</type>
		</namespace>
	</action-report>
	<size-check configuration="remoting">
		<profile name="">
			<assembly name="test-remoting-4" size="3586">
				<namespace name="Martin.LinkerTest" size="2">
					<type name="TestRemoting" full-name="Martin.LinkerTest.TestRemoting" size="2">
						<method name="Main()" size="2" />
					</type>
				</namespace>
			</assembly>
			<assembly name="mscorlib" size="1640492">
				<namespace name="System.Security.Principal" size="0">
					<type name="IPrincipal" full-name="System.Security.Principal.IPrincipal" size="0" />
				</namespace>
				<namespace name="System.Runtime.Versioning" size="7">
					<type name="NonVersionableAttribute" full-name="System.Runtime.Versioning.NonVersionableAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
				</namespace>
				<namespace name="Microsoft.Win32" size="25">
					<type name="Win32Native" full-name="Microsoft.Win32.Win32Native" size="25">
						<method name="MakeHRFromErrorCode(System.Int32)" size="8" />
						<method name="GetMessage(System.Int32)" size="17" />
					</type>
				</namespace>
				<namespace name="System.Numerics.Hashing" size="39">
					<type name="HashHelpers" full-name="System.Numerics.Hashing.HashHelpers" size="39">
						<method name="Combine(System.Int32,System.Int32)" size="13" />
						<method name=".cctor()" size="26" />
					</type>
				</namespace>
				<namespace name="System.Runtime.ConstrainedExecution" size="45">
					<type name="Cer" full-name="System.Runtime.ConstrainedExecution.Cer" size="0" />
					<type name="PrePrepareMethodAttribute" full-name="System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="CriticalFinalizerObject" full-name="System.Runtime.ConstrainedExecution.CriticalFinalizerObject" size="17">
						<method name=".ctor()" size="7" />
						<method name="Finalize()" size="10" />
					</type>
					<type name="ReliabilityContractAttribute" full-name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" size="21">
						<method name=".ctor(System.Runtime.ConstrainedExecution.Consistency,System.Runtime.ConstrainedExecution.Cer)" size="21" />
					</type>
				</namespace>
				<namespace name="System.Diagnostics.Contracts" size="81">
					<type name="Contract" full-name="System.Diagnostics.Contracts.Contract" size="81">
						<method name="ForAll(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Predicate`1&lt;T&gt;)" size="81" />
					</type>
				</namespace>
				<namespace name="Internal.Runtime.Augments" size="86">
					<type name="AsyncStatus" full-name="Internal.Runtime.Augments.AsyncStatus" size="0" />
					<type name="RuntimeAugments" full-name="Internal.Runtime.Augments.RuntimeAugments" size="2">
						<method name="ReportUnhandledException(System.Exception)" size="2" />
					</type>
					<type name="RuntimeThread" full-name="Internal.Runtime.Augments.RuntimeThread" size="84">
						<method name="GetCurrentProcessorId()" size="2" />
						<method name="Yield()" size="6" />
						<method name="Sleep(System.Int32)" size="7" />
						<method name="SpinWait(System.Int32)" size="8" />
						<method name="Create(System.Threading.ParameterizedThreadStart,System.Int32)" size="13" />
						<method name=".ctor(System.Threading.Thread)" size="14" />
					</type>
				</namespace>
				<namespace name="System.Resources" size="95">
					<type name="UltimateResourceFallbackLocation" full-name="System.Resources.UltimateResourceFallbackLocation" size="0" />
					<type name="SatelliteContractVersionAttribute" full-name="System.Resources.SatelliteContractVersionAttribute" size="28">
						<method name=".ctor(System.String)" size="28" />
					</type>
					<type name="MissingManifestResourceException" full-name="System.Resources.MissingManifestResourceException" size="32">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="NeutralResourcesLanguageAttribute" full-name="System.Resources.NeutralResourcesLanguageAttribute" size="35">
						<method name=".ctor(System.String)" size="35" />
					</type>
				</namespace>
				<namespace name="Internal.Threading.Tasks.Tracing" size="106">
					<type name="TaskTrace" full-name="Internal.Threading.Tasks.Tracing.TaskTrace" size="106">
						<method name="TaskWaitBegin_Asynchronous(System.Int32,System.Int32,System.Int32)" size="20" />
						<method name="get_Enabled()" size="23" />
					</type>
				</namespace>
				<namespace name="Microsoft.Win32.SafeHandles" size="108">
					<type name="SafeWaitHandle" full-name="Microsoft.Win32.SafeHandles.SafeWaitHandle" size="28">
						<method name="ReleaseHandle()" size="13" />
						<method name=".ctor(System.IntPtr,System.Boolean)" size="15" />
					</type>
					<type name="SafeFileHandle" full-name="Microsoft.Win32.SafeHandles.SafeFileHandle" size="34">
						<method name=".ctor(System.IntPtr,System.Boolean)" size="15" />
						<method name="ReleaseHandle()" size="19" />
					</type>
					<type name="SafeHandleZeroOrMinusOneIsInvalid" full-name="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" size="46">
						<method name=".ctor(System.Boolean)" size="13" />
						<method name="get_IsInvalid()" size="33" />
					</type>
				</namespace>
				<namespace name="System.Runtime.ExceptionServices" size="142">
					<type name="FirstChanceExceptionEventArgs" full-name="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" size="0" />
					<type name="HandleProcessCorruptedStateExceptionsAttribute" full-name="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="ExceptionDispatchInfo" full-name="System.Runtime.ExceptionServices.ExceptionDispatchInfo" size="135">
						<method name="get_BinaryStackTraceArray()" size="7" />
						<method name="Throw()" size="19" />
						<method name="Capture(System.Exception)" size="31" />
						<method name=".ctor(System.Exception)" size="71" />
					</type>
				</namespace>
				<namespace name="System.Diagnostics.Tracing" size="266">
					<type name="EventLevel" full-name="System.Diagnostics.Tracing.EventLevel" size="0" />
					<type name="EventSourceAttribute" full-name="System.Diagnostics.Tracing.EventSourceAttribute" size="23">
						<method name=".ctor()" size="7" />
						<method name="set_Guid(System.String)" size="8" />
					</type>
					<type name="EventAttribute" full-name="System.Diagnostics.Tracing.EventAttribute" size="30">
						<method name="set_EventId(System.Int32)" size="8" />
						<method name=".ctor(System.Int32)" size="14" />
					</type>
					<type name="EventSource" full-name="System.Diagnostics.Tracing.EventSource" size="213">
						<type name="EventData" full-name="System.Diagnostics.Tracing.EventSource/EventData" size="24">
							<method name="set_DataPointer(System.IntPtr)" size="8" />
						</type>
						<method name="Dispose(System.Boolean)" size="1" />
						<method name="IsEnabled()" size="2" />
						<method name=".ctor(System.Guid,System.String)" size="8" />
						<method name=".ctor(System.String)" size="14" />
						<method name="Finalize()" size="17" />
						<method name="WriteEvent(System.Int32,System.Int32)" size="23" />
						<method name=".ctor()" size="24" />
						<method name="WriteEvent(System.Int32,System.Int32,System.Int32)" size="32" />
						<method name="WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)" size="42" />
					</type>
				</namespace>
				<namespace name="System.Runtime.InteropServices.WindowsRuntime" size="277">
					<type name="IRestrictedErrorInfo" full-name="System.Runtime.InteropServices.WindowsRuntime.IRestrictedErrorInfo" size="0" />
					<type name="WindowsRuntimeMarshal" full-name="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal" size="277">
						<method name="RoReportUnhandledError(System.Runtime.InteropServices.WindowsRuntime.IRestrictedErrorInfo)" size="25" />
						<method name="RoOriginateLanguageException(System.Int32,System.String,System.IntPtr)" size="31" />
						<method name=".cctor()" size="52" />
						<method name="ReportUnhandledError(System.Exception)" size="169" />
					</type>
				</namespace>
				<namespace name="System.Buffers.Text" size="279">
					<type name="FormattingHelpers" full-name="System.Buffers.Text.FormattingHelpers" size="279">
						<method name="CountHexDigits(System.UInt64)" size="66" />
						<method name="CountDigits(System.UInt32)" size="73" />
						<method name="CountDigits(System.UInt64)" size="140" />
					</type>
				</namespace>
				<namespace name="System.Security.Cryptography" size="295">
					<type name="RSAParameters" full-name="System.Security.Cryptography.RSAParameters" size="0" />
					<type name="RSA" full-name="System.Security.Cryptography.RSA" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="KeySizes" full-name="System.Security.Cryptography.KeySizes" size="49">
						<method name="get_MinSize()" size="7" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32)" size="28" />
					</type>
					<type name="CryptographicException" full-name="System.Security.Cryptography.CryptographicException" size="76">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor(System.String,System.Exception)" size="20" />
						<method name=".ctor()" size="28" />
					</type>
					<type name="AsymmetricAlgorithm" full-name="System.Security.Cryptography.AsymmetricAlgorithm" size="163">
						<method name="Dispose(System.Boolean)" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Clear()" size="14" />
						<method name="set_KeySize(System.Int32)" size="134" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Services" size="304">
					<type name="ITrackingHandler" full-name="System.Runtime.Remoting.Services.ITrackingHandler" size="0" />
					<type name="TrackingServices" full-name="System.Runtime.Remoting.Services.TrackingServices" size="304">
						<method name=".cctor()" size="11" />
						<method name="NotifyDisconnectedObject(System.Object)" size="97" />
						<method name="NotifyMarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)" size="98" />
					</type>
				</namespace>
				<namespace name="Mono.Interop" size="370">
					<type name="IDispatch" full-name="Mono.Interop.IDispatch" size="0" />
					<type name="ComInteropProxy" full-name="Mono.Interop.ComInteropProxy" size="370">
						<method name="get_TypeName()" size="7" />
						<method name="set_TypeName(System.String)" size="8" />
						<method name="Invoke(System.Runtime.Remoting.Messaging.IMessage)" size="11" />
						<method name=".ctor(System.IntPtr)" size="18" />
						<method name=".ctor(System.Type)" size="27" />
						<method name=".ctor(System.IntPtr,System.Type)" size="34" />
						<method name="CacheProxy()" size="49" />
						<method name="CanCastTo(System.Type,System.Object)" size="61" />
						<method name="GetProxy(System.IntPtr,System.Type)" size="66" />
						<method name="CreateProxy(System.Type)" size="89" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Metadata" size="442">
					<type name="SoapParameterAttribute" full-name="System.Runtime.Remoting.Metadata.SoapParameterAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="SoapAttribute" full-name="System.Runtime.Remoting.Metadata.SoapAttribute" size="29">
						<method name=".ctor()" size="7" />
						<method name="SetReflectionObject(System.Object)" size="8" />
					</type>
					<type name="SoapFieldAttribute" full-name="System.Runtime.Remoting.Metadata.SoapFieldAttribute" size="49">
						<method name=".ctor()" size="7" />
						<method name="SetReflectionObject(System.Object)" size="28" />
					</type>
					<type name="SoapMethodAttribute" full-name="System.Runtime.Remoting.Metadata.SoapMethodAttribute" size="154">
						<method name=".ctor()" size="7" />
						<method name="SetReflectionObject(System.Object)" size="133" />
					</type>
					<type name="SoapTypeAttribute" full-name="System.Runtime.Remoting.Metadata.SoapTypeAttribute" size="203">
						<method name=".ctor()" size="7" />
						<method name="SetReflectionObject(System.Object)" size="147" />
					</type>
				</namespace>
				<namespace name="System.Collections.ObjectModel" size="463">
					<type name="ReadOnlyCollection`1" full-name="System.Collections.ObjectModel.ReadOnlyCollection`1" size="463">
						<method name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" size="2" />
						<method name="System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32,T)" size="8" />
						<method name="System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" size="9" />
						<method name="get_Count()" size="12" />
						<method name="get_Item(System.Int32)" size="13" />
						<method name="CopyTo(T[],System.Int32)" size="14" />
						<method name=".ctor(System.Collections.Generic.IList`1&lt;T&gt;)" size="23" />
						<method name="IsCompatibleObject(System.Object)" size="33" />
						<method name="System.Collections.ICollection.CopyTo(System.Array,System.Int32)" size="222" />
					</type>
				</namespace>
				<namespace name="Mono" size="967">
					<type name="Runtime" full-name="Mono.Runtime" size="0" />
					<type name="RuntimeRemoteClassHandle" full-name="Mono.RuntimeRemoteClassHandle" size="17">
						<method name="get_ProxyClass()" size="17" />
					</type>
					<type name="SafeGPtrArrayHandle" full-name="Mono.SafeGPtrArrayHandle" size="50">
						<method name="Dispose()" size="12" />
						<method name=".ctor(System.IntPtr)" size="13" />
					</type>
					<type name="RuntimeEventHandle" full-name="Mono.RuntimeEventHandle" size="87">
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.IntPtr)" size="8" />
						<method name="GetHashCode()" size="12" />
						<method name="Equals(System.Object)" size="60" />
					</type>
					<type name="RuntimeGPtrArrayHandle" full-name="Mono.RuntimeGPtrArrayHandle" size="95">
						<method name="get_Item(System.Int32)" size="8" />
						<method name="get_Length()" size="12" />
						<method name=".ctor(System.IntPtr)" size="13" />
						<method name="DestroyAndFree(Mono.RuntimeGPtrArrayHandle&amp;)" size="20" />
						<method name="Lookup(System.Int32)" size="42" />
					</type>
					<type name="SafeStringMarshal" full-name="Mono.SafeStringMarshal" size="110">
						<method name=".ctor(System.String)" size="19" />
						<method name="Dispose()" size="41" />
						<method name="get_Value()" size="50" />
					</type>
					<type name="RuntimeClassHandle" full-name="Mono.RuntimeClassHandle" size="122">
						<method name="get_Value()" size="7" />
						<method name=".ctor(Mono.RuntimeStructs/MonoClass*)" size="8" />
						<method name=".ctor(System.IntPtr)" size="13" />
						<method name="GetTypeHandle()" size="17" />
						<method name="GetHashCode()" size="20" />
						<method name="Equals(System.Object)" size="57" />
					</type>
					<type name="RuntimeGenericParamInfoHandle" full-name="Mono.RuntimeGenericParamInfoHandle" size="146">
						<method name="get_Constraints()" size="7" />
						<method name="get_Attributes()" size="12" />
						<method name=".ctor(System.IntPtr)" size="13" />
						<method name="GetConstraintsCount()" size="42" />
						<method name="GetConstraints()" size="72" />
					</type>
					<type name="RuntimeMarshal" full-name="Mono.RuntimeMarshal" size="253">
						<method name="MarshalString(System.String)" size="7" />
						<method name="DecodeBlobArray(System.IntPtr)" size="27" />
						<method name="AsciHexDigitValue(System.Int32)" size="41" />
						<method name="PtrToUtf8String(System.IntPtr)" size="80" />
						<method name="DecodeBlobSize(System.IntPtr,System.IntPtr&amp;)" size="98" />
					</type>
				</namespace>
				<namespace name="" size="985">
					<type name="Locale" full-name="Locale" size="2">
						<method name="GetText(System.String)" size="2" />
					</type>
					<type name="SR" full-name="SR" size="29">
						<method name="GetResourceString(System.String)" size="2" />
						<method name="Format(System.String,System.Object)" size="13" />
						<method name="Format(System.String,System.Object,System.Object)" size="14" />
					</type>
					<type name="&lt;PrivateImplementationDetails&gt;" full-name="&lt;PrivateImplementationDetails&gt;" size="44">
						<type name="__StaticArrayInitTypeSize=3" full-name="&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=3" size="0" />
						<method name="ComputeStringHash(System.String)" size="44" />
					</type>
					<type name="Interop" full-name="Interop" size="910">
						<type name="Error" full-name="Interop/Error" size="0" />
						<type name="ErrorInfo" full-name="Interop/ErrorInfo" size="115">
							<method name="get_Error()" size="7" />
							<method name="GetErrorMessage()" size="12" />
							<method name=".ctor(System.Int32)" size="20" />
							<method name="get_RawErrno()" size="37" />
							<method name="ToString()" size="39" />
						</type>
						<type name="Sys" full-name="Interop/Sys" size="354">
							<type name="NodeType" full-name="Interop/Sys/NodeType" size="0" />
							<type name="DirectoryEntry" full-name="Interop/Sys/DirectoryEntry" size="114">
								<method name="GetName(System.Span`1&lt;System.Char&gt;)" size="114" />
							</type>
							<method name="GetLastErrorInfo()" size="11" />
							<method name="StrError(System.Int32)" size="39" />
							<method name="Stat(System.ReadOnlySpan`1&lt;System.Char&gt;,Interop/Sys/FileStatus&amp;)" size="54" />
							<method name="ReadLink(System.String)" size="82" />
						</type>
						<method name="GetRandomBytes(System.Byte*,System.Int32)" size="8" />
						<method name="GetIOException(Interop/ErrorInfo)" size="20" />
						<method name="GetExceptionForIoErrno(Interop/ErrorInfo,System.String,System.Boolean)" size="413" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Activation" size="1133">
					<type name="IActivator" full-name="System.Runtime.Remoting.Activation.IActivator" size="0" />
					<type name="UrlAttribute" full-name="System.Runtime.Remoting.Activation.UrlAttribute" size="7">
						<method name="get_UrlValue()" size="7" />
					</type>
					<type name="ConstructionLevelActivator" full-name="System.Runtime.Remoting.Activation.ConstructionLevelActivator" size="31">
						<method name="get_NextActivator()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Activate(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="22" />
					</type>
					<type name="ContextLevelActivator" full-name="System.Runtime.Remoting.Activation.ContextLevelActivator" size="120">
						<method name="get_NextActivator()" size="7" />
						<method name=".ctor(System.Runtime.Remoting.Activation.IActivator)" size="14" />
						<method name="Activate(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="99" />
					</type>
					<type name="AppDomainLevelActivator" full-name="System.Runtime.Remoting.Activation.AppDomainLevelActivator" size="148">
						<method name="get_NextActivator()" size="7" />
						<method name=".ctor(System.String,System.Runtime.Remoting.Activation.IActivator)" size="21" />
						<method name="Activate(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="120" />
					</type>
					<type name="ActivationServices" full-name="System.Runtime.Remoting.Activation.ActivationServices" size="827">
						<method name="PushActivationAttributes(System.Type,System.Object[])" size="1" />
						<method name="get_ConstructionActivator()" size="23" />
						<method name="RemoteActivate(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="26" />
						<method name="CreateProxyForType(System.Type)" size="81" />
						<method name="Activate(System.Runtime.Remoting.Proxies.RemotingProxy,System.Runtime.Remoting.Messaging.ConstructionCall)" size="98" />
						<method name="CreateProxyFromAttributes(System.Type,System.Object[])" size="113" />
						<method name="CreateInstanceFromMessage(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="137" />
						<method name="CreateConstructionCall(System.Type,System.String,System.Object[])" size="347" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Lifetime" size="1156">
					<type name="ILease" full-name="System.Runtime.Remoting.Lifetime.ILease" size="0" />
					<type name="LeaseSink" full-name="System.Runtime.Remoting.Lifetime.LeaseSink" size="108">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink)" size="14" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="20" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="21" />
						<method name="RenewLease(System.Runtime.Remoting.Messaging.IMessage)" size="53" />
					</type>
					<type name="LifetimeServices" full-name="System.Runtime.Remoting.Lifetime.LifetimeServices" size="162">
						<method name="get_LeaseManagerPollTime()" size="6" />
						<method name="set_LeaseTime(System.TimeSpan)" size="7" />
						<method name="TrackLifetime(System.Runtime.Remoting.ServerIdentity)" size="12" />
						<method name="set_LeaseManagerPollTime(System.TimeSpan)" size="18" />
						<method name=".cctor()" size="87" />
					</type>
					<type name="LeaseManager" full-name="System.Runtime.Remoting.Lifetime.LeaseManager" size="346">
						<method name=".ctor()" size="18" />
						<method name="StopManager()" size="24" />
						<method name="StartManager()" size="35" />
						<method name="SetPollTime(System.TimeSpan)" size="57" />
						<method name="TrackLifetime(System.Runtime.Remoting.ServerIdentity)" size="73" />
						<method name="ManageLeases(System.Object)" size="139" />
					</type>
					<type name="Lease" full-name="System.Runtime.Remoting.Lifetime.Lease" size="540">
						<type name="RenewalDelegate" full-name="System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate" size="0" />
						<method name="get_CurrentState()" size="7" />
						<method name="Activate()" size="8" />
						<method name="get_CurrentLeaseTime()" size="17" />
						<method name="Renew(System.TimeSpan)" size="40" />
						<method name=".ctor()" size="69" />
						<method name="Unregister(System.Runtime.Remoting.Lifetime.ISponsor)" size="86" />
						<method name="ProcessSponsorResponse(System.Object,System.Boolean)" size="94" />
						<method name="UpdateState()" size="100" />
						<method name="CheckNextSponsor()" size="112" />
					</type>
				</namespace>
				<namespace name="System.Security.Policy" size="1162">
					<type name="PolicyStatementAttribute" full-name="System.Security.Policy.PolicyStatementAttribute" size="0" />
					<type name="EvidenceBase" full-name="System.Security.Policy.EvidenceBase" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="PolicyStatement" full-name="System.Security.Policy.PolicyStatement" size="246">
						<method name="ToXml()" size="8" />
						<method name=".ctor(System.Security.PermissionSet)" size="9" />
						<method name="GetHashCode()" size="19" />
						<method name="get_PermissionSet()" size="39" />
						<method name=".ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)" size="41" />
						<method name="Equals(System.Object)" size="48" />
						<method name="ToXml(System.Security.Policy.PolicyLevel)" size="82" />
					</type>
					<type name="Evidence" full-name="System.Security.Policy.Evidence" size="302">
						<type name="EvidenceEnumerator" full-name="System.Security.Policy.Evidence/EvidenceEnumerator" size="118">
							<method name="get_Current()" size="12" />
							<method name=".ctor(System.Collections.IEnumerator,System.Collections.IEnumerator)" size="33" />
							<method name="MoveNext()" size="73" />
						</type>
						<method name=".ctor()" size="7" />
						<method name="get_Count()" size="48" />
						<method name="GetEnumerator()" size="52" />
						<method name="CopyTo(System.Array,System.Int32)" size="77" />
					</type>
					<type name="ApplicationTrust" full-name="System.Security.Policy.ApplicationTrust" size="305">
						<method name="GetDefaultGrantSet()" size="12" />
						<method name=".ctor()" size="19" />
						<method name="get_DefaultGrantSet()" size="27" />
						<method name="ToXml()" size="247" />
					</type>
				</namespace>
				<namespace name="Mono.Security.Cryptography" size="1367">
					<type name="CryptoConvert" full-name="Mono.Security.Cryptography.CryptoConvert" size="385">
						<method name="ToInt32LE(System.Byte[],System.Int32)" size="30" />
						<method name="ToHex(System.Byte[])" size="67" />
						<method name="GetParametersFromCapiPublicKeyBlob(System.Byte[],System.Int32)" size="228" />
					</type>
					<type name="RSAManaged" full-name="Mono.Security.Cryptography.RSAManaged" size="982">
						<method name=".ctor()" size="12" />
						<method name="Finalize()" size="17" />
						<method name=".ctor(System.Int32)" size="57" />
						<method name="Dispose(System.Boolean)" size="278" />
						<method name="ImportParameters(System.Security.Cryptography.RSAParameters)" size="618" />
					</type>
				</namespace>
				<namespace name="System.Security.Permissions" size="1422">
					<type name="PermissionState" full-name="System.Security.Permissions.PermissionState" size="0" />
					<type name="SecurityPermission" full-name="System.Security.Permissions.SecurityPermission" size="239">
						<method name="IsEmpty()" size="10" />
						<method name=".ctor(System.Security.Permissions.SecurityPermissionFlag)" size="14" />
						<method name="Cast(System.Security.IPermission)" size="31" />
						<method name="set_Flags(System.Security.Permissions.SecurityPermissionFlag)" size="50" />
						<method name="IsSubsetOf(System.Security.IPermission)" size="56" />
						<method name="ToXml()" size="64" />
					</type>
					<type name="FileIOPermission" full-name="System.Security.Permissions.FileIOPermission" size="1183">
						<method name="Equals(System.Object)" size="2" />
						<method name="get_AllFiles()" size="7" />
						<method name=".cctor()" size="21" />
						<method name="AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)" size="29" />
						<method name="Cast(System.Security.IPermission)" size="31" />
						<method name=".ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)" size="35" />
						<method name="CreateLists()" size="45" />
						<method name="ThrowInvalidFlag(System.Security.Permissions.FileIOPermissionAccess,System.Boolean)" size="52" />
						<method name="IsEmpty()" size="64" />
						<method name="AddPathInternal(System.Security.Permissions.FileIOPermissionAccess,System.String)" size="85" />
						<method name="KeyIsSubsetOf(System.Collections.IList,System.Collections.IList)" size="128" />
						<method name="ThrowIfInvalidPath(System.String)" size="132" />
						<method name="GetPathList(System.Security.Permissions.FileIOPermissionAccess)" size="160" />
						<method name="IsSubsetOf(System.Security.IPermission)" size="184" />
						<method name="ToXml()" size="187" />
					</type>
				</namespace>
				<namespace name="System.Diagnostics" size="2020">
					<type name="Debugger" full-name="System.Diagnostics.Debugger" size="1">
						<method name="NotifyOfCrossThreadDependency()" size="1" />
					</type>
					<type name="StackTraceHiddenAttribute" full-name="System.Diagnostics.StackTraceHiddenAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="DebuggableAttribute" full-name="System.Diagnostics.DebuggableAttribute" size="14">
						<type name="DebuggingModes" full-name="System.Diagnostics.DebuggableAttribute/DebuggingModes" size="0" />
						<method name=".ctor(System.Diagnostics.DebuggableAttribute/DebuggingModes)" size="14" />
					</type>
					<type name="DebuggerTypeProxyAttribute" full-name="System.Diagnostics.DebuggerTypeProxyAttribute" size="39">
						<method name=".ctor(System.Type)" size="39" />
					</type>
					<type name="DebuggerDisplayAttribute" full-name="System.Diagnostics.DebuggerDisplayAttribute" size="52">
						<method name=".ctor(System.String)" size="52" />
					</type>
					<type name="StackFrame" full-name="System.Diagnostics.StackFrame" size="422">
						<method name="GetFileLineNumber()" size="7" />
						<method name="GetSecureFileName()" size="31" />
						<method name=".ctor()" size="65" />
						<method name=".ctor(System.Int32,System.Boolean)" size="67" />
						<method name="ToString()" size="203" />
					</type>
					<type name="StackTrace" full-name="System.Diagnostics.StackTrace" size="1464">
						<type name="TraceFormat" full-name="System.Diagnostics.StackTrace/TraceFormat" size="0" />
						<method name="ToString(System.Diagnostics.StackTrace/TraceFormat)" size="7" />
						<method name=".ctor(System.Exception,System.Boolean)" size="10" />
						<method name=".ctor()" size="15" />
						<method name="get_FrameCount()" size="19" />
						<method name="GetFrame(System.Int32)" size="24" />
						<method name="GetAotId()" size="64" />
						<method name=".ctor(System.Exception,System.Int32,System.Boolean)" size="67" />
						<method name="init_frames(System.Int32,System.Boolean)" size="90" />
						<method name="ToString()" size="111" />
						<method name="ConvertAsyncStateMachineMethod(System.Reflection.MethodBase&amp;,System.Type&amp;)" size="136" />
						<method name="AddFrames(System.Text.StringBuilder,System.Boolean,System.Boolean&amp;)" size="404" />
						<method name="GetFullNameForStackTrace(System.Text.StringBuilder,System.Reflection.MethodBase,System.Boolean,System.Boolean&amp;,System.Boolean&amp;)" size="487" />
					</type>
				</namespace>
				<namespace name="System.Buffers" size="2324">
					<type name="SpanAction`2" full-name="System.Buffers.SpanAction`2" size="0" />
					<type name="ArrayPool`1" full-name="System.Buffers.ArrayPool`1" size="24">
						<method name="get_Shared()" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
					</type>
					<type name="Utilities" full-name="System.Buffers.Utilities" size="89">
						<method name="GetMaxSizeForBucket(System.Int32)" size="8" />
						<method name="SelectBucketIndex(System.Int32)" size="81" />
					</type>
					<type name="ArrayPoolEventSource" full-name="System.Buffers.ArrayPoolEventSource" size="585">
						<type name="BufferAllocatedReason" full-name="System.Buffers.ArrayPoolEventSource/BufferAllocatedReason" size="0" />
						<method name="BufferTrimPoll(System.Int32,System.Int32)" size="10" />
						<method name="BufferReturned(System.Int32,System.Int32,System.Int32)" size="11" />
						<method name=".ctor()" size="54" />
						<method name="BufferRented(System.Int32,System.Int32,System.Int32,System.Int32)" size="215" />
						<method name="BufferAllocated(System.Int32,System.Int32,System.Int32,System.Int32,System.Buffers.ArrayPoolEventSource/BufferAllocatedReason)" size="273" />
					</type>
					<type name="TlsOverPerCoreLockedStacksArrayPool`1" full-name="System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1" size="1626">
						<type name="MemoryPressure" full-name="System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/MemoryPressure" size="0" />
						<type name="PerCoreLockedStacks" full-name="System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/PerCoreLockedStacks" size="207">
							<method name="Trim(System.UInt32,System.Int32,System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/MemoryPressure&lt;T&gt;,System.Int32[])" size="38" />
							<method name=".ctor()" size="54" />
							<method name="TryPush(T[])" size="56" />
							<method name="TryPop()" size="59" />
						</type>
						<type name="LockedStack" full-name="System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/LockedStack" size="444">
							<method name=".ctor()" size="19" />
							<method name="TryPop()" size="64" />
							<method name="TryPush(T[])" size="78" />
							<method name="Trim(System.UInt32,System.Int32,System.Buffers.TlsOverPerCoreLockedStacksArrayPool`1/MemoryPressure&lt;T&gt;,System.Int32)" size="283" />
						</type>
						<method name="GetTrimBuffers()" size="2" />
						<method name="get_Id()" size="7" />
						<method name="Gen2GcCallbackFunc(System.Object)" size="12" />
						<method name="CreatePerCoreLockedStacks(System.Int32)" size="31" />
						<method name="GetMemoryPressure()" size="57" />
						<method name=".ctor()" size="58" />
						<method name="Return(T[],System.Boolean)" size="232" />
						<method name="Rent(System.Int32)" size="254" />
						<method name="Trim()" size="291" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Proxies" size="2521">
					<type name="ProxyAttribute" full-name="System.Runtime.Remoting.Proxies.ProxyAttribute" size="36">
						<method name="CreateProxy(System.Runtime.Remoting.ObjRef,System.Type,System.Object,System.Runtime.Remoting.Contexts.Context)" size="13" />
						<method name="CreateInstance(System.Type)" size="23" />
					</type>
					<type name="TransparentProxy" full-name="System.Runtime.Remoting.Proxies.TransparentProxy" size="459">
						<method name=".ctor()" size="7" />
						<method name="get_IsContextBoundObject()" size="12" />
						<method name="InCurrentContext()" size="24" />
						<method name="GetProxyType()" size="30" />
						<method name="StoreRemoteField(System.IntPtr,System.IntPtr,System.Object)" size="183" />
						<method name="LoadRemoteFieldNew(System.IntPtr,System.IntPtr)" size="191" />
					</type>
					<type name="RemotingProxy" full-name="System.Runtime.Remoting.Proxies.RemotingProxy" size="838">
						<method name=".ctor(System.Type,System.String,System.Object[])" size="29" />
						<method name=".ctor(System.Type,System.Runtime.Remoting.ClientIdentity)" size="40" />
						<method name="Finalize()" size="42" />
						<method name="ActivateRemoteObject(System.Runtime.Remoting.Messaging.IMethodMessage)" size="47" />
						<method name=".cctor()" size="51" />
						<method name="get_TypeName()" size="58" />
						<method name="CanCastTo(System.Type,System.Object)" size="102" />
						<method name="AttachIdentity(System.Runtime.Remoting.Identity)" size="188" />
						<method name="Invoke(System.Runtime.Remoting.Messaging.IMessage)" size="281" />
					</type>
					<type name="RealProxy" full-name="System.Runtime.Remoting.Proxies.RealProxy" size="1188">
						<method name="get_ObjectIdentity()" size="7" />
						<method name="set_ObjectIdentity(System.Runtime.Remoting.Identity)" size="8" />
						<method name=".ctor()" size="14" />
						<method name=".ctor(System.Type,System.Runtime.Remoting.ClientIdentity)" size="21" />
						<method name="GetProxiedType()" size="51" />
						<method name=".ctor(System.Type,System.IntPtr,System.Object)" size="72" />
						<method name="GetAppDomainTarget()" size="74" />
						<method name="GetTransparentProxy()" size="97" />
						<method name="ProcessResponse(System.Runtime.Remoting.Messaging.IMethodReturnMessage,System.Runtime.Remoting.Messaging.MonoMethodMessage)" size="354" />
						<method name="PrivateInvoke(System.Runtime.Remoting.Proxies.RealProxy,System.Runtime.Remoting.Messaging.IMessage,System.Exception&amp;,System.Object[]&amp;)" size="446" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Channels" size="2646">
					<type name="IChannel" full-name="System.Runtime.Remoting.Channels.IChannel" size="0" />
					<type name="AsyncRequest" full-name="System.Runtime.Remoting.Channels.AsyncRequest" size="21">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="21" />
					</type>
					<type name="SinkProviderData" full-name="System.Runtime.Remoting.Channels.SinkProviderData" size="50">
						<method name="get_Children()" size="7" />
						<method name=".ctor(System.String)" size="36" />
					</type>
					<type name="CrossAppDomainData" full-name="System.Runtime.Remoting.Channels.CrossAppDomainData" size="51">
						<method name="get_DomainID()" size="7" />
						<method name=".ctor(System.Int32)" size="37" />
					</type>
					<type name="CrossAppDomainChannel" full-name="System.Runtime.Remoting.Channels.CrossAppDomainChannel" size="153">
						<method name="StartListening(System.Object)" size="1" />
						<method name="get_ChannelPriority()" size="3" />
						<method name="get_ChannelName()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="get_ChannelData()" size="11" />
						<method name="RegisterCrossAppDomainChannel()" size="39" />
						<method name="CreateMessageSink(System.String,System.Object,System.String&amp;)" size="75" />
					</type>
					<type name="CADSerializer" full-name="System.Runtime.Remoting.Channels.CADSerializer" size="189">
						<method name="DeserializeObject(System.IO.MemoryStream)" size="27" />
						<method name="DeserializeObjectSafe(System.Byte[])" size="31" />
						<method name="SerializeMessage(System.Runtime.Remoting.Messaging.IMessage)" size="39" />
						<method name="DeserializeMessage(System.IO.MemoryStream,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="53" />
					</type>
					<type name="CrossAppDomainSink" full-name="System.Runtime.Remoting.Channels.CrossAppDomainSink" size="470">
						<type name="ProcessMessageRes" full-name="System.Runtime.Remoting.Channels.CrossAppDomainSink/ProcessMessageRes" size="0" />
						<method name="get_TargetDomainId()" size="7" />
						<method name="&lt;AsyncProcessMessage&gt;b__10_0(System.Object)" size="13" />
						<method name=".ctor(System.Int32)" size="14" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="29" />
						<method name="SendAsyncMessage(System.Object)" size="34" />
						<method name=".cctor()" size="38" />
						<method name="ProcessMessageInDomain(System.Byte[],System.Runtime.Remoting.Messaging.CADMethodCallMessage)" size="69" />
						<method name="GetSink(System.Int32)" size="103" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="163" />
					</type>
					<type name="ChannelServices" full-name="System.Runtime.Remoting.Channels.ChannelServices" size="1712">
						<method name="IsLocalCall(System.Runtime.Remoting.Messaging.IMessage)" size="2" />
						<method name="get_CrossContextChannel()" size="6" />
						<method name="RegisterChannel(System.Runtime.Remoting.Channels.IChannel)" size="8" />
						<method name="SyncDispatchMessage(System.Runtime.Remoting.Messaging.IMessage)" size="38" />
						<method name="CheckReturnMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessage)" size="56" />
						<method name=".cctor()" size="68" />
						<method name="CheckIncomingMessage(System.Runtime.Remoting.Messaging.IMessage)" size="69" />
						<method name="CreateClientChannelSinkChain(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object[],System.String&amp;)" size="73" />
						<method name="GetCurrentChannelInfo()" size="125" />
						<method name="CreateProvider(System.Runtime.Remoting.ProviderData)" size="152" />
						<method name="CreateClientChannelSinkChain(System.String,System.Object,System.String&amp;)" size="238" />
						<method name="RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)" size="292" />
						<method name="RegisterChannelConfig(System.Runtime.Remoting.ChannelData)" size="585" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Contexts" size="2702">
					<type name="ContextCallbackObject" full-name="System.Runtime.Remoting.Contexts.ContextCallbackObject" size="0" />
					<type name="SynchronizedServerContextSink" full-name="System.Runtime.Remoting.Contexts.SynchronizedServerContextSink" size="101">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink,System.Runtime.Remoting.Contexts.SynchronizationAttribute)" size="21" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="40" />
					</type>
					<type name="SynchronizedContextReplySink" full-name="System.Runtime.Remoting.Contexts.SynchronizedContextReplySink" size="104">
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="6" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink,System.Runtime.Remoting.Contexts.SynchronizationAttribute,System.Boolean)" size="28" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="70" />
					</type>
					<type name="SynchronizedClientContextSink" full-name="System.Runtime.Remoting.Contexts.SynchronizedClientContextSink" size="141">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink,System.Runtime.Remoting.Contexts.SynchronizationAttribute)" size="21" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="53" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="67" />
					</type>
					<type name="DynamicPropertyCollection" full-name="System.Runtime.Remoting.Contexts.DynamicPropertyCollection" size="171">
						<type name="DynamicPropertyReg" full-name="System.Runtime.Remoting.Contexts.DynamicPropertyCollection/DynamicPropertyReg" size="0" />
						<method name="get_HasProperties()" size="15" />
						<method name="NotifyMessage(System.Boolean,System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" size="156" />
					</type>
					<type name="ContextAttribute" full-name="System.Runtime.Remoting.Contexts.ContextAttribute" size="186">
						<method name="Freeze(System.Runtime.Remoting.Contexts.Context)" size="1" />
						<method name="IsNewContextOK(System.Runtime.Remoting.Contexts.Context)" size="2" />
						<method name="get_Name()" size="7" />
						<method name=".ctor(System.String)" size="14" />
						<method name="GetHashCode()" size="22" />
						<method name="GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="28" />
						<method name="Equals(System.Object)" size="43" />
						<method name="IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="69" />
					</type>
					<type name="CrossContextChannel" full-name="System.Runtime.Remoting.Contexts.CrossContextChannel" size="407">
						<type name="ContextRestoreSink" full-name="System.Runtime.Remoting.Contexts.CrossContextChannel/ContextRestoreSink" size="114">
							<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="6" />
							<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink,System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Messaging.IMessage)" size="28" />
							<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="80" />
						</type>
						<method name=".ctor()" size="7" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="133" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="153" />
					</type>
					<type name="SynchronizationAttribute" full-name="System.Runtime.Remoting.Contexts.SynchronizationAttribute" size="534">
						<method name="get_IsReEntrant()" size="7" />
						<method name="GetClientContextSink(System.Runtime.Remoting.Messaging.IMessageSink)" size="8" />
						<method name=".ctor()" size="9" />
						<method name="GetPropertiesForNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="23" />
						<method name="ExitContext()" size="46" />
						<method name="AcquireLock()" size="62" />
						<method name=".ctor(System.Int32,System.Boolean)" size="65" />
						<method name="IsContextOK(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="70" />
						<method name="ReleaseLock()" size="87" />
						<method name="set_Locked(System.Boolean)" size="103" />
					</type>
					<type name="Context" full-name="System.Runtime.Remoting.Contexts.Context" size="1058">
						<method name="get_DefaultContext()" size="6" />
						<method name="SwitchToContext(System.Runtime.Remoting.Contexts.Context)" size="7" />
						<method name="get_IsDefaultContext()" size="10" />
						<method name=".cctor()" size="11" />
						<method name="Finalize()" size="16" />
						<method name="get_HasGlobalDynamicSinks()" size="20" />
						<method name="get_HasDynamicSinks()" size="22" />
						<method name="get_HasExitSinks()" size="29" />
						<method name="NotifyGlobalDynamicSinks(System.Boolean,System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" size="34" />
						<method name="NotifyDynamicSinks(System.Boolean,System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" size="38" />
						<method name=".ctor()" size="40" />
						<method name="get_NeedsContextSink()" size="51" />
						<method name="Freeze()" size="61" />
						<method name="SetProperty(System.Runtime.Remoting.Contexts.IContextProperty)" size="65" />
						<method name="GetProperty(System.String)" size="79" />
						<method name="CreateEnvoySink(System.MarshalByRefObject)" size="80" />
						<method name="CreateServerObjectSinkChain(System.MarshalByRefObject,System.Boolean)" size="86" />
						<method name="GetClientContextSinkChain()" size="108" />
						<method name="GetServerContextSinkChain()" size="114" />
						<method name="CreateNewContext(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="159" />
					</type>
				</namespace>
				<namespace name="Mono.Xml" size="2732">
					<type name="SmallXmlParserException" full-name="Mono.Xml.SmallXmlParserException" size="44">
						<method name=".ctor(System.String,System.Int32,System.Int32)" size="44" />
					</type>
					<type name="SmallXmlParser" full-name="Mono.Xml.SmallXmlParser" size="2688">
						<type name="IContentHandler" full-name="Mono.Xml.SmallXmlParser/IContentHandler" size="0" />
						<type name="AttrListImpl" full-name="Mono.Xml.SmallXmlParser/AttrListImpl" size="171">
							<method name="get_Names()" size="12" />
							<method name="GetValue(System.Int32)" size="13" />
							<method name="Clear()" size="23" />
							<method name="Add(System.String,System.String)" size="25" />
							<method name=".ctor()" size="29" />
							<method name="GetValue(System.String)" size="57" />
						</type>
						<method name="SkipWhitespaces()" size="8" />
						<method name="Peek()" size="12" />
						<method name="Error(System.String)" size="19" />
						<method name="IsWhitespace(System.Int32)" size="21" />
						<method name="Expect(System.Int32)" size="54" />
						<method name="SkipWhitespaces(System.Boolean)" size="55" />
						<method name="UnexpectedEndError()" size="58" />
						<method name="ReadComment()" size="59" />
						<method name="HandleWhitespaces()" size="62" />
						<method name="ReadCharacters()" size="68" />
						<method name="Read()" size="75" />
						<method name=".ctor()" size="76" />
						<method name="ReadUntil(System.Char,System.Boolean)" size="83" />
						<method name="Cleanup()" size="88" />
						<method name="Parse(System.IO.TextReader,Mono.Xml.SmallXmlParser/IContentHandler)" size="100" />
						<method name="ReadCDATASection()" size="116" />
						<method name="ReadAttribute(Mono.Xml.SmallXmlParser/AttrListImpl)" size="137" />
						<method name="IsNameChar(System.Char,System.Boolean)" size="150" />
						<method name="ReadName()" size="161" />
						<method name="ReadCharacterReference()" size="175" />
						<method name="ReadReference()" size="200" />
						<method name="ReadContent()" size="652" />
					</type>
				</namespace>
				<namespace name="System.Security" size="2983">
					<type name="IPermission" full-name="System.Security.IPermission" size="0" />
					<type name="SecurityManager" full-name="System.Security.SecurityManager" size="22">
						<method name=".cctor()" size="22" />
					</type>
					<type name="VerificationException" full-name="System.Security.VerificationException" size="32">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="CodeAccessPermission" full-name="System.Security.CodeAccessPermission" size="256">
						<method name=".ctor()" size="7" />
						<method name="ToString()" size="12" />
						<method name="Demand()" size="21" />
						<method name="ThrowInvalidPermission(System.Security.IPermission,System.Type)" size="33" />
						<method name="CheckPermissionState(System.Security.Permissions.PermissionState,System.Boolean)" size="41" />
						<method name="Equals(System.Object)" size="52" />
						<method name="Element(System.Int32)" size="83" />
					</type>
					<type name="SecurityException" full-name="System.Security.SecurityException" size="640">
						<method name="get_Demanded()" size="7" />
						<method name=".ctor()" size="17" />
						<method name=".ctor(System.String)" size="19" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="31" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="73" />
						<method name="ToString()" size="458" />
					</type>
					<type name="PermissionSet" full-name="System.Security.PermissionSet" size="681">
						<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="1" />
						<method name="Copy()" size="7" />
						<method name="SetReadOnly(System.Boolean)" size="8" />
						<method name="GetEnumerator()" size="12" />
						<method name=".ctor()" size="18" />
						<method name=".ctor(System.Security.Permissions.PermissionState)" size="20" />
						<method name=".ctor(System.Security.IPermission)" size="23" />
						<method name="GetHashCode()" size="27" />
						<method name="CasOnlyDemand(System.Int32)" size="31" />
						<method name=".cctor()" size="41" />
						<method name=".ctor(System.Security.PermissionSet)" size="88" />
						<method name="CopyTo(System.Array,System.Int32)" size="91" />
						<method name="Equals(System.Object)" size="142" />
						<method name="ToXml()" size="148" />
					</type>
					<type name="SecurityElement" full-name="System.Security.SecurityElement" size="1352">
						<type name="SecurityAttribute" full-name="System.Security.SecurityElement/SecurityAttribute" size="110">
							<method name="get_Name()" size="7" />
							<method name=".ctor(System.String,System.String)" size="96" />
						</type>
						<method name=".ctor(System.String)" size="9" />
						<method name="IsValidAttributeName(System.String)" size="20" />
						<method name="ToString()" size="22" />
						<method name="AddChild(System.Security.SecurityElement)" size="47" />
						<method name="set_Text(System.String)" size="51" />
						<method name=".ctor(System.String,System.String)" size="70" />
						<method name="GetAttribute(System.String)" size="83" />
						<method name="AddAttribute(System.String,System.String)" size="98" />
						<method name="Unescape(System.String)" size="102" />
						<method name=".cctor()" size="110" />
						<method name="Escape(System.String)" size="173" />
						<method name="ToXml(System.Text.StringBuilder&amp;,System.Int32)" size="397" />
					</type>
				</namespace>
				<namespace name="System.Collections.Concurrent" size="3901">
					<type name="IDictionaryDebugView`2" full-name="System.Collections.Concurrent.IDictionaryDebugView`2" size="0" />
					<type name="CDSCollectionETWBCLProvider" full-name="System.Collections.Concurrent.CDSCollectionETWBCLProvider" size="38">
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="ConcurrentDictionary_AcquiringAllLocks(System.Int32)" size="20" />
					</type>
					<type name="ConcurrentDictionary`2" full-name="System.Collections.Concurrent.ConcurrentDictionary`2" size="3863">
						<type name="Tables" full-name="System.Collections.Concurrent.ConcurrentDictionary`2/Tables" size="30">
							<method name=".ctor(System.Collections.Concurrent.ConcurrentDictionary`2/Node&lt;TKey,TValue&gt;[],System.Object[],System.Int32[])" size="30" />
						</type>
						<type name="Node" full-name="System.Collections.Concurrent.ConcurrentDictionary`2/Node" size="38">
							<method name=".ctor(TKey,TValue,System.Int32,System.Collections.Concurrent.ConcurrentDictionary`2/Node&lt;TKey,TValue&gt;)" size="38" />
						</type>
						<type name="DictionaryEnumerator" full-name="System.Collections.Concurrent.ConcurrentDictionary`2/DictionaryEnumerator" size="147">
							<method name="get_Current()" size="12" />
							<method name=".ctor(System.Collections.Concurrent.ConcurrentDictionary`2&lt;TKey,TValue&gt;)" size="19" />
							<method name="get_Key()" size="25" />
							<method name="get_Entry()" size="54" />
						</type>
						<type name="&lt;GetEnumerator&gt;d__35" full-name="System.Collections.Concurrent.ConcurrentDictionary`2/&lt;GetEnumerator&gt;d__35" size="245">
							<method name="System.IDisposable.Dispose()" size="1" />
							<method name="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_Current()" size="7" />
							<method name="System.Collections.IEnumerator.get_Current()" size="12" />
							<method name=".ctor(System.Int32)" size="14" />
							<method name="MoveNext()" size="211" />
						</type>
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly()" size="2" />
						<method name="get_DefaultConcurrencyLevel()" size="6" />
						<method name="System.Collections.IEnumerable.GetEnumerator()" size="7" />
						<method name="OnSerialized(System.Runtime.Serialization.StreamingContext)" size="8" />
						<method name="GetBucket(System.Int32,System.Int32)" size="10" />
						<method name="ThrowKeyNullException()" size="11" />
						<method name="GetEnumerator()" size="14" />
						<method name=".ctor()" size="16" />
						<method name="GetBucketAndLockNo(System.Int32,System.Int32&amp;,System.Int32&amp;,System.Int32,System.Int32)" size="19" />
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;)" size="21" />
						<method name="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(TKey,TValue)" size="22" />
						<method name="get_Count()" size="30" />
						<method name="ReleaseLocks(System.Int32,System.Int32)" size="33" />
						<method name="TryGetValue(TKey,TValue&amp;)" size="34" />
						<method name="TryAdd(TKey,TValue)" size="38" />
						<method name="set_Item(TKey,TValue)" size="39" />
						<method name="OnSerializing(System.Runtime.Serialization.StreamingContext)" size="50" />
						<method name="AcquireLocks(System.Int32,System.Int32,System.Int32&amp;)" size="51" />
						<method name="GetCountInternal()" size="52" />
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;)" size="54" />
						<method name="System.Collections.IDictionary.set_Item(System.Object,System.Object)" size="65" />
						<method name="AcquireAllLocks(System.Int32&amp;)" size="70" />
						<method name="GetOrAdd(TKey,System.Func`2&lt;TKey,TValue&gt;)" size="74" />
						<method name="CopyToPairs(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;[],System.Int32)" size="76" />
						<method name="CopyToObjects(System.Object[],System.Int32)" size="77" />
						<method name="CopyToEntries(System.Collections.DictionaryEntry[],System.Int32)" size="86" />
						<method name="IsValueWriteAtomic()" size="99" />
						<method name="OnDeserialized(System.Runtime.Serialization.StreamingContext)" size="101" />
						<method name="ToArray()" size="102" />
						<method name="TryGetValueInternal(TKey,System.Int32,TValue&amp;)" size="108" />
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;[],System.Int32)" size="139" />
						<method name=".ctor(System.Int32,System.Int32,System.Boolean,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" size="152" />
						<method name="InitializeFromCollection(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;&gt;)" size="156" />
						<method name="System.Collections.ICollection.CopyTo(System.Array,System.Int32)" size="214" />
						<method name="TryRemoveInternal(TKey,TValue&amp;,System.Boolean,TValue)" size="309" />
						<method name="TryAddInternal(TKey,System.Int32,TValue,System.Boolean,System.Boolean,TValue&amp;)" size="375" />
						<method name="GrowTable(System.Collections.Concurrent.ConcurrentDictionary`2/Tables&lt;TKey,TValue&gt;)" size="519" />
					</type>
				</namespace>
				<namespace name="System.Runtime.InteropServices" size="3916">
					<type name="CharSet" full-name="System.Runtime.InteropServices.CharSet" size="0" />
					<type name="ComImportAttribute" full-name="System.Runtime.InteropServices.ComImportAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="MarshalAsAttribute" full-name="System.Runtime.InteropServices.MarshalAsAttribute" size="12">
						<method name="Copy()" size="12" />
					</type>
					<type name="InterfaceTypeAttribute" full-name="System.Runtime.InteropServices.InterfaceTypeAttribute" size="14">
						<method name=".ctor(System.Runtime.InteropServices.ComInterfaceType)" size="14" />
					</type>
					<type name="TypeLibImportClassAttribute" full-name="System.Runtime.InteropServices.TypeLibImportClassAttribute" size="19">
						<method name=".ctor(System.Type)" size="19" />
					</type>
					<type name="GuidAttribute" full-name="System.Runtime.InteropServices.GuidAttribute" size="21">
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.String)" size="14" />
					</type>
					<type name="ExtensibleClassFactory" full-name="System.Runtime.InteropServices.ExtensibleClassFactory" size="28">
						<method name=".cctor()" size="11" />
						<method name="GetObjectCreationCallback(System.Type)" size="17" />
					</type>
					<type name="InvalidOleVariantTypeException" full-name="System.Runtime.InteropServices.InvalidOleVariantTypeException" size="32">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="ComCompatibleVersionAttribute" full-name="System.Runtime.InteropServices.ComCompatibleVersionAttribute" size="36">
						<method name=".ctor(System.Int32,System.Int32,System.Int32,System.Int32)" size="36" />
					</type>
					<type name="MarshalDirectiveException" full-name="System.Runtime.InteropServices.MarshalDirectiveException" size="51">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="SafeBuffer" full-name="System.Runtime.InteropServices.SafeBuffer" size="123">
						<method name="NotInitialized()" size="11" />
						<method name=".cctor()" size="29" />
						<method name="ReleasePointer()" size="31" />
						<method name="AcquirePointer(System.Byte*&amp;)" size="52" />
					</type>
					<type name="MemoryMarshal" full-name="System.Runtime.InteropServices.MemoryMarshal" size="154">
						<method name="CreateReadOnlySpan(T&amp;,System.Int32)" size="8" />
						<method name="GetReference(System.Span`1&lt;T&gt;)" size="15" />
						<method name="GetNonNullPinnableReference(System.Span`1&lt;T&gt;)" size="32" />
						<method name="AsBytes(System.Span`1&lt;T&gt;)" size="52" />
					</type>
					<type name="GCHandle" full-name="System.Runtime.InteropServices.GCHandle" size="174">
						<method name="Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)" size="8" />
						<method name="get_IsAllocated()" size="10" />
						<method name="GetHashCode()" size="12" />
						<method name="op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)" size="15" />
						<method name=".ctor(System.Object,System.Runtime.InteropServices.GCHandleType)" size="26" />
						<method name="Equals(System.Object)" size="28" />
						<method name="get_Target()" size="31" />
						<method name="Free()" size="44" />
					</type>
					<type name="COMException" full-name="System.Runtime.InteropServices.COMException" size="178">
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.String)" size="8" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.Int32)" size="15" />
						<method name="ToString()" size="139" />
					</type>
					<type name="ExternalException" full-name="System.Runtime.InteropServices.ExternalException" size="186">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
						<method name="ToString()" size="135" />
					</type>
					<type name="DllImportAttribute" full-name="System.Runtime.InteropServices.DllImportAttribute" size="347">
						<method name=".ctor(System.String,System.String,System.Runtime.InteropServices.CharSet,System.Boolean,System.Boolean,System.Boolean,System.Runtime.InteropServices.CallingConvention,System.Boolean,System.Boolean)" size="76" />
						<method name="GetCustomAttribute(System.Reflection.RuntimeMethodInfo)" size="271" />
					</type>
					<type name="SafeHandle" full-name="System.Runtime.InteropServices.SafeHandle" size="447">
						<method name="DangerousGetHandle()" size="7" />
						<method name="SetHandle(System.IntPtr)" size="8" />
						<method name="get_IsClosed()" size="12" />
						<method name="InternalFinalize()" size="16" />
						<method name="Finalize()" size="17" />
						<method name="InternalDispose()" size="28" />
						<method name="SetHandleAsInvalid()" size="37" />
						<method name=".ctor(System.IntPtr,System.Boolean)" size="44" />
						<method name="DangerousAddRef(System.Boolean&amp;)" size="65" />
						<method name="DangerousReleaseInternal(System.Boolean)" size="172" />
					</type>
					<type name="Marshal" full-name="System.Runtime.InteropServices.Marshal" size="1913">
						<type name="&lt;&gt;c" full-name="System.Runtime.InteropServices.Marshal/&lt;&gt;c" size="29">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
						</type>
						<type name="MarshalerInstanceKeyComparer" full-name="System.Runtime.InteropServices.Marshal/MarshalerInstanceKeyComparer" size="33">
							<method name=".ctor()" size="7" />
							<method name="Equals(System.ValueTuple`2&lt;System.Type,System.String&gt;,System.ValueTuple`2&lt;System.Type,System.String&gt;)" size="12" />
							<method name="GetHashCode(System.ValueTuple`2&lt;System.Type,System.String&gt;)" size="14" />
						</type>
						<method name="copy_from_unmanaged(System.IntPtr,System.Int32,System.Array,System.Int32)" size="12" />
						<method name="ThrowExceptionForHR(System.Int32)" size="13" />
						<method name="GetIUnknownForObject(System.Object)" size="14" />
						<method name="skip_fixed(System.Array,System.Int32)" size="19" />
						<method name=".cctor()" size="33" />
						<method name="GetObjectForIUnknown(System.IntPtr)" size="34" />
						<method name="AddRef(System.IntPtr)" size="36" />
						<method name="QueryInterface(System.IntPtr,System.Guid&amp;,System.IntPtr&amp;)" size="38" />
						<method name="Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" size="44" />
						<method name="GetExceptionForHR(System.Int32,System.IntPtr)" size="194" />
						<method name="GetCustomMarshalerInstance(System.Type,System.String)" size="361" />
						<method name="ConvertHrToException(System.Int32)" size="955" />
					</type>
				</namespace>
				<namespace name="Mono.Math" size="4573">
					<type name="BigInteger" full-name="Mono.Math.BigInteger" size="4573">
						<type name="Sign" full-name="Mono.Math.BigInteger/Sign" size="0" />
						<type name="ModulusRing" full-name="Mono.Math.BigInteger/ModulusRing" size="530">
							<method name=".ctor(Mono.Math.BigInteger)" size="80" />
							<method name="Difference(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="139" />
							<method name="BarrettReduction(Mono.Math.BigInteger)" size="311" />
						</type>
						<type name="Kernel" full-name="Mono.Math.BigInteger/Kernel" size="2737">
							<method name="DwordMod(Mono.Math.BigInteger,System.UInt32)" size="45" />
							<method name="modInverse(Mono.Math.BigInteger,System.UInt32)" size="62" />
							<method name="SingleByteDivideInPlace(Mono.Math.BigInteger,System.UInt32)" size="64" />
							<method name="DwordDivMod(Mono.Math.BigInteger,System.UInt32)" size="97" />
							<method name="RightShift(Mono.Math.BigInteger,System.Int32)" size="142" />
							<method name="Compare(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="151" />
							<method name="LeftShift(Mono.Math.BigInteger,System.Int32)" size="169" />
							<method name="MinusEq(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="186" />
							<method name="Subtract(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="192" />
							<method name="Multiply(System.UInt32[],System.UInt32,System.UInt32,System.UInt32[],System.UInt32,System.UInt32,System.UInt32[],System.UInt32)" size="242" />
							<method name="modInverse(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="247" />
							<method name="MultiplyMod2p32pmod(System.UInt32[],System.Int32,System.Int32,System.UInt32[],System.Int32,System.Int32,System.UInt32[],System.Int32,System.Int32)" size="254" />
							<method name="PlusEq(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="257" />
							<method name="multiByteDivide(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="629" />
						</type>
						<method name="op_Implicit(System.UInt32)" size="7" />
						<method name="op_Modulus(Mono.Math.BigInteger,System.UInt32)" size="8" />
						<method name="ToString()" size="9" />
						<method name="op_Modulus(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="10" />
						<method name="ToString(System.UInt32)" size="13" />
						<method name="op_GreaterThanOrEqual(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="14" />
						<method name="op_Implicit(System.Int32)" size="22" />
						<method name=".cctor()" size="27" />
						<method name="Clear()" size="29" />
						<method name=".ctor(System.UInt32)" size="30" />
						<method name="GetHashCode()" size="32" />
						<method name=".ctor(Mono.Math.BigInteger/Sign,System.UInt32)" size="33" />
						<method name="op_Equality(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="37" />
						<method name="op_Equality(Mono.Math.BigInteger,System.UInt32)" size="38" />
						<method name="op_Inequality(Mono.Math.BigInteger,System.UInt32)" size="41" />
						<method name=".ctor(Mono.Math.BigInteger)" size="48" />
						<method name="Normalize()" size="65" />
						<method name="Equals(System.Object)" size="66" />
						<method name=".ctor(Mono.Math.BigInteger,System.UInt32)" size="71" />
						<method name="op_Subtraction(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="98" />
						<method name="ToString(System.UInt32,System.String)" size="133" />
						<method name="op_Multiply(Mono.Math.BigInteger,Mono.Math.BigInteger)" size="149" />
						<method name=".ctor(System.Byte[])" size="241" />
					</type>
				</namespace>
				<namespace name="System.Runtime.CompilerServices" size="4789">
					<type name="IAsyncStateMachine" full-name="System.Runtime.CompilerServices.IAsyncStateMachine" size="0" />
					<type name="RuntimeFeature" full-name="System.Runtime.CompilerServices.RuntimeFeature" size="6">
						<method name="get_IsDynamicCodeSupported()" size="2" />
					</type>
					<type name="CompilerGeneratedAttribute" full-name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="AsyncStateMachineAttribute" full-name="System.Runtime.CompilerServices.AsyncStateMachineAttribute" size="8">
						<method name=".ctor(System.Type)" size="8" />
					</type>
					<type name="DateTimeConstantAttribute" full-name="System.Runtime.CompilerServices.DateTimeConstantAttribute" size="12">
						<method name="get_Value()" size="12" />
					</type>
					<type name="DefaultDependencyAttribute" full-name="System.Runtime.CompilerServices.DefaultDependencyAttribute" size="14">
						<method name=".ctor(System.Runtime.CompilerServices.LoadHint)" size="14" />
					</type>
					<type name="RuntimeCompatibilityAttribute" full-name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" size="15">
						<method name=".ctor()" size="7" />
						<method name="set_WrapNonExceptionThrows(System.Boolean)" size="8" />
					</type>
					<type name="FixedBufferAttribute" full-name="System.Runtime.CompilerServices.FixedBufferAttribute" size="21">
						<method name=".ctor(System.Type,System.Int32)" size="21" />
					</type>
					<type name="TupleElementNamesAttribute" full-name="System.Runtime.CompilerServices.TupleElementNamesAttribute" size="28">
						<method name=".ctor(System.String[])" size="28" />
					</type>
					<type name="InternalsVisibleToAttribute" full-name="System.Runtime.CompilerServices.InternalsVisibleToAttribute" size="29">
						<method name="set_AllInternalsVisible(System.Boolean)" size="8" />
						<method name=".ctor(System.String)" size="21" />
					</type>
					<type name="DecimalConstantAttribute" full-name="System.Runtime.CompilerServices.DecimalConstantAttribute" size="35">
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)" size="28" />
					</type>
					<type name="TypeForwardedFromAttribute" full-name="System.Runtime.CompilerServices.TypeForwardedFromAttribute" size="40">
						<method name="get_AssemblyFullName()" size="7" />
						<method name=".ctor(System.String)" size="33" />
					</type>
					<type name="TaskAwaiter`1" full-name="System.Runtime.CompilerServices.TaskAwaiter`1" size="46">
						<method name=".ctor(System.Threading.Tasks.Task`1&lt;TResult&gt;)" size="8" />
						<method name="UnsafeOnCompleted(System.Action)" size="15" />
						<method name="GetResult()" size="23" />
					</type>
					<type name="Unsafe" full-name="System.Runtime.CompilerServices.Unsafe" size="84">
						<method name="As(System.Object)" size="2" />
						<method name="AsPointer(T&amp;)" size="3" />
						<method name="AddByteOffset(T&amp;,System.IntPtr)" size="4" />
						<method name="AreSame(T&amp;,T&amp;)" size="5" />
						<method name="Read(System.Void*)" size="7" />
						<method name="ReadUnaligned(System.Byte&amp;)" size="10" />
						<method name="Add(T&amp;,System.IntPtr)" size="11" />
						<method name="Add(T&amp;,System.Int32)" size="12" />
						<method name="AddByteOffset(T&amp;,System.UInt64)" size="14" />
					</type>
					<type name="AsyncTaskCache" full-name="System.Runtime.CompilerServices.AsyncTaskCache" size="90">
						<method name="CreateCacheableTask(TResult)" size="22" />
						<method name=".cctor()" size="33" />
						<method name="CreateInt32Tasks()" size="35" />
					</type>
					<type name="ConfiguredTaskAwaitable`1" full-name="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1" size="91">
						<type name="ConfiguredTaskAwaiter" full-name="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/ConfiguredTaskAwaiter" size="70">
							<method name="get_IsCompleted()" size="12" />
							<method name=".ctor(System.Threading.Tasks.Task`1&lt;TResult&gt;,System.Boolean)" size="15" />
							<method name="UnsafeOnCompleted(System.Action)" size="20" />
							<method name="GetResult()" size="23" />
						</type>
						<method name="GetAwaiter()" size="7" />
						<method name=".ctor(System.Threading.Tasks.Task`1&lt;TResult&gt;,System.Boolean)" size="14" />
					</type>
					<type name="RuntimeWrappedException" full-name="System.Runtime.CompilerServices.RuntimeWrappedException" size="102">
						<method name=".ctor(System.Object)" size="30" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="36" />
					</type>
					<type name="RuntimeHelpers" full-name="System.Runtime.CompilerServices.RuntimeHelpers" size="144">
						<method name="PrepareConstrainedRegions()" size="1" />
						<method name="TryEnsureSufficientExecutionStack()" size="6" />
						<method name="GetHashCode(System.Object)" size="7" />
						<method name="IsReferenceOrContainsReferences()" size="40" />
						<method name="InitializeArray(System.Array,System.RuntimeFieldHandle)" size="42" />
						<method name="RunClassConstructor(System.RuntimeTypeHandle)" size="48" />
					</type>
					<type name="TaskAwaiter" full-name="System.Runtime.CompilerServices.TaskAwaiter" size="371">
						<type name="&lt;&gt;c__DisplayClass11_0" full-name="System.Runtime.CompilerServices.TaskAwaiter/&lt;&gt;c__DisplayClass11_0" size="86">
							<method name=".ctor()" size="7" />
							<method name="&lt;OutputWaitEtwEvents&gt;b__0()" size="79" />
						</type>
						<method name="UnsafeOnCompleted(System.Action)" size="15" />
						<method name="OnCompletedInternal(System.Threading.Tasks.Task,System.Action,System.Boolean,System.Boolean)" size="40" />
						<method name="HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)" size="47" />
						<method name="ThrowForNonSuccess(System.Threading.Tasks.Task)" size="75" />
						<method name="OutputWaitEtwEvents(System.Threading.Tasks.Task,System.Action)" size="93" />
					</type>
					<type name="AsyncMethodBuilderCore" full-name="System.Runtime.CompilerServices.AsyncMethodBuilderCore" size="761">
						<type name="&lt;&gt;c" full-name="System.Runtime.CompilerServices.AsyncMethodBuilderCore/&lt;&gt;c" size="42">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;ThrowAsync&gt;b__7_0(System.Object)" size="12" />
						</type>
						<type name="&lt;&gt;c__DisplayClass5_0" full-name="System.Runtime.CompilerServices.AsyncMethodBuilderCore/&lt;&gt;c__DisplayClass5_0" size="44">
							<method name=".ctor()" size="7" />
							<method name="&lt;OutputAsyncCausalityEvents&gt;b__0()" size="37" />
						</type>
						<type name="ContinuationWrapper" full-name="System.Runtime.CompilerServices.AsyncMethodBuilderCore/ContinuationWrapper" size="51">
							<method name="Invoke()" size="12" />
							<method name=".ctor(System.Action,System.Action,System.Threading.Tasks.Task)" size="39" />
						</type>
						<type name="MoveNextRunner" full-name="System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner" size="114">
							<method name="InvokeMoveNext(System.Object)" size="12" />
							<method name=".ctor(System.Threading.ExecutionContext,System.Runtime.CompilerServices.IAsyncStateMachine)" size="21" />
							<method name="Run()" size="81" />
						</type>
						<method name="CreateContinuationWrapper(System.Action,System.Action,System.Threading.Tasks.Task)" size="20" />
						<method name="TryGetContinuationTask(System.Action)" size="27" />
						<method name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" size="46" />
						<method name="OutputAsyncCausalityEvents(System.Threading.Tasks.Task,System.Action)" size="50" />
						<method name="PostBoxInitialization(System.Runtime.CompilerServices.IAsyncStateMachine,System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner,System.Threading.Tasks.Task)" size="96" />
						<method name="ThrowAsync(System.Exception,System.Threading.SynchronizationContext)" size="130" />
						<method name="GetCompletionAction(System.Threading.Tasks.Task,System.Runtime.CompilerServices.AsyncMethodBuilderCore/MoveNextRunner&amp;)" size="141" />
					</type>
					<type name="AsyncTaskMethodBuilder`1" full-name="System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1" size="1012">
						<method name="Create()" size="10" />
						<method name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" size="13" />
						<method name=".cctor()" size="20" />
						<method name="get_Task()" size="25" />
						<method name="Start(TStateMachine&amp;)" size="67" />
						<method name="SetException(System.Exception)" size="82" />
						<method name="SetResult(TResult)" size="87" />
						<method name="AwaitUnsafeOnCompleted(TAwaiter&amp;,TStateMachine&amp;)" size="100" />
						<method name="GetTaskForResult(TResult)" size="608" />
					</type>
					<type name="ConditionalWeakTable`2" full-name="System.Runtime.CompilerServices.ConditionalWeakTable`2" size="1675">
						<type name="Enumerator" full-name="System.Runtime.CompilerServices.ConditionalWeakTable`2/Enumerator" size="275">
							<method name="System.Collections.IEnumerator.get_Current()" size="12" />
							<method name="Finalize()" size="16" />
							<method name="get_Current()" size="21" />
							<method name=".ctor(System.Runtime.CompilerServices.ConditionalWeakTable`2&lt;TKey,TValue&gt;)" size="28" />
							<method name="Dispose()" size="33" />
							<method name="MoveNext()" size="165" />
						</type>
						<method name="System.Collections.IEnumerable.GetEnumerator()" size="7" />
						<method name="Finalize()" size="10" />
						<method name=".ctor()" size="42" />
						<method name="RecomputeSize()" size="60" />
						<method name="TryGetValue(TKey,TValue&amp;)" size="180" />
						<method name="Remove(TKey)" size="185" />
						<method name="Add(TKey,TValue)" size="274" />
						<method name="RehashWithoutResize()" size="276" />
						<method name="Rehash()" size="306" />
					</type>
				</namespace>
				<namespace name="System.Reflection.Emit" size="6411">
					<type name="PackingSize" full-name="System.Reflection.Emit.PackingSize" size="0" />
					<type name="PointerType" full-name="System.Reflection.Emit.PointerType" size="27">
						<method name="IsPointerImpl()" size="2" />
						<method name=".ctor(System.Type)" size="8" />
						<method name="FormatName(System.String)" size="17" />
					</type>
					<type name="ModuleBuilder" full-name="System.Reflection.Emit.ModuleBuilder" size="58">
						<method name="Mono_GetGuid(System.Reflection.Emit.ModuleBuilder)" size="7" />
						<method name=".cctor()" size="51" />
					</type>
					<type name="Label" full-name="System.Reflection.Emit.Label" size="67">
						<method name="Equals(System.Reflection.Emit.Label)" size="15" />
						<method name="Equals(System.Object)" size="37" />
					</type>
					<type name="ByRefType" full-name="System.Reflection.Emit.ByRefType" size="71">
						<method name="IsByRefImpl()" size="2" />
						<method name=".ctor(System.Type)" size="8" />
						<method name="MakeArrayType()" size="11" />
						<method name="FormatName(System.String)" size="17" />
					</type>
					<type name="FieldOnTypeBuilderInst" full-name="System.Reflection.Emit.FieldOnTypeBuilderInst" size="80">
						<method name="IsDefined(System.Type,System.Boolean)" size="6" />
						<method name="get_DeclaringType()" size="7" />
						<method name="get_Name()" size="12" />
					</type>
					<type name="PropertyBuilder" full-name="System.Reflection.Emit.PropertyBuilder" size="81">
						<method name="get_DeclaringType()" size="7" />
						<method name="not_supported()" size="11" />
					</type>
					<type name="ArrayType" full-name="System.Reflection.Emit.ArrayType" size="127">
						<method name="IsArrayImpl()" size="2" />
						<method name=".ctor(System.Type,System.Int32)" size="15" />
						<method name="GetArrayRank()" size="17" />
						<method name="FormatName(System.String)" size="93" />
					</type>
					<type name="FieldBuilder" full-name="System.Reflection.Emit.FieldBuilder" size="131">
						<method name="get_Attributes()" size="7" />
						<method name="CreateNotSupportedException()" size="11" />
						<method name="GetCustomAttributes(System.Boolean)" size="28" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="29" />
					</type>
					<type name="UnmanagedMarshal" full-name="System.Reflection.Emit.UnmanagedMarshal" size="136">
						<method name=".ctor(System.Runtime.InteropServices.UnmanagedType,System.Runtime.InteropServices.UnmanagedType)" size="28" />
						<method name="DefineLPArrayInternal(System.Runtime.InteropServices.UnmanagedType,System.Int32,System.Int32)" size="30" />
						<method name="DefineCustom(System.Type,System.String,System.String,System.Guid)" size="78" />
					</type>
					<type name="ConstructorBuilder" full-name="System.Reflection.Emit.ConstructorBuilder" size="142">
						<method name="GetMethodImplementationFlags()" size="7" />
						<method name="not_supported()" size="11" />
						<method name="get_Name()" size="23" />
						<method name="GetParameters()" size="27" />
					</type>
					<type name="MethodBuilder" full-name="System.Reflection.Emit.MethodBuilder" size="151">
						<method name="get_MethodHandle()" size="7" />
						<method name="NotSupported()" size="11" />
						<method name="GetParameters()" size="27" />
						<method name="GetCustomAttributes(System.Boolean)" size="28" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="29" />
					</type>
					<type name="ConstructorOnTypeBuilderInst" full-name="System.Reflection.Emit.ConstructorOnTypeBuilderInst" size="154">
						<method name="Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" size="6" />
						<method name="get_DeclaringType()" size="7" />
						<method name="get_Name()" size="12" />
						<method name="GetCustomAttributes(System.Boolean)" size="13" />
						<method name="IsDefined(System.Type,System.Boolean)" size="14" />
						<method name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" size="19" />
						<method name="GetParameters()" size="26" />
					</type>
					<type name="GenericTypeParameterBuilder" full-name="System.Reflection.Emit.GenericTypeParameterBuilder" size="171">
						<method name="GetAttributeFlagsImpl()" size="2" />
						<method name="not_supported()" size="6" />
						<method name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="7" />
						<method name="get_Assembly()" size="12" />
					</type>
					<type name="EnumBuilder" full-name="System.Reflection.Emit.EnumBuilder" size="359">
						<method name="IsArrayImpl()" size="2" />
						<method name="get_UnderlyingSystemType()" size="7" />
						<method name="CreateNotSupportedException()" size="11" />
						<method name="get_Assembly()" size="12" />
						<method name="GetConstructors(System.Reflection.BindingFlags)" size="13" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="14" />
						<method name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="19" />
						<method name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="39" />
					</type>
					<type name="ILGenerator" full-name="System.Reflection.Emit.ILGenerator" size="413">
						<type name="LabelFixup" full-name="System.Reflection.Emit.ILGenerator/LabelFixup" size="0" />
						<method name="get_ILOffset()" size="7" />
						<method name="emit_int(System.Int32)" size="137" />
						<method name="label_fixup(System.Reflection.MethodBase)" size="269" />
					</type>
					<type name="DynamicMethod" full-name="System.Reflection.Emit.DynamicMethod" size="415">
						<method name="GetMethodImplementationFlags()" size="2" />
						<method name="GetParameters()" size="7" />
						<method name="GetCustomAttributes(System.Boolean)" size="21" />
						<method name="IsDefined(System.Type,System.Boolean)" size="42" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="65" />
						<method name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" size="73" />
						<method name="CreateDynMethod()" size="180" />
					</type>
					<type name="SymbolType" full-name="System.Reflection.Emit.SymbolType" size="582">
						<method name="IsPrimitiveImpl()" size="2" />
						<method name="GetElementType()" size="7" />
						<method name="MakeArrayType()" size="8" />
						<method name="get_BaseType()" size="11" />
						<method name="get_Namespace()" size="12" />
						<method name="HasElementTypeImpl()" size="13" />
						<method name=".ctor(System.Type)" size="14" />
						<method name="get_GUID()" size="16" />
						<method name="MakeArrayType(System.Int32)" size="18" />
						<method name="get_Module()" size="36" />
						<method name="get_AssemblyQualifiedName()" size="51" />
					</type>
					<type name="TypeBuilderInstantiation" full-name="System.Reflection.Emit.TypeBuilderInstantiation" size="699">
						<method name="get_UnderlyingSystemType()" size="2" />
						<method name="GetInterfaces()" size="6" />
						<method name="GetGenericTypeDefinition()" size="7" />
						<method name="MakeArrayType()" size="8" />
						<method name="get_FullName()" size="9" />
						<method name="get_BaseType()" size="12" />
						<method name="MakeArrayType(System.Int32)" size="18" />
						<method name=".ctor(System.Type,System.Type[])" size="21" />
						<method name="GetCustomAttributes(System.Boolean)" size="27" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="28" />
						<method name="GetGenericArguments()" size="29" />
						<method name="get_IsCreated()" size="30" />
						<method name="get_ContainsGenericParameters()" size="35" />
						<method name="format_name(System.Boolean,System.Boolean)" size="241" />
					</type>
					<type name="MethodOnTypeBuilderInst" full-name="System.Reflection.Emit.MethodOnTypeBuilderInst" size="781">
						<method name="IsDefined(System.Type,System.Boolean)" size="6" />
						<method name="get_DeclaringType()" size="7" />
						<method name="get_Name()" size="12" />
						<method name="GetGenericMethodDefinition()" size="17" />
						<method name="get_IsGenericMethodDefinition()" size="25" />
						<method name="GetGenericArguments()" size="54" />
						<method name=".ctor(System.Reflection.Emit.MethodOnTypeBuilderInst,System.Type[])" size="65" />
						<method name="ToString()" size="76" />
						<method name=".ctor(System.Reflection.MethodInfo,System.Type[])" size="79" />
						<method name="ExtractBaseMethod(System.Reflection.MethodInfo)" size="94" />
						<method name="MakeGenericMethod(System.Type[])" size="126" />
					</type>
					<type name="TypeBuilder" full-name="System.Reflection.Emit.TypeBuilder" size="1766">
						<method name="IsArrayImpl()" size="2" />
						<method name="GetElementType()" size="6" />
						<method name="GetAttributeFlagsImpl()" size="7" />
						<method name="GetMethods(System.Reflection.BindingFlags)" size="11" />
						<method name="get_Assembly()" size="12" />
						<method name="IsCOMObjectImpl()" size="16" />
						<method name="get_GUID()" size="18" />
						<method name="GetCustomAttributes(System.Boolean)" size="19" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="20" />
						<method name="HasElementTypeImpl()" size="22" />
						<method name="IsDefined(System.Type,System.Boolean)" size="23" />
						<method name="GetConstructors(System.Reflection.BindingFlags)" size="27" />
						<method name="get_AssemblyQualifiedName()" size="33" />
						<method name="GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="45" />
						<method name="get_UnderlyingSystemType()" size="62" />
						<method name="GetInterfaces()" size="63" />
						<method name="GetNestedType(System.String,System.Reflection.BindingFlags)" size="97" />
						<method name="IsAssignableTo(System.Type)" size="157" />
						<method name="GetField(System.String,System.Reflection.BindingFlags)" size="158" />
						<method name="GetFields(System.Reflection.BindingFlags)" size="186" />
						<method name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="239" />
						<method name="GetMethodsByName(System.String,System.Reflection.BindingFlags,System.Boolean,System.Type)" size="436" />
					</type>
				</namespace>
				<namespace name="System.Collections" size="8552">
					<type name="ICollection" full-name="System.Collections.ICollection" size="0" />
					<type name="DictionaryEntry" full-name="System.Collections.DictionaryEntry" size="29">
						<method name="get_Key()" size="7" />
						<method name=".ctor(System.Object,System.Object)" size="15" />
					</type>
					<type name="CompatibleComparer" full-name="System.Collections.CompatibleComparer" size="156">
						<method name="get_HashCodeProvider()" size="7" />
						<method name="Equals(System.Object,System.Object)" size="12" />
						<method name=".ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" size="21" />
						<method name="GetHashCode(System.Object)" size="42" />
						<method name="Compare(System.Object,System.Object)" size="67" />
					</type>
					<type name="HashHelpers" full-name="System.Collections.HashHelpers" size="212">
						<method name=".cctor()" size="24" />
						<method name="get_SerializationInfoTable()" size="30" />
						<method name="ExpandPrime(System.Int32)" size="33" />
						<method name="IsPrime(System.Int32)" size="40" />
						<method name="GetPrime(System.Int32)" size="85" />
					</type>
					<type name="Comparer" full-name="System.Collections.Comparer" size="247">
						<method name=".cctor()" size="31" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="32" />
						<method name=".ctor(System.Globalization.CultureInfo)" size="33" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="53" />
						<method name="Compare(System.Object,System.Object)" size="98" />
					</type>
					<type name="Stack" full-name="System.Collections.Stack" size="865">
						<type name="StackDebugView" full-name="System.Collections.Stack/StackDebugView" size="0" />
						<type name="StackEnumerator" full-name="System.Collections.Stack/StackEnumerator" size="270">
							<method name="Clone()" size="7" />
							<method name=".ctor(System.Collections.Stack)" size="46" />
							<method name="get_Current()" size="48" />
							<method name="MoveNext()" size="169" />
						</type>
						<method name="get_Count()" size="7" />
						<method name=".ctor()" size="34" />
						<method name="Peek()" size="35" />
						<method name="Clear()" size="40" />
						<method name=".ctor(System.Int32)" size="62" />
						<method name="Clone()" size="63" />
						<method name="Pop()" size="72" />
						<method name="Push(System.Object)" size="99" />
						<method name="CopyTo(System.Array,System.Int32)" size="176" />
					</type>
					<type name="Queue" full-name="System.Collections.Queue" size="1312">
						<type name="QueueDebugView" full-name="System.Collections.Queue/QueueDebugView" size="0" />
						<type name="QueueEnumerator" full-name="System.Collections.Queue/QueueEnumerator" size="261">
							<method name="Clone()" size="7" />
							<method name="get_Current()" size="56" />
							<method name=".ctor(System.Collections.Queue)" size="75" />
							<method name="MoveNext()" size="123" />
						</type>
						<method name="get_Count()" size="7" />
						<method name=".ctor(System.Int32)" size="13" />
						<method name=".ctor()" size="14" />
						<method name="GetElement(System.Int32)" size="25" />
						<method name="Peek()" size="33" />
						<method name=".ctor(System.Collections.ICollection)" size="63" />
						<method name="Dequeue()" size="98" />
						<method name=".ctor(System.Int32,System.Single)" size="134" />
						<method name="Enqueue(System.Object)" size="136" />
						<method name="Clone()" size="149" />
						<method name="SetCapacity(System.Int32)" size="178" />
						<method name="CopyTo(System.Array,System.Int32)" size="194" />
					</type>
					<type name="ArrayList" full-name="System.Collections.ArrayList" size="1591">
						<type name="ArrayListDebugView" full-name="System.Collections.ArrayList/ArrayListDebugView" size="0" />
						<type name="ArrayListEnumeratorSimple" full-name="System.Collections.ArrayList/ArrayListEnumeratorSimple" size="350">
							<method name="Clone()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="get_Current()" size="48" />
							<method name=".ctor(System.Collections.ArrayList)" size="71" />
							<method name="MoveNext()" size="213" />
						</type>
						<method name="get_Count()" size="7" />
						<method name="CopyTo(System.Array)" size="9" />
						<method name="AddRange(System.Collections.ICollection)" size="14" />
						<method name=".ctor()" size="18" />
						<method name="IndexOf(System.Object)" size="20" />
						<method name="get_SyncRoot()" size="33" />
						<method name="get_Item(System.Int32)" size="38" />
						<method name="ToArray()" size="48" />
						<method name="CopyTo(System.Array,System.Int32)" size="49" />
						<method name="ToArray(System.Type)" size="55" />
						<method name="EnsureCapacity(System.Int32)" size="62" />
						<method name="Clone()" size="63" />
						<method name=".ctor(System.Int32)" size="64" />
						<method name=".ctor(System.Collections.ICollection)" size="67" />
						<method name="Add(System.Object)" size="76" />
						<method name="Contains(System.Object)" size="81" />
						<method name="set_Capacity(System.Int32)" size="97" />
						<method name="RemoveAt(System.Int32)" size="110" />
						<method name="Insert(System.Int32,System.Object)" size="135" />
						<method name="InsertRange(System.Int32,System.Collections.ICollection)" size="168" />
					</type>
					<type name="Hashtable" full-name="System.Collections.Hashtable" size="4140">
						<type name="bucket" full-name="System.Collections.Hashtable/bucket" size="0" />
						<type name="HashtableEnumerator" full-name="System.Collections.Hashtable/HashtableEnumerator" size="384">
							<method name="Clone()" size="7" />
							<method name="get_Key()" size="26" />
							<method name="get_Entry()" size="37" />
							<method name=".ctor(System.Collections.Hashtable,System.Int32)" size="56" />
							<method name="get_Current()" size="74" />
							<method name="MoveNext()" size="158" />
						</type>
						<method name="get_Count()" size="7" />
						<method name="System.Collections.IEnumerable.GetEnumerator()" size="8" />
						<method name="Add(System.Object,System.Object)" size="10" />
						<method name="get_SerializationInfoTable()" size="11" />
						<method name=".ctor()" size="13" />
						<method name=".ctor(System.Int32,System.Collections.IEqualityComparer)" size="14" />
						<method name="rehash()" size="15" />
						<method name=".ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" size="16" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="19" />
						<method name="expand()" size="22" />
						<method name="GetHash(System.Object)" size="28" />
						<method name="InitHash(System.Object,System.Int32,System.UInt32&amp;,System.UInt32&amp;)" size="33" />
						<method name="KeyEquals(System.Object,System.Object)" size="52" />
						<method name="CopyKeys(System.Array,System.Int32)" size="60" />
						<method name="CopyValues(System.Array,System.Int32)" size="71" />
						<method name="CopyEntries(System.Array,System.Int32)" size="85" />
						<method name="CopyTo(System.Array,System.Int32)" size="100" />
						<method name="Clone()" size="115" />
						<method name="ContainsKey(System.Object)" size="146" />
						<method name="rehash(System.Int32)" size="149" />
						<method name="putEntry(System.Collections.Hashtable/bucket[],System.Object,System.Object,System.Int32)" size="168" />
						<method name=".ctor(System.Int32,System.Single)" size="204" />
						<method name="Remove(System.Object)" size="306" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="372" />
						<method name="Insert(System.Object,System.Object,System.Boolean)" size="708" />
						<method name="OnDeserialization(System.Object)" size="737" />
					</type>
				</namespace>
				<namespace name="System.Threading.Tasks" size="9326">
					<type name="SystemThreadingTasks_FutureDebugView`1" full-name="System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1" size="0" />
					<type name="AsyncCausalityTracer" full-name="System.Threading.Tasks.AsyncCausalityTracer" size="6">
						<method name="TraceOperationCreation(System.Threading.Tasks.CausalityTraceLevel,System.Int32,System.String,System.UInt64)" size="1" />
						<method name="get_LoggingOn()" size="2" />
					</type>
					<type name="UnobservedTaskExceptionEventArgs" full-name="System.Threading.Tasks.UnobservedTaskExceptionEventArgs" size="14">
						<method name=".ctor(System.AggregateException)" size="14" />
					</type>
					<type name="TaskSchedulerException" full-name="System.Threading.Tasks.TaskSchedulerException" size="34">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="12" />
						<method name=".ctor(System.Exception)" size="13" />
					</type>
					<type name="CompletionActionInvoker" full-name="System.Threading.Tasks.CompletionActionInvoker" size="40">
						<method name="MarkAborted(System.Threading.ThreadAbortException)" size="1" />
						<method name="System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()" size="18" />
						<method name=".ctor(System.Threading.Tasks.ITaskCompletionAction,System.Threading.Tasks.Task)" size="21" />
					</type>
					<type name="TaskCanceledException" full-name="System.Threading.Tasks.TaskCanceledException" size="60">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="12" />
						<method name=".ctor(System.Threading.Tasks.Task)" size="39" />
					</type>
					<type name="StackGuard" full-name="System.Threading.Tasks.StackGuard" size="73">
						<method name=".ctor()" size="7" />
						<method name="EndInliningScope()" size="31" />
						<method name="TryBeginInliningScope()" size="35" />
					</type>
					<type name="TaskContinuation" full-name="System.Threading.Tasks.TaskContinuation" size="94">
						<method name=".ctor()" size="7" />
						<method name="InlineIfPossibleOrElseQueue(System.Threading.Tasks.Task,System.Boolean)" size="87" />
					</type>
					<type name="ContinuationTaskFromTask" full-name="System.Threading.Tasks.ContinuationTaskFromTask" size="111">
						<method name=".ctor(System.Threading.Tasks.Task,System.Delegate,System.Object,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions)" size="37" />
						<method name="InnerInvoke()" size="74" />
					</type>
					<type name="DebuggerSupport" full-name="System.Threading.Tasks.DebuggerSupport" size="152">
						<method name="TraceOperationCreation(System.Threading.Tasks.CausalityTraceLevel,System.Threading.Tasks.Task,System.String,System.UInt64)" size="1" />
						<method name="get_LoggingOn()" size="2" />
						<method name="AddToActiveTasks(System.Threading.Tasks.Task)" size="14" />
						<method name=".cctor()" size="21" />
						<method name="AddToActiveTasksNonInlined(System.Threading.Tasks.Task)" size="48" />
					</type>
					<type name="TaskSchedulerAwaitTaskContinuation" full-name="System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation" size="178">
						<type name="&lt;&gt;c" full-name="System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/&lt;&gt;c" size="39">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;Run&gt;b__2_0(System.Object)" size="21" />
						</type>
						<method name=".ctor(System.Threading.Tasks.TaskScheduler,System.Action,System.Boolean)" size="16" />
						<method name="Run(System.Threading.Tasks.Task,System.Boolean)" size="123" />
					</type>
					<type name="SynchronizationContextAwaitTaskContinuation" full-name="System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation" size="185">
						<type name="&lt;&gt;c" full-name="System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/&lt;&gt;c" size="30">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;.cctor&gt;b__7_0(System.Object)" size="12" />
						</type>
						<method name=".ctor(System.Threading.SynchronizationContext,System.Action,System.Boolean)" size="16" />
						<method name=".cctor()" size="22" />
						<method name="PostAction(System.Object)" size="30" />
						<method name="Run(System.Threading.Tasks.Task,System.Boolean)" size="57" />
					</type>
					<type name="StandardTaskContinuation" full-name="System.Threading.Tasks.StandardTaskContinuation" size="219">
						<method name=".ctor(System.Threading.Tasks.Task,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" size="76" />
						<method name="Run(System.Threading.Tasks.Task,System.Boolean)" size="143" />
					</type>
					<type name="ThreadPoolTaskScheduler" full-name="System.Threading.Tasks.ThreadPoolTaskScheduler" size="235">
						<type name="&lt;&gt;c" full-name="System.Threading.Tasks.ThreadPoolTaskScheduler/&lt;&gt;c" size="32">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;.cctor&gt;b__10_0(System.Object)" size="14" />
						</type>
						<method name="get_RequiresAtomicStartTransition()" size="2" />
						<method name="NotifyWorkItemProgress()" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="22" />
						<method name="TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" size="37" />
						<method name="QueueTask(System.Threading.Tasks.Task)" size="122" />
					</type>
					<type name="Task`1" full-name="System.Threading.Tasks.Task`1" size="266">
						<method name=".ctor()" size="7" />
						<method name="ConfigureAwait(System.Boolean)" size="8" />
						<method name=".ctor(System.Delegate,System.Object,System.Threading.Tasks.Task,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler)" size="18" />
						<method name=".ctor(System.Boolean,TResult,System.Threading.Tasks.TaskCreationOptions,System.Threading.CancellationToken)" size="21" />
						<method name=".ctor(TResult)" size="25" />
						<method name="InnerInvoke()" size="63" />
						<method name="TrySetResult(TResult)" size="89" />
					</type>
					<type name="TaskScheduler" full-name="System.Threading.Tasks.TaskScheduler" size="280">
						<type name="SystemThreadingTasks_TaskSchedulerDebugView" full-name="System.Threading.Tasks.TaskScheduler/SystemThreadingTasks_TaskSchedulerDebugView" size="0" />
						<method name="NotifyWorkItemProgress()" size="1" />
						<method name="TryDequeue(System.Threading.Tasks.Task)" size="2" />
						<method name="get_Default()" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="21" />
						<method name="get_InternalCurrent()" size="29" />
						<method name="PublishUnobservedTaskException(System.Object,System.Threading.Tasks.UnobservedTaskExceptionEventArgs)" size="45" />
						<method name="get_Id()" size="49" />
						<method name="TryRunInline(System.Threading.Tasks.Task,System.Boolean)" size="118" />
					</type>
					<type name="AwaitTaskContinuation" full-name="System.Threading.Tasks.AwaitTaskContinuation" size="349">
						<method name="MarkAborted(System.Threading.ThreadAbortException)" size="1" />
						<method name="ThrowAsyncIfNecessary(System.Exception)" size="7" />
						<method name="InvokeAction(System.Object)" size="12" />
						<method name="UnsafeScheduleAction(System.Action)" size="14" />
						<method name="CreateTask(System.Action`1&lt;System.Object&gt;,System.Object,System.Threading.Tasks.TaskScheduler)" size="25" />
						<method name=".ctor(System.Action,System.Boolean)" size="28" />
						<method name="GetInvokeActionCallback()" size="30" />
						<method name="Run(System.Threading.Tasks.Task,System.Boolean)" size="41" />
						<method name="System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()" size="43" />
						<method name="RunCallback(System.Threading.ContextCallback,System.Object,System.Threading.Tasks.Task&amp;)" size="45" />
						<method name="RunOrScheduleAction(System.Action,System.Boolean,System.Threading.Tasks.Task&amp;)" size="49" />
						<method name="get_IsValidLocationForInlining()" size="54" />
					</type>
					<type name="TaskFactory" full-name="System.Threading.Tasks.TaskFactory" size="421">
						<type name="CompleteOnInvokePromise" full-name="System.Threading.Tasks.TaskFactory/CompleteOnInvokePromise" size="141">
							<method name="get_InvokeMayRunArbitraryCode()" size="2" />
							<method name=".ctor(System.Collections.Generic.IList`1&lt;System.Threading.Tasks.Task&gt;)" size="41" />
							<method name="Invoke(System.Threading.Tasks.Task)" size="98" />
						</type>
						<method name="CheckCreationOptions(System.Threading.Tasks.TaskCreationOptions)" size="18" />
						<method name=".ctor()" size="19" />
						<method name=".ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" size="48" />
						<method name="CheckMultiTaskContinuationOptions(System.Threading.Tasks.TaskContinuationOptions)" size="76" />
						<method name="CommonCWAnyLogic(System.Collections.Generic.IList`1&lt;System.Threading.Tasks.Task&gt;)" size="119" />
					</type>
					<type name="TaskExceptionHolder" full-name="System.Threading.Tasks.TaskExceptionHolder" size="555">
						<method name="ShouldFailFastOnUnobservedException()" size="2" />
						<method name="GetCancellationExceptionDispatchInfo()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="get_ContainsFaultList()" size="12" />
						<method name=".ctor(System.Threading.Tasks.Task)" size="14" />
						<method name="Add(System.Object,System.Boolean)" size="19" />
						<method name="GetExceptionDispatchInfos()" size="21" />
						<method name="MarkAsUnhandled()" size="26" />
						<method name="MarkAsHandled(System.Boolean)" size="29" />
						<method name="SetCancellationException(System.Object)" size="46" />
						<method name="CreateExceptionObject(System.Boolean,System.Exception)" size="86" />
						<method name="Finalize()" size="92" />
						<method name="AddFaultException(System.Object)" size="190" />
					</type>
					<type name="Task" full-name="System.Threading.Tasks.Task" size="6054">
						<type name="SetOnInvokeMres" full-name="System.Threading.Tasks.Task/SetOnInvokeMres" size="18">
							<method name="get_InvokeMayRunArbitraryCode()" size="2" />
							<method name="Invoke(System.Threading.Tasks.Task)" size="7" />
							<method name=".ctor()" size="9" />
						</type>
						<type name="&lt;&gt;c" full-name="System.Threading.Tasks.Task/&lt;&gt;c" size="60">
							<method name="&lt;.cctor&gt;b__271_2(System.Object)" size="5" />
							<method name="&lt;.cctor&gt;b__271_0()" size="6" />
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;Delay&gt;b__247_0(System.Object)" size="12" />
						</type>
						<type name="ContingentProperties" full-name="System.Threading.Tasks.Task/ContingentProperties" size="75">
							<method name=".ctor()" size="16" />
							<method name="SetCompleted()" size="19" />
							<method name="UnregisterCancellationCallback()" size="40" />
						</type>
						<type name="DelayPromise" full-name="System.Threading.Tasks.Task/DelayPromise" size="143">
							<method name=".ctor(System.Threading.CancellationToken)" size="41" />
							<method name="Complete()" size="102" />
						</type>
						<method name="MarkAborted(System.Threading.ThreadAbortException)" size="1" />
						<method name="get_InternalCurrent()" size="6" />
						<method name="get_ShouldNotifyDebuggerOfWaitCompletion()" size="7" />
						<method name="OptionsMethod(System.Int32)" size="8" />
						<method name="TrySetCanceled(System.Threading.CancellationToken)" size="9" />
						<method name="IsCompletedMethod(System.Int32)" size="11" />
						<method name="ExecutionContextCallback(System.Object)" size="12" />
						<method name="InternalCurrentIfAttached(System.Threading.Tasks.TaskCreationOptions)" size="13" />
						<method name="get_Options()" size="14" />
						<method name="LogFinishCompletionNotification()" size="15" />
						<method name="RecordInternalCancellationRequest()" size="16" />
						<method name="MarkStarted()" size="17" />
						<method name="get_IsWaitNotificationEnabled()" size="18" />
						<method name="DisregardChild()" size="19" />
						<method name=".ctor()" size="20" />
						<method name="get_IsCanceled()" size="22" />
						<method name="get_CurrentStackGuard()" size="23" />
						<method name="get_IsWaitNotificationEnabledOrNotRanToCompletion()" size="25" />
						<method name="NotifyDebuggerOfWaitCompletionIfNecessary()" size="26" />
						<method name="get_CancellationToken()" size="29" />
						<method name="get_CapturedContext()" size="33" />
						<method name="GetCancellationExceptionDispatchInfo()" size="35" />
						<method name="EnsureContingentPropertiesInitializedCore(System.Boolean)" size="37" />
						<method name="TrySetCanceled(System.Threading.CancellationToken,System.Object)" size="38" />
						<method name="get_IsCancellationRequested()" size="39" />
						<method name="RemoveFromActiveTasks(System.Int32)" size="41" />
						<method name="System.IAsyncResult.get_AsyncWaitHandle()" size="43" />
						<method name="TrySetException(System.Object)" size="46" />
						<method name="AddToActiveTasks(System.Threading.Tasks.Task)" size="47" />
						<method name="get_Id()" size="49" />
						<method name=".ctor(System.Delegate,System.Object,System.Threading.Tasks.Task,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler)" size="50" />
						<method name="AddNewChild()" size="51" />
						<method name="AtomicStateUpdate(System.Int32,System.Int32)" size="53" />
						<method name="TaskCancelCallback(System.Object)" size="57" />
						<method name="AtomicStateUpdate(System.Int32,System.Int32,System.Int32&amp;)" size="58" />
						<method name="SpinWait(System.Int32)" size="61" />
						<method name="ContinueWith(System.Action`2&lt;System.Threading.Tasks.Task,System.Object&gt;,System.Object,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions)" size="64" />
						<method name="FinishStageThree()" size="67" />
						<method name="SetNotificationForWaitCompletion(System.Boolean)" size="72" />
						<method name=".ctor(System.Boolean,System.Threading.Tasks.TaskCreationOptions,System.Threading.CancellationToken)" size="74" />
						<method name="CancellationCleanupLogic()" size="78" />
						<method name="get_CompletedEvent()" size="81" />
						<method name="ContinueWithCore(System.Threading.Tasks.Task,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions)" size="83" />
						<method name="AddException(System.Object,System.Boolean)" size="87" />
						<method name="ExecuteWithThreadLocal(System.Threading.Tasks.Task&amp;)" size="89" />
						<method name="WhenAny(System.Threading.Tasks.Task[])" size="91" />
						<method name="get_Status()" size="104" />
						<method name="SpinThenBlockingWait(System.Int32,System.Threading.CancellationToken)" size="107" />
						<method name="SetContinuationForAwait(System.Action,System.Boolean,System.Boolean)" size="113" />
						<method name="Dispose(System.Boolean)" size="116" />
						<method name="Finish(System.Boolean)" size="126" />
						<method name="RemoveContinuation(System.Object)" size="133" />
						<method name="ExecuteEntry(System.Boolean)" size="136" />
						<method name=".cctor()" size="146" />
						<method name="AssignCancellationToken(System.Threading.CancellationToken,System.Threading.Tasks.Task,System.Threading.Tasks.TaskContinuation)" size="150" />
						<method name="TaskConstructorCore(System.Delegate,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler)" size="151" />
						<method name="AddExceptionsFromChildren()" size="152" />
						<method name="ScheduleAndStart(System.Boolean)" size="159" />
						<method name="AddTaskContinuationComplex(System.Object,System.Boolean)" size="166" />
						<method name="FinishStageTwo()" size="168" />
						<method name="InternalWait(System.Int32,System.Threading.CancellationToken)" size="184" />
						<method name="InternalCancel(System.Boolean)" size="185" />
						<method name="FinishContinuations()" size="460" />
					</type>
				</namespace>
				<namespace name="System.Collections.Generic" size="11607">
					<type name="InsertionBehavior" full-name="System.Collections.Generic.InsertionBehavior" size="0" />
					<type name="SByteEnumEqualityComparer`1" full-name="System.Collections.Generic.SByteEnumEqualityComparer`1" size="30">
						<method name=".ctor()" size="7" />
						<method name="GetHashCode(T)" size="16" />
					</type>
					<type name="IntrospectiveSortUtilities" full-name="System.Collections.Generic.IntrospectiveSortUtilities" size="36">
						<method name="ThrowOrIgnoreBadComparer(System.Object)" size="17" />
						<method name="FloorLog2PlusOne(System.Int32)" size="19" />
					</type>
					<type name="KeyValuePair`2" full-name="System.Collections.Generic.KeyValuePair`2" size="57">
						<method name="get_Key()" size="7" />
						<method name=".ctor(TKey,TValue)" size="15" />
						<method name="ToString()" size="28" />
					</type>
					<type name="KeyValuePair" full-name="System.Collections.Generic.KeyValuePair" size="67">
						<method name="PairToString(System.Object,System.Object)" size="67" />
					</type>
					<type name="GenericComparer`1" full-name="System.Collections.Generic.GenericComparer`1" size="79">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode()" size="17" />
						<method name="Compare(T,T)" size="45" />
					</type>
					<type name="LongEnumEqualityComparer`1" full-name="System.Collections.Generic.LongEnumEqualityComparer`1" size="90">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode(T)" size="15" />
						<method name="Equals(T,T)" size="17" />
					</type>
					<type name="NullableComparer`1" full-name="System.Collections.Generic.NullableComparer`1" size="92">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode()" size="17" />
						<method name="Compare(System.Nullable`1&lt;T&gt;,System.Nullable`1&lt;T&gt;)" size="58" />
					</type>
					<type name="EnumEqualityComparer`1" full-name="System.Collections.Generic.EnumEqualityComparer`1" size="114">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode(T)" size="15" />
						<method name="Equals(T,T)" size="17" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="41" />
					</type>
					<type name="ByteEqualityComparer" full-name="System.Collections.Generic.ByteEqualityComparer" size="178">
						<method name="Equals(System.Byte,System.Byte)" size="5" />
						<method name=".ctor()" size="7" />
						<method name="GetHashCode(System.Byte)" size="8" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode()" size="17" />
						<method name="IndexOf(System.Byte[],System.Byte,System.Int32,System.Int32)" size="131" />
					</type>
					<type name="GenericEqualityComparer`1" full-name="System.Collections.Generic.GenericEqualityComparer`1" size="199">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode()" size="17" />
						<method name="GetHashCode(T)" size="24" />
						<method name="Equals(T,T)" size="45" />
						<method name="IndexOf(T[],T,System.Int32,System.Int32)" size="96" />
					</type>
					<type name="ObjectEqualityComparer`1" full-name="System.Collections.Generic.ObjectEqualityComparer`1" size="209">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode()" size="17" />
						<method name="GetHashCode(T)" size="24" />
						<method name="Equals(T,T)" size="50" />
						<method name="IndexOf(T[],T,System.Int32,System.Int32)" size="101" />
					</type>
					<type name="NullableEqualityComparer`1" full-name="System.Collections.Generic.NullableEqualityComparer`1" size="211">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="10" />
						<method name="GetHashCode(System.Nullable`1&lt;T&gt;)" size="14" />
						<method name="GetHashCode()" size="17" />
						<method name="Equals(System.Nullable`1&lt;T&gt;,System.Nullable`1&lt;T&gt;)" size="58" />
						<method name="IndexOf(System.Nullable`1&lt;T&gt;[],System.Nullable`1&lt;T&gt;,System.Int32,System.Int32)" size="105" />
					</type>
					<type name="ValueListBuilder`1" full-name="System.Collections.Generic.ValueListBuilder`1" size="227">
						<method name="get_Length()" size="7" />
						<method name=".ctor(System.Span`1&lt;T&gt;)" size="22" />
						<method name="AsSpan()" size="24" />
						<method name="Dispose()" size="33" />
						<method name="Append(T)" size="55" />
						<method name="Grow()" size="86" />
					</type>
					<type name="Comparer`1" full-name="System.Collections.Generic.Comparer`1" size="254">
						<method name=".ctor()" size="7" />
						<method name="get_Default()" size="27" />
						<method name="System.Collections.IComparer.Compare(System.Object,System.Object)" size="58" />
						<method name="CreateComparer()" size="162" />
					</type>
					<type name="LowLevelListWithIList`1" full-name="System.Collections.Generic.LowLevelListWithIList`1" size="274">
						<type name="Enumerator" full-name="System.Collections.Generic.LowLevelListWithIList`1/Enumerator" size="233">
							<method name="Dispose()" size="1" />
							<method name="get_Current()" size="7" />
							<method name=".ctor(System.Collections.Generic.LowLevelListWithIList`1&lt;T&gt;)" size="39" />
							<method name="System.Collections.IEnumerator.get_Current()" size="47" />
							<method name="MoveNextRare()" size="58" />
							<method name="MoveNext()" size="81" />
						</type>
						<method name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" size="2" />
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.Int32)" size="8" />
						<method name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" size="12" />
					</type>
					<type name="EqualityComparer`1" full-name="System.Collections.Generic.EqualityComparer`1" size="506">
						<method name=".ctor()" size="7" />
						<method name="get_Default()" size="27" />
						<method name="System.Collections.IEqualityComparer.GetHashCode(System.Object)" size="34" />
						<method name="IndexOf(T[],T,System.Int32,System.Int32)" size="37" />
						<method name="System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" size="57" />
						<method name="CreateComparer()" size="344" />
					</type>
					<type name="LowLevelDictionary`2" full-name="System.Collections.Generic.LowLevelDictionary`2" size="635">
						<type name="Entry" full-name="System.Collections.Generic.LowLevelDictionary`2/Entry" size="7">
							<method name=".ctor()" size="7" />
						</type>
						<type name="DefaultComparer`1" full-name="System.Collections.Generic.LowLevelDictionary`2/DefaultComparer`1" size="78">
							<method name=".ctor()" size="7" />
							<method name="GetHashCode(T)" size="12" />
							<method name="Equals(T,T)" size="59" />
						</type>
						<method name=".ctor()" size="14" />
						<method name=".ctor(System.Int32,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" size="21" />
						<method name="Clear(System.Int32)" size="34" />
						<method name="Find(TKey)" size="54" />
						<method name="set_Item(TKey,TValue)" size="62" />
						<method name="UncheckedAdd(TKey,TValue)" size="92" />
						<method name="ExpandBuckets()" size="103" />
						<method name="Remove(TKey)" size="136" />
					</type>
					<type name="ArraySortHelper`1" full-name="System.Collections.Generic.ArraySortHelper`1" size="844">
						<method name="get_Default()" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="IntrospectiveSort(T[],System.Int32,System.Int32,System.Comparison`1&lt;T&gt;)" size="27" />
						<method name="Swap(T[],System.Int32,System.Int32)" size="35" />
						<method name="BinarySearch(T[],System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" size="41" />
						<method name="SwapIfGreater(T[],System.Comparison`1&lt;T&gt;,System.Int32,System.Int32)" size="58" />
						<method name="Sort(T[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" size="59" />
						<method name="InternalBinarySearch(T[],System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" size="60" />
						<method name="Heapsort(T[],System.Int32,System.Int32,System.Comparison`1&lt;T&gt;)" size="67" />
						<method name="InsertionSort(T[],System.Int32,System.Int32,System.Comparison`1&lt;T&gt;)" size="78" />
						<method name="DownHeap(T[],System.Int32,System.Int32,System.Int32,System.Comparison`1&lt;T&gt;)" size="122" />
						<method name="PickPivotAndPartition(T[],System.Int32,System.Int32,System.Comparison`1&lt;T&gt;)" size="131" />
						<method name="IntroSort(T[],System.Int32,System.Int32,System.Int32,System.Comparison`1&lt;T&gt;)" size="142" />
					</type>
					<type name="ArraySortHelper`2" full-name="System.Collections.Generic.ArraySortHelper`2" size="931">
						<method name="get_Default()" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="IntrospectiveSort(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="29" />
						<method name="Sort(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="58" />
						<method name="Swap(TKey[],TValue[],System.Int32,System.Int32)" size="65" />
						<method name="Heapsort(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="72" />
						<method name="SwapIfGreaterWithItems(TKey[],TValue[],System.Collections.Generic.IComparer`1&lt;TKey&gt;,System.Int32,System.Int32)" size="94" />
						<method name="InsertionSort(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="115" />
						<method name="PickPivotAndPartition(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="142" />
						<method name="IntroSort(TKey[],TValue[],System.Int32,System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="153" />
						<method name="DownHeap(TKey[],TValue[],System.Int32,System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="179" />
					</type>
					<type name="LowLevelList`1" full-name="System.Collections.Generic.LowLevelList`1" size="1281">
						<method name="get_Count()" size="7" />
						<method name="get_Capacity()" size="9" />
						<method name=".cctor()" size="12" />
						<method name="AddRange(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" size="14" />
						<method name=".ctor()" size="18" />
						<method name="IndexOf(T)" size="20" />
						<method name="CopyTo(T[],System.Int32)" size="21" />
						<method name="Remove(T)" size="23" />
						<method name="get_Item(System.Int32)" size="28" />
						<method name="set_Item(System.Int32,T)" size="43" />
						<method name="EnsureCapacity(System.Int32)" size="48" />
						<method name=".ctor(System.Int32)" size="49" />
						<method name="Contains(T)" size="62" />
						<method name="Add(T)" size="74" />
						<method name="set_Capacity(System.Int32)" size="82" />
						<method name="RemoveAt(System.Int32)" size="113" />
						<method name="Insert(System.Int32,T)" size="130" />
						<method name="RemoveAll(System.Predicate`1&lt;T&gt;)" size="201" />
						<method name="InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" size="278" />
					</type>
					<type name="List`1" full-name="System.Collections.Generic.List`1" size="1658">
						<type name="Enumerator" full-name="System.Collections.Generic.List`1/Enumerator" size="231">
							<method name="Dispose()" size="1" />
							<method name="get_Current()" size="7" />
							<method name=".ctor(System.Collections.Generic.List`1&lt;T&gt;)" size="39" />
							<method name="System.Collections.IEnumerator.get_Current()" size="46" />
							<method name="MoveNextRare()" size="57" />
							<method name="MoveNext()" size="81" />
						</type>
						<method name="System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" size="2" />
						<method name="get_Count()" size="7" />
						<method name="CopyTo(T[])" size="9" />
						<method name="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" size="12" />
						<method name="Reverse()" size="14" />
						<method name="Sort(System.Collections.Generic.IComparer`1&lt;T&gt;)" size="15" />
						<method name=".ctor()" size="18" />
						<method name="IndexOf(T)" size="20" />
						<method name="CopyTo(T[],System.Int32)" size="21" />
						<method name="System.Collections.IList.Contains(System.Object)" size="23" />
						<method name="Contains(T)" size="24" />
						<method name="get_Item(System.Int32)" size="27" />
						<method name="IsCompatibleObject(System.Object)" size="33" />
						<method name="AddWithResize(T)" size="39" />
						<method name="set_Item(System.Int32,T)" size="42" />
						<method name=".ctor(System.Int32)" size="46" />
						<method name="ToArray()" size="48" />
						<method name="System.Collections.IList.Add(System.Object)" size="50" />
						<method name="Add(T)" size="60" />
						<method name="Clear()" size="61" />
						<method name="EnsureCapacity(System.Int32)" size="62" />
						<method name="Reverse(System.Int32,System.Int32)" size="71" />
						<method name="Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" size="72" />
						<method name="set_Capacity(System.Int32)" size="89" />
						<method name=".ctor(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" size="106" />
						<method name="AddEnumerable(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" size="110" />
						<method name="RemoveAt(System.Int32)" size="114" />
						<method name="Insert(System.Int32,T)" size="128" />
					</type>
					<type name="Dictionary`2" full-name="System.Collections.Generic.Dictionary`2" size="3548">
						<type name="Entry" full-name="System.Collections.Generic.Dictionary`2/Entry" size="0" />
						<type name="Enumerator" full-name="System.Collections.Generic.Dictionary`2/Enumerator" size="493">
							<method name="Dispose()" size="1" />
							<method name="get_Current()" size="7" />
							<method name=".ctor(System.Collections.Generic.Dictionary`2&lt;TKey,TValue&gt;,System.Int32)" size="46" />
							<method name="System.Collections.IDictionaryEnumerator.get_Key()" size="51" />
							<method name="System.Collections.IDictionaryEnumerator.get_Entry()" size="72" />
							<method name="System.Collections.IEnumerator.get_Current()" size="119" />
							<method name="MoveNext()" size="146" />
						</type>
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.get_IsReadOnly()" size="2" />
						<method name=".ctor()" size="9" />
						<method name="TryAdd(TKey,TValue)" size="10" />
						<method name="set_Item(TKey,TValue)" size="11" />
						<method name="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator()" size="13" />
						<method name="get_Count()" size="14" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="19" />
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;)" size="21" />
						<method name="Initialize(System.Int32)" size="40" />
						<method name=".ctor(System.Int32,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" size="45" />
						<method name="TryGetValue(TKey,TValue&amp;)" size="46" />
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;)" size="58" />
						<method name="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;)" size="72" />
						<method name="Clear()" size="80" />
						<method name="CopyTo(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;[],System.Int32)" size="122" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="143" />
						<method name="Resize(System.Int32,System.Boolean)" size="223" />
						<method name="OnDeserialization(System.Object)" size="228" />
						<method name="System.Collections.ICollection.CopyTo(System.Array,System.Int32)" size="321" />
						<method name="Remove(TKey)" size="331" />
						<method name="FindEntry(TKey)" size="375" />
						<method name="TryInsert(TKey,TValue,System.Collections.Generic.InsertionBehavior)" size="695" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Serialization" size="12574">
					<type name="IDeserializationCallback" full-name="System.Runtime.Serialization.IDeserializationCallback" size="0" />
					<type name="OnSerializingAttribute" full-name="System.Runtime.Serialization.OnSerializingAttribute" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="SerializationBinder" full-name="System.Runtime.Serialization.SerializationBinder" size="14">
						<method name="BindToName(System.Type,System.String&amp;,System.String&amp;)" size="7" />
					</type>
					<type name="TypeLoadExceptionHolder" full-name="System.Runtime.Serialization.TypeLoadExceptionHolder" size="21">
						<method name="get_TypeName()" size="7" />
						<method name=".ctor(System.String)" size="14" />
					</type>
					<type name="FixupHolder" full-name="System.Runtime.Serialization.FixupHolder" size="28">
						<method name=".ctor(System.Int64,System.Object,System.Int32)" size="28" />
					</type>
					<type name="SafeSerializationEventArgs" full-name="System.Runtime.Serialization.SafeSerializationEventArgs" size="32">
						<method name="get_SerializedStates()" size="7" />
						<method name=".ctor(System.Runtime.Serialization.StreamingContext)" size="25" />
					</type>
					<type name="SerializationEntry" full-name="System.Runtime.Serialization.SerializationEntry" size="36">
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.String,System.Object,System.Type)" size="22" />
					</type>
					<type name="OptionalFieldAttribute" full-name="System.Runtime.Serialization.OptionalFieldAttribute" size="42">
						<method name=".ctor()" size="14" />
						<method name="set_VersionAdded(System.Int32)" size="28" />
					</type>
					<type name="SerializationEventsCache" full-name="System.Runtime.Serialization.SerializationEventsCache" size="79">
						<type name="&lt;&gt;c" full-name="System.Runtime.Serialization.SerializationEventsCache/&lt;&gt;c" size="25">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
						</type>
						<method name=".cctor()" size="11" />
						<method name="GetSerializationEventsForType(System.Type)" size="43" />
					</type>
					<type name="SerializationException" full-name="System.Runtime.Serialization.SerializationException" size="82">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".cctor()" size="11" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor(System.String,System.Exception)" size="20" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="MemberHolder" full-name="System.Runtime.Serialization.MemberHolder" size="90">
						<method name="GetHashCode()" size="12" />
						<method name=".ctor(System.Type,System.Runtime.Serialization.StreamingContext)" size="21" />
						<method name="Equals(System.Object)" size="57" />
					</type>
					<type name="FormatterConverter" full-name="System.Runtime.Serialization.FormatterConverter" size="139">
						<method name=".ctor()" size="7" />
						<method name="ThrowValueNullException()" size="11" />
						<method name="ToBoolean(System.Object)" size="20" />
						<method name="Convert(System.Object,System.Type)" size="21" />
					</type>
					<type name="SerializationObjectManager" full-name="System.Runtime.Serialization.SerializationObjectManager" size="141">
						<method name="RaiseOnSerializedEvent()" size="23" />
						<method name=".ctor(System.Runtime.Serialization.StreamingContext)" size="25" />
						<method name="AddOnSerialized(System.Object)" size="32" />
						<method name="RegisterObject(System.Object)" size="61" />
					</type>
					<type name="ValueTypeFixupInfo" full-name="System.Runtime.Serialization.ValueTypeFixupInfo" size="155">
						<method name="get_ContainerID()" size="7" />
						<method name=".ctor(System.Int64,System.Reflection.FieldInfo,System.Int32[])" size="134" />
					</type>
					<type name="FixupHolderList" full-name="System.Runtime.Serialization.FixupHolderList" size="160">
						<method name=".ctor()" size="8" />
						<method name=".ctor(System.Int32)" size="26" />
						<method name="Add(System.Runtime.Serialization.FixupHolder)" size="48" />
						<method name="EnlargeArray()" size="78" />
					</type>
					<type name="ObjectHolderList" full-name="System.Runtime.Serialization.ObjectHolderList" size="182">
						<method name="get_Version()" size="7" />
						<method name=".ctor()" size="8" />
						<method name=".ctor(System.Int32)" size="26" />
						<method name="Add(System.Runtime.Serialization.ObjectHolder)" size="48" />
						<method name="EnlargeArray()" size="78" />
					</type>
					<type name="ObjectHolderListEnumerator" full-name="System.Runtime.Serialization.ObjectHolderListEnumerator" size="187">
						<method name="get_Current()" size="19" />
						<method name=".ctor(System.Runtime.Serialization.ObjectHolderList,System.Boolean)" size="45" />
						<method name="MoveNext()" size="123" />
					</type>
					<type name="SerializationInfoEnumerator" full-name="System.Runtime.Serialization.SerializationInfoEnumerator" size="278">
						<method name="System.Collections.IEnumerator.get_Current()" size="12" />
						<method name="get_Name()" size="33" />
						<method name="MoveNext()" size="51" />
						<method name=".ctor(System.String[],System.Object[],System.Type[],System.Int32)" size="52" />
						<method name="get_Current()" size="64" />
					</type>
					<type name="SerializationFieldInfo" full-name="System.Runtime.Serialization.SerializationFieldInfo" size="313">
						<method name="get_Name()" size="7" />
						<method name="get_Module()" size="12" />
						<method name="GetCustomAttributes(System.Boolean)" size="13" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="14" />
						<method name="SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" size="19" />
						<method name=".ctor(System.Reflection.RuntimeFieldInfo,System.String)" size="42" />
						<method name="InternalGetValue(System.Object)" size="44" />
						<method name="InternalSetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" size="56" />
					</type>
					<type name="LongList" full-name="System.Runtime.Serialization.LongList" size="321">
						<method name="get_Count()" size="7" />
						<method name=".ctor()" size="8" />
						<method name="get_Current()" size="14" />
						<method name=".ctor(System.Int32)" size="33" />
						<method name="RemoveElement(System.Int64)" size="51" />
						<method name="MoveNext()" size="60" />
						<method name="Add(System.Int64)" size="62" />
						<method name="EnlargeArray()" size="78" />
					</type>
					<type name="SerializationEvents" full-name="System.Runtime.Serialization.SerializationEvents" size="398">
						<method name="InvokeOnSerializing(System.Object,System.Runtime.Serialization.StreamingContext)" size="14" />
						<method name="get_HasOnSerializingEvents()" size="20" />
						<method name="AddOnDelegate(System.Object,System.Runtime.Serialization.SerializationEventHandler,System.Collections.Generic.List`1&lt;System.Reflection.MethodInfo&gt;)" size="82" />
						<method name=".ctor(System.Type)" size="99" />
						<method name="GetMethodsWithAttribute(System.Type,System.Type)" size="107" />
					</type>
					<type name="SafeSerializationManager" full-name="System.Runtime.Serialization.SafeSerializationManager" size="510">
						<method name=".ctor()" size="7" />
						<method name="get_IsActive()" size="10" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="28" />
						<method name="OnDeserialized(System.Runtime.Serialization.StreamingContext)" size="44" />
						<method name="CompleteDeserialization(System.Object)" size="60" />
						<method name="CompleteSerialization(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="88" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="90" />
						<method name="System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)" size="183" />
					</type>
					<type name="ObjectIDGenerator" full-name="System.Runtime.Serialization.ObjectIDGenerator" size="563">
						<method name=".cctor()" size="24" />
						<method name="HasId(System.Object,System.Boolean&amp;)" size="55" />
						<method name=".ctor()" size="65" />
						<method name="FindElement(System.Object,System.Boolean&amp;)" size="94" />
						<method name="GetId(System.Object,System.Boolean&amp;)" size="124" />
						<method name="Rehash()" size="201" />
					</type>
					<type name="ObjectHolder" full-name="System.Runtime.Serialization.ObjectHolder" size="1275">
						<method name="get_DirectlyDependentObjects()" size="7" />
						<method name="MarkForCompletionWhenAvailable()" size="8" />
						<method name="get_TypeLoadExceptionReachable()" size="10" />
						<method name="get_IsIncompleteObjectReference()" size="12" />
						<method name="RemoveDependency(System.Int64)" size="14" />
						<method name=".ctor(System.Int64)" size="15" />
						<method name="get_CompletelyFixed()" size="20" />
						<method name="set_ValueTypeFixupPerformed(System.Boolean)" size="22" />
						<method name="get_ContainerID()" size="23" />
						<method name="get_CanObjectValueChange()" size="27" />
						<method name="DecrementFixupsRemaining(System.Runtime.Serialization.ObjectManager)" size="31" />
						<method name="AddDependency(System.Int64)" size="32" />
						<method name="set_IsIncompleteObjectReference(System.Boolean)" size="34" />
						<method name="get_CanSurrogatedObjectValueChange()" size="37" />
						<method name="get_RequiresSerInfoFixup()" size="38" />
						<method name="set_RequiresSerInfoFixup(System.Boolean)" size="41" />
						<method name="get_ValueTypeFixupPerformed()" size="51" />
						<method name="SetObjectValue(System.Object,System.Runtime.Serialization.ObjectManager)" size="60" />
						<method name="AddFixup(System.Runtime.Serialization.FixupHolder,System.Runtime.Serialization.ObjectManager)" size="62" />
						<method name="SetFlags()" size="116" />
						<method name=".ctor(System.String,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.ISerializationSurrogate,System.Int64,System.Reflection.FieldInfo,System.Int32[])" size="125" />
						<method name="UpdateData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.ISerializationSurrogate,System.Int64,System.Reflection.FieldInfo,System.Int32[],System.Runtime.Serialization.ObjectManager)" size="127" />
						<method name=".ctor(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.ISerializationSurrogate,System.Int64,System.Reflection.FieldInfo,System.Int32[])" size="174" />
					</type>
					<type name="SerializationInfo" full-name="System.Runtime.Serialization.SerializationInfo" size="1582">
						<method name="get_FullTypeName()" size="7" />
						<method name="DemandForUnsafeAssemblyNameAssignments(System.String,System.String)" size="9" />
						<method name=".ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)" size="10" />
						<method name="AddValue(System.String,System.Boolean)" size="24" />
						<method name="GetEnumerator()" size="30" />
						<method name="FindElement(System.String)" size="34" />
						<method name="GetElementNoThrow(System.String,System.Type&amp;)" size="36" />
						<method name="AddValue(System.String,System.Object)" size="37" />
						<method name="AddValue(System.String,System.Object,System.Type)" size="38" />
						<method name="UpdateValue(System.String,System.Object,System.Type)" size="41" />
						<method name="GetBoolean(System.String)" size="43" />
						<method name="GetString(System.String)" size="46" />
						<method name="Compare(System.Byte[],System.Byte[])" size="50" />
						<method name="GetElement(System.String,System.Type&amp;)" size="57" />
						<method name="GetValueNoThrow(System.String,System.Type)" size="76" />
						<method name="IsAssemblyNameAssignmentSafe(System.String,System.String)" size="83" />
						<method name="GetValue(System.String,System.Type)" size="112" />
						<method name="SetType(System.Type)" size="119" />
						<method name="AddValueInternal(System.String,System.Object,System.Type)" size="127" />
						<method name="ExpandArrays()" size="134" />
						<method name=".ctor(System.Type,System.Runtime.Serialization.IFormatterConverter,System.Boolean)" size="137" />
					</type>
					<type name="FormatterServices" full-name="System.Runtime.Serialization.FormatterServices" size="2254">
						<type name="&lt;&gt;c__DisplayClass9_0" full-name="System.Runtime.Serialization.FormatterServices/&lt;&gt;c__DisplayClass9_0" size="24">
							<method name=".ctor()" size="7" />
							<method name="&lt;GetSerializableMembers&gt;b__0(System.Runtime.Serialization.MemberHolder)" size="17" />
						</type>
						<method name="GetEnableUnsafeTypeForwarders()" size="2" />
						<method name="nativeGetUninitializedObject(System.RuntimeType)" size="7" />
						<method name="CheckSerializable(System.RuntimeType)" size="12" />
						<method name="LoadAssemblyFromStringNoThrow(System.String)" size="16" />
						<method name="GetClrTypeFullName(System.Type)" size="22" />
						<method name="GetTypeFromAssembly(System.Reflection.Assembly,System.String)" size="30" />
						<method name="UnsafeTypeForwardersIsEnabled()" size="33" />
						<method name="GetUninitializedObject(System.Type)" size="65" />
						<method name="GetClrAssemblyName(System.Type,System.Boolean&amp;)" size="71" />
						<method name="CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)" size="84" />
						<method name="SerializationSetValue(System.Reflection.MemberInfo,System.Object,System.Object)" size="87" />
						<method name=".cctor()" size="98" />
						<method name="GetClrTypeFullNameForArray(System.Type)" size="113" />
						<method name="GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)" size="118" />
						<method name="GetSerializableMembers(System.RuntimeType)" size="128" />
						<method name="GetClrTypeFullNameForNonArrayTypes(System.Type)" size="159" />
						<method name="GetSafeUninitializedObject(System.Type)" size="161" />
						<method name="PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])" size="173" />
						<method name="GetObjectData(System.Object,System.Reflection.MemberInfo[])" size="189" />
						<method name="GetParentTypes(System.RuntimeType,System.RuntimeType[]&amp;,System.Int32&amp;)" size="258" />
						<method name="InternalGetSerializableMembers(System.RuntimeType)" size="390" />
					</type>
					<type name="ObjectManager" full-name="System.Runtime.Serialization.ObjectManager" size="3574">
						<method name="get_TopObject()" size="7" />
						<method name="set_TopObject(System.Object)" size="8" />
						<method name="CanCallGetType(System.Object)" size="12" />
						<method name="AddOnDeserialization(System.Runtime.Serialization.DeserializationEventHandler)" size="24" />
						<method name="get_SpecialFixupObjects()" size="26" />
						<method name="FindOrCreateObjectHolder(System.Int64)" size="27" />
						<method name="RegisterString(System.String,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)" size="28" />
						<method name="AddOnDeserialized(System.Object)" size="32" />
						<method name=".ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Boolean,System.Boolean)" size="36" />
						<method name="RaiseDeserializationEvent()" size="46" />
						<method name="GetConstructor(System.RuntimeType)" size="49" />
						<method name="GetObject(System.Int64)" size="54" />
						<method name="FindObjectHolder(System.Int64)" size="57" />
						<method name="RegisterFixup(System.Runtime.Serialization.FixupHolder,System.Int64,System.Int64)" size="76" />
						<method name="DoNewlyRegisteredObjectFixups(System.Runtime.Serialization.ObjectHolder)" size="89" />
						<method name="CompleteISerializableObject(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="99" />
						<method name="ResolveObjectReference(System.Runtime.Serialization.ObjectHolder)" size="130" />
						<method name="RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)" size="134" />
						<method name="AddObjectHolder(System.Runtime.Serialization.ObjectHolder)" size="176" />
						<method name="FixupSpecialObject(System.Runtime.Serialization.ObjectHolder)" size="198" />
						<method name="GetCompletionInfo(System.Runtime.Serialization.FixupHolder,System.Runtime.Serialization.ObjectHolder&amp;,System.Object&amp;,System.Boolean)" size="220" />
						<method name="DoFixups()" size="299" />
						<method name="RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])" size="396" />
						<method name="DoValueTypeFixup(System.Reflection.FieldInfo,System.Runtime.Serialization.ObjectHolder,System.Object)" size="427" />
						<method name="CompleteObject(System.Runtime.Serialization.ObjectHolder,System.Boolean)" size="724" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting.Messaging" size="13169">
					<type name="ArgInfoType" full-name="System.Runtime.Remoting.Messaging.ArgInfoType" size="0" />
					<type name="CADArgHolder" full-name="System.Runtime.Remoting.Messaging.CADArgHolder" size="14">
						<method name=".ctor(System.Int32)" size="14" />
					</type>
					<type name="CADObjRef" full-name="System.Runtime.Remoting.Messaging.CADObjRef" size="33">
						<method name=".ctor(System.Runtime.Remoting.ObjRef,System.Int32)" size="33" />
					</type>
					<type name="CallContext" full-name="System.Runtime.Remoting.Messaging.CallContext" size="34">
						<method name="SetCurrentCallContext(System.Runtime.Remoting.Messaging.LogicalCallContext)" size="2" />
						<method name=".ctor()" size="7" />
						<method name="SetLogicalCallContext(System.Runtime.Remoting.Messaging.LogicalCallContext)" size="25" />
					</type>
					<type name="CallContextSecurityData" full-name="System.Runtime.Remoting.Messaging.CallContextSecurityData" size="35">
						<method name=".ctor()" size="7" />
						<method name="get_HasInfo()" size="10" />
						<method name="Clone()" size="18" />
					</type>
					<type name="ConstructionResponse" full-name="System.Runtime.Remoting.Messaging.ConstructionResponse" size="36">
						<method name="get_Properties()" size="7" />
						<method name=".ctor(System.Exception,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="9" />
						<method name=".ctor(System.Object,System.Runtime.Remoting.Messaging.LogicalCallContext,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="11" />
					</type>
					<type name="CallContextRemotingData" full-name="System.Runtime.Remoting.Messaging.CallContextRemotingData" size="50">
						<method name="get_LogicalCallID()" size="7" />
						<method name="set_LogicalCallID(System.String)" size="8" />
						<method name="get_HasInfo()" size="10" />
						<method name="Clone()" size="18" />
					</type>
					<type name="ErrorMessage" full-name="System.Runtime.Remoting.Messaging.ErrorMessage" size="51">
						<method name="get_ArgCount()" size="2" />
						<method name="get_MethodName()" size="6" />
						<method name="get_Uri()" size="7" />
						<method name=".ctor()" size="18" />
					</type>
					<type name="EnvoyTerminatorSink" full-name="System.Runtime.Remoting.Messaging.EnvoyTerminatorSink" size="53">
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="17" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="18" />
					</type>
					<type name="ServerObjectReplySink" full-name="System.Runtime.Remoting.Messaging.ServerObjectReplySink" size="55">
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="6" />
						<method name=".ctor(System.Runtime.Remoting.ServerIdentity,System.Runtime.Remoting.Messaging.IMessageSink)" size="21" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="28" />
					</type>
					<type name="RemotingSurrogate" full-name="System.Runtime.Remoting.Messaging.RemotingSurrogate" size="56">
						<method name="SetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector)" size="6" />
						<method name=".ctor()" size="7" />
						<method name="GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="43" />
					</type>
					<type name="ClientContextReplySink" full-name="System.Runtime.Remoting.Messaging.ClientContextReplySink" size="64">
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="6" />
						<method name=".ctor(System.Runtime.Remoting.Contexts.Context,System.Runtime.Remoting.Messaging.IMessageSink)" size="21" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="37" />
					</type>
					<type name="MCMDictionary" full-name="System.Runtime.Remoting.Messaging.MCMDictionary" size="79">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodMessage)" size="19" />
						<method name=".cctor()" size="60" />
					</type>
					<type name="RemotingSurrogateSelector" full-name="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" size="110">
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="36" />
						<method name="GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector&amp;)" size="67" />
					</type>
					<type name="MethodReturnDictionary" full-name="System.Runtime.Remoting.Messaging.MethodReturnDictionary" size="126">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodReturnMessage)" size="39" />
						<method name=".cctor()" size="87" />
					</type>
					<type name="ServerObjectTerminatorSink" full-name="System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink" size="128">
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink)" size="14" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="45" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="69" />
					</type>
					<type name="IllogicalCallContext" full-name="System.Runtime.Remoting.Messaging.IllogicalCallContext" size="151">
						<method name="get_HostContext()" size="7" />
						<method name="set_HostContext(System.Object)" size="8" />
						<method name="get_HasUserData()" size="25" />
						<method name="get_Datastore()" size="26" />
						<method name="CreateCopy()" size="78" />
					</type>
					<type name="CADMethodCallMessage" full-name="System.Runtime.Remoting.Messaging.CADMethodCallMessage" size="190">
						<method name="get_Uri()" size="7" />
						<method name="GetArgs(System.Collections.ArrayList)" size="14" />
						<method name="Create(System.Runtime.Remoting.Messaging.IMessage)" size="19" />
						<method name="GetArguments()" size="46" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="97" />
					</type>
					<type name="ArgInfo" full-name="System.Runtime.Remoting.Messaging.ArgInfo" size="213">
						<method name="GetInOutArgs(System.Object[])" size="44" />
						<method name=".ctor(System.Reflection.MethodBase,System.Runtime.Remoting.Messaging.ArgInfoType)" size="169" />
					</type>
					<type name="ClientContextTerminatorSink" full-name="System.Runtime.Remoting.Messaging.ClientContextTerminatorSink" size="231">
						<method name=".ctor(System.Runtime.Remoting.Contexts.Context)" size="14" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="90" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="127" />
					</type>
					<type name="AsyncResult" full-name="System.Runtime.Remoting.Messaging.AsyncResult" size="262">
						<method name="System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException)" size="1" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="6" />
						<method name=".ctor()" size="7" />
						<method name="SetMessageCtrl(System.Runtime.Remoting.Messaging.IMessageCtrl)" size="8" />
						<method name="get_AsyncWaitHandle()" size="58" />
						<method name="EndInvoke()" size="62" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="90" />
					</type>
					<type name="CADMethodReturnMessage" full-name="System.Runtime.Remoting.Messaging.CADMethodReturnMessage" size="303">
						<method name="get_PropertiesCount()" size="7" />
						<method name="GetArgs(System.Collections.ArrayList)" size="14" />
						<method name="Create(System.Runtime.Remoting.Messaging.IMessage)" size="19" />
						<method name="GetException(System.Collections.ArrayList)" size="33" />
						<method name="GetArguments()" size="46" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodReturnMessage)" size="170" />
					</type>
					<type name="StackBuilderSink" full-name="System.Runtime.Remoting.Messaging.StackBuilderSink" size="396">
						<method name="&lt;AsyncProcessMessage&gt;b__4_0(System.Object)" size="13" />
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="36" />
						<method name=".ctor(System.MarshalByRefObject,System.Boolean)" size="37" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="46" />
						<method name="ExecuteAsyncMessage(System.Object)" size="73" />
						<method name="CheckParameters(System.Runtime.Remoting.Messaging.IMessage)" size="191" />
					</type>
					<type name="ConstructionCallDictionary" full-name="System.Runtime.Remoting.Messaging.ConstructionCallDictionary" size="401">
						<method name=".ctor(System.Runtime.Remoting.Activation.IConstructionCallMessage)" size="19" />
						<method name=".cctor()" size="103" />
						<method name="SetMethodProperty(System.String,System.Object)" size="113" />
						<method name="GetMethodProperty(System.String)" size="166" />
					</type>
					<type name="ConstructionCall" full-name="System.Runtime.Remoting.Messaging.ConstructionCall" size="458">
						<method name="get_IsContextOk()" size="7" />
						<method name="set_IsContextOk(System.Boolean)" size="8" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name="get_ContextProperties()" size="26" />
						<method name="InitDictionary()" size="27" />
						<method name=".ctor(System.Type)" size="33" />
						<method name="get_ActivationType()" size="38" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="104" />
						<method name="InitMethodProperty(System.String,System.Object)" size="147" />
					</type>
					<type name="ReturnMessage" full-name="System.Runtime.Remoting.Messaging.ReturnMessage" size="550">
						<method name="get_Args()" size="7" />
						<method name="set_Uri(System.String)" size="8" />
						<method name="get_ArgCount()" size="9" />
						<method name="System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()" size="10" />
						<method name="get_LogicalCallContext()" size="26" />
						<method name="get_Properties()" size="27" />
						<method name="get_MethodName()" size="46" />
						<method name="get_TypeName()" size="51" />
						<method name=".ctor(System.Exception,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="53" />
						<method name="get_OutArgs()" size="72" />
						<method name=".ctor(System.Object,System.Object[],System.Int32,System.Runtime.Remoting.Messaging.LogicalCallContext,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="79" />
						<method name="get_MethodSignature()" size="85" />
					</type>
					<type name="CADMethodRef" full-name="System.Runtime.Remoting.Messaging.CADMethodRef" size="643">
						<method name="GetTypes(System.String[])" size="37" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodMessage)" size="184" />
						<method name="Resolve()" size="422" />
					</type>
					<type name="MonoMethodMessage" full-name="System.Runtime.Remoting.Messaging.MonoMethodMessage" size="878">
						<method name="get_Args()" size="7" />
						<method name="set_LogicalCallContext(System.Runtime.Remoting.Messaging.LogicalCallContext)" size="8" />
						<method name="System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()" size="10" />
						<method name=".ctor(System.Type,System.String,System.Object[])" size="16" />
						<method name="GetArg(System.Int32)" size="19" />
						<method name="get_Properties()" size="27" />
						<method name="get_ArgCount()" size="30" />
						<method name="get_MethodName()" size="32" />
						<method name="get_CallType()" size="35" />
						<method name=".ctor(System.Reflection.MethodBase,System.Object[])" size="37" />
						<method name="GetMethodInfo(System.Type,System.String)" size="40" />
						<method name="get_OutArgCount()" size="46" />
						<method name=".ctor(System.Reflection.MethodInfo,System.Object[],System.Object[])" size="47" />
						<method name="NeedsOutProcessing(System.Int32&amp;)" size="58" />
						<method name="get_MethodSignature()" size="71" />
						<method name="get_OutArgs()" size="80" />
						<method name="InitMessage(System.Reflection.RuntimeMethodInfo,System.Object[])" size="213" />
					</type>
					<type name="LogicalCallContext" full-name="System.Runtime.Remoting.Messaging.LogicalCallContext" size="945">
						<type name="Reader" full-name="System.Runtime.Remoting.Messaging.LogicalCallContext/Reader" size="57">
							<method name=".ctor(System.Runtime.Remoting.Messaging.LogicalCallContext)" size="8" />
							<method name="get_IsNull()" size="10" />
							<method name="Clone()" size="17" />
							<method name="get_HasInfo()" size="22" />
						</type>
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="16" />
						<method name="get_HasUserData()" size="25" />
						<method name="get_RemotingData()" size="26" />
						<method name="get_HasInfo()" size="64" />
						<method name="Merge(System.Runtime.Remoting.Messaging.LogicalCallContext)" size="66" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="193" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="213" />
						<method name="Clone()" size="252" />
					</type>
					<type name="MessageDictionary" full-name="System.Runtime.Remoting.Messaging.MessageDictionary" size="1449">
						<type name="DictionaryEnumerator" full-name="System.Runtime.Remoting.Messaging.MessageDictionary/DictionaryEnumerator" size="314">
							<method name="get_Current()" size="12" />
							<method name="get_Key()" size="15" />
							<method name=".ctor(System.Runtime.Remoting.Messaging.MessageDictionary)" size="59" />
							<method name="get_Entry()" size="102" />
							<method name="MoveNext()" size="111" />
						</type>
						<method name="System.Collections.IEnumerable.GetEnumerator()" size="7" />
						<method name="set_MethodKeys(System.String[])" size="8" />
						<method name="set_Item(System.Object,System.Object)" size="9" />
						<method name="AllocInternalProperties()" size="13" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodMessage)" size="14" />
						<method name="GetInternalProperties()" size="27" />
						<method name="get_Count()" size="38" />
						<method name="get_InternalDictionary()" size="45" />
						<method name="IsOverridenKey(System.String)" size="48" />
						<method name="HasUserData()" size="55" />
						<method name="Add(System.Object,System.Object)" size="85" />
						<method name="get_Values()" size="146" />
						<method name="SetMethodProperty(System.String,System.Object)" size="240" />
						<method name="GetMethodProperty(System.String)" size="379" />
					</type>
					<type name="CADMessageBase" full-name="System.Runtime.Remoting.Messaging.CADMessageBase" size="1484">
						<method name="GetMethod()" size="22" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodMessage)" size="31" />
						<method name="GetLogicalCallContext(System.Collections.ArrayList)" size="33" />
						<method name="MarshalArguments(System.Object[],System.Collections.ArrayList&amp;)" size="40" />
						<method name="UnmarshalProperties(System.Collections.IDictionary,System.Int32,System.Collections.ArrayList)" size="46" />
						<method name="SaveLogicalCallContext(System.Runtime.Remoting.Messaging.IMethodMessage,System.Collections.ArrayList&amp;)" size="65" />
						<method name="GetSignature(System.Reflection.MethodBase,System.Boolean)" size="70" />
						<method name="MarshalArgument(System.Object,System.Collections.ArrayList&amp;)" size="85" />
						<method name="IsPossibleToIgnoreMarshal(System.Object)" size="100" />
						<method name="MarshalProperties(System.Collections.IDictionary,System.Collections.ArrayList&amp;)" size="207" />
						<method name="UnmarshalArgument(System.Object,System.Collections.ArrayList)" size="745" />
					</type>
					<type name="MethodResponse" full-name="System.Runtime.Remoting.Messaging.MethodResponse" size="1551">
						<method name="get_Args()" size="7" />
						<method name="set_Uri(System.String)" size="8" />
						<method name="get_ArgCount()" size="19" />
						<method name="System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()" size="20" />
						<method name="get_LogicalCallContext()" size="26" />
						<method name="get_MethodName()" size="40" />
						<method name="get_Properties()" size="41" />
						<method name="get_MethodSignature()" size="45" />
						<method name=".ctor(System.Object,System.Object[],System.Runtime.Remoting.Messaging.LogicalCallContext,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="49" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="51" />
						<method name=".ctor(System.Exception,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="68" />
						<method name="get_OutArgs()" size="72" />
						<method name="get_MethodBase()" size="76" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage,System.Object,System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturnMessage)" size="114" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMethodCallMessage,System.Runtime.Remoting.Messaging.CADMethodReturnMessage)" size="155" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="233" />
						<method name="InitMethodProperty(System.String,System.Object)" size="384" />
					</type>
					<type name="MethodCall" full-name="System.Runtime.Remoting.Messaging.MethodCall" size="2020">
						<method name="Init()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="set_Uri(System.String)" size="8" />
						<method name="get_ArgCount()" size="9" />
						<method name="System.Runtime.Remoting.Messaging.IInternalMessage.HasProperties()" size="20" />
						<method name="get_Properties()" size="21" />
						<method name="get_LogicalCallContext()" size="26" />
						<method name="get_MethodBase()" size="27" />
						<method name="get_MethodName()" size="32" />
						<method name="get_GenericArguments()" size="36" />
						<method name="get_TypeName()" size="37" />
						<method name="GetTypeNameFromAssemblyQualifiedName(System.String)" size="52" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="57" />
						<method name="get_MethodSignature()" size="85" />
						<method name="CopyFrom(System.Runtime.Remoting.Messaging.IMethodMessage)" size="96" />
						<method name="CastTo(System.String,System.Type)" size="108" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.CADMethodCallMessage)" size="121" />
						<method name=".ctor(System.Object,System.Runtime.Serialization.Formatters.Binary.BinaryMethodCallMessage)" size="152" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="206" />
						<method name="InitMethodProperty(System.String,System.Object)" size="331" />
						<method name="ResolveMethod()" size="508" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Remoting" size="13249">
					<type name="CustomErrorsModes" full-name="System.Runtime.Remoting.CustomErrorsModes" size="0" />
					<type name="FormatterData" full-name="System.Runtime.Remoting.FormatterData" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="EnvoyInfo" full-name="System.Runtime.Remoting.EnvoyInfo" size="21">
						<method name="get_EnvoySinks()" size="7" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink)" size="14" />
					</type>
					<type name="RemotingException" full-name="System.Runtime.Remoting.RemotingException" size="33">
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.String)" size="8" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
					</type>
					<type name="TypeEntry" full-name="System.Runtime.Remoting.TypeEntry" size="37">
						<method name=".ctor()" size="7" />
						<method name="set_AssemblyName(System.String)" size="8" />
					</type>
					<type name="ChannelInfo" full-name="System.Runtime.Remoting.ChannelInfo" size="48">
						<method name="get_ChannelData()" size="7" />
						<method name=".ctor()" size="18" />
						<method name=".ctor(System.Object)" size="23" />
					</type>
					<type name="DisposerReplySink" full-name="System.Runtime.Remoting.DisposerReplySink" size="51">
						<method name="AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="6" />
						<method name=".ctor(System.Runtime.Remoting.Messaging.IMessageSink,System.IDisposable)" size="21" />
						<method name="SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="24" />
					</type>
					<type name="ActivatedServiceTypeEntry" full-name="System.Runtime.Remoting.ActivatedServiceTypeEntry" size="103">
						<method name="get_ObjectType()" size="7" />
						<method name="ToString()" size="18" />
						<method name=".ctor(System.String,System.String)" size="78" />
					</type>
					<type name="ClientIdentity" full-name="System.Runtime.Remoting.ClientIdentity" size="109">
						<method name="CreateObjRef(System.Type)" size="7" />
						<method name="get_TargetUri()" size="12" />
						<method name="set_ClientProxy(System.MarshalByRefObject)" size="13" />
						<method name="get_ClientProxy()" size="24" />
						<method name=".ctor(System.String,System.Runtime.Remoting.ObjRef)" size="53" />
					</type>
					<type name="ActivatedClientTypeEntry" full-name="System.Runtime.Remoting.ActivatedClientTypeEntry" size="125">
						<method name="get_ContextAttributes()" size="2" />
						<method name="get_ApplicationUrl()" size="7" />
						<method name="ToString()" size="24" />
						<method name=".ctor(System.String,System.String,System.String)" size="85" />
					</type>
					<type name="SingleCallIdentity" full-name="System.Runtime.Remoting.SingleCallIdentity" size="143">
						<method name=".ctor(System.String,System.Runtime.Remoting.Contexts.Context,System.Type)" size="10" />
						<method name="AsyncObjectProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="61" />
						<method name="SyncObjectProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="72" />
					</type>
					<type name="WellKnownClientTypeEntry" full-name="System.Runtime.Remoting.WellKnownClientTypeEntry" size="168">
						<method name="get_ApplicationUrl()" size="7" />
						<method name="ToString()" size="62" />
						<method name=".ctor(System.String,System.String,System.String)" size="85" />
					</type>
					<type name="WellKnownServiceTypeEntry" full-name="System.Runtime.Remoting.WellKnownServiceTypeEntry" size="169">
						<method name="get_Mode()" size="7" />
						<method name="ToString()" size="55" />
						<method name=".ctor(System.String,System.String,System.String,System.Runtime.Remoting.WellKnownObjectMode)" size="93" />
					</type>
					<type name="ClientActivatedIdentity" full-name="System.Runtime.Remoting.ClientActivatedIdentity" size="171">
						<method name="GetServerObject()" size="7" />
						<method name="SetClientProxy(System.MarshalByRefObject)" size="8" />
						<method name=".ctor(System.String,System.Type)" size="10" />
						<method name="OnLifetimeExpired()" size="13" />
						<method name="SyncObjectProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="66" />
						<method name="AsyncObjectProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="67" />
					</type>
					<type name="Identity" full-name="System.Runtime.Remoting.Identity" size="174">
						<method name="get_ChannelSink()" size="7" />
						<method name="set_ChannelSink(System.Runtime.Remoting.Messaging.IMessageSink)" size="8" />
						<method name="get_IsConnected()" size="10" />
						<method name=".ctor(System.String)" size="14" />
						<method name="get_HasServerDynamicSinks()" size="22" />
						<method name="NotifyClientDynamicSinks(System.Boolean,System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" size="38" />
					</type>
					<type name="InternalRemotingServices" full-name="System.Runtime.Remoting.InternalRemotingServices" size="197">
						<method name=".cctor()" size="11" />
						<method name="GetCachedSoapAttribute(System.Object)" size="186" />
					</type>
					<type name="SingletonIdentity" full-name="System.Runtime.Remoting.SingletonIdentity" size="206">
						<method name=".ctor(System.String,System.Runtime.Remoting.Contexts.Context,System.Type)" size="10" />
						<method name="SyncObjectProcessMessage(System.Runtime.Remoting.Messaging.IMessage)" size="47" />
						<method name="AsyncObjectProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)" size="48" />
						<method name="GetServerObject()" size="101" />
					</type>
					<type name="ProviderData" full-name="System.Runtime.Remoting.ProviderData" size="272">
						<method name=".ctor()" size="18" />
						<method name="CopyFrom(System.Runtime.Remoting.ProviderData)" size="254" />
					</type>
					<type name="ServerIdentity" full-name="System.Runtime.Remoting.ServerIdentity" size="383">
						<method name="get_ObjectType()" size="7" />
						<method name="set_Context(System.Runtime.Remoting.Contexts.Context)" size="8" />
						<method name=".ctor(System.String,System.Runtime.Remoting.Contexts.Context,System.Type)" size="22" />
						<method name="DisposeServerObject()" size="46" />
						<method name="StartTrackingLifetime(System.Runtime.Remoting.Lifetime.ILease)" size="51" />
						<method name="AttachServerObject(System.MarshalByRefObject,System.Runtime.Remoting.Contexts.Context)" size="90" />
						<method name="CreateObjRef(System.Type)" size="138" />
					</type>
					<type name="ChannelData" full-name="System.Runtime.Remoting.ChannelData" size="505">
						<method name="get_ServerProviders()" size="26" />
						<method name=".ctor()" size="40" />
						<method name="CopyFrom(System.Runtime.Remoting.ChannelData)" size="387" />
					</type>
					<type name="TypeInfo" full-name="System.Runtime.Remoting.TypeInfo" size="537">
						<method name="get_TypeName()" size="7" />
						<method name="CanCastTo(System.Type,System.Object)" size="233" />
						<method name=".ctor(System.Type)" size="297" />
					</type>
					<type name="ObjRef" full-name="System.Runtime.Remoting.ObjRef" size="768">
						<method name="get_ChannelInfo()" size="7" />
						<method name="set_EnvoyInfo(System.Runtime.Remoting.IEnvoyInfo)" size="8" />
						<method name="UpdateChannelInfo()" size="12" />
						<method name=".ctor()" size="13" />
						<method name="get_IsReferenceToWellKnow()" size="16" />
						<method name=".ctor(System.String,System.Runtime.Remoting.IChannelInfo)" size="21" />
						<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="24" />
						<method name="SerializeType()" size="36" />
						<method name="get_ServerType()" size="43" />
						<method name="DeserializeInTheCurrentDomain(System.Int32,System.Byte[])" size="49" />
						<method name=".ctor(System.Type,System.String,System.Object)" size="59" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="128" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="302" />
					</type>
					<type name="SoapServices" full-name="System.Runtime.Remoting.SoapServices" size="848">
						<type name="TypeInfo" full-name="System.Runtime.Remoting.SoapServices/TypeInfo" size="7">
							<method name=".ctor()" size="7" />
						</type>
						<method name="get_XmlNsForClrTypeWithAssembly()" size="6" />
						<method name="GetNameKey(System.String,System.String)" size="18" />
						<method name="GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)" size="23" />
						<method name="PreLoad(System.Reflection.Assembly)" size="30" />
						<method name="GetXmlElementForInteropType(System.Type,System.String&amp;,System.String&amp;)" size="46" />
						<method name=".cctor()" size="51" />
						<method name="EncodeNs(System.String)" size="53" />
						<method name="RegisterInteropXmlElement(System.String,System.String,System.Type)" size="57" />
						<method name="GetAssemblyName(System.Reflection.MethodBase)" size="61" />
						<method name="CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)" size="78" />
						<method name="PreLoad(System.Type)" size="280" />
					</type>
					<type name="RemotingConfiguration" full-name="System.Runtime.Remoting.RemotingConfiguration" size="1461">
						<method name="get_ApplicationName()" size="6" />
						<method name="set_ApplicationName(System.String)" size="7" />
						<method name="RegisterChannelTemplate(System.Runtime.Remoting.ChannelData)" size="18" />
						<method name="get_ProcessId()" size="23" />
						<method name="CustomErrorsEnabled(System.Boolean)" size="24" />
						<method name="RegisterActivatedServiceType(System.Runtime.Remoting.ActivatedServiceTypeEntry)" size="46" />
						<method name="IsRemotelyActivatedClientType(System.Type)" size="47" />
						<method name="RegisterWellKnownServiceType(System.Runtime.Remoting.WellKnownServiceTypeEntry)" size="70" />
						<method name="LoadDefaultDelayedChannels()" size="97" />
						<method name="SetCustomErrorsMode(System.String)" size="105" />
						<method name=".cctor()" size="107" />
						<method name="RegisterActivatedClientType(System.Runtime.Remoting.ActivatedClientTypeEntry)" size="126" />
						<method name="RegisterTypes(System.Collections.ArrayList)" size="131" />
						<method name="RegisterChannels(System.Collections.ArrayList,System.Boolean)" size="445" />
					</type>
					<type name="RemotingServices" full-name="System.Runtime.Remoting.RemotingServices" size="3256">
						<type name="CACD" full-name="System.Runtime.Remoting.RemotingServices/CACD" size="7">
							<method name=".ctor()" size="7" />
						</type>
						<method name="ProxyCheckCast(System.Runtime.Remoting.Proxies.RealProxy,System.RuntimeType)" size="2" />
						<method name="RegisterInternalChannels()" size="6" />
						<method name="Unmarshal(System.Runtime.Remoting.ObjRef)" size="8" />
						<method name="Marshal(System.MarshalByRefObject)" size="9" />
						<method name="CreateClientProxyForComInterop(System.Type)" size="12" />
						<method name="Connect(System.Type,System.String)" size="15" />
						<method name="IsOneWay(System.Reflection.MethodBase)" size="18" />
						<method name="CreateClientProxy(System.Runtime.Remoting.WellKnownClientTypeEntry)" size="19" />
						<method name="SetMessageTargetIdentity(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Identity)" size="21" />
						<method name="GetNormalizedUri(System.String)" size="23" />
						<method name="GetServerTypeForUri(System.String)" size="24" />
						<method name="GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="33" />
						<method name="GetProxyForRemoteObject(System.Runtime.Remoting.ObjRef,System.Type)" size="35" />
						<method name="IsMethodOverloaded(System.Runtime.Remoting.Messaging.IMethodMessage)" size="39" />
						<method name="CreateWellKnownServerIdentity(System.Type,System.String,System.Runtime.Remoting.WellKnownObjectMode)" size="40" />
						<method name="CreateClientActivatedServerIdentity(System.MarshalByRefObject,System.Type,System.String)" size="43" />
						<method name="GetRealProxy(System.Object)" size="44" />
						<method name="GetClientChannelSinkChain(System.String,System.Object,System.String&amp;)" size="49" />
						<method name="RemoveAppNameFromUri(System.String)" size="52" />
						<method name="CreateClientProxyForContextBound(System.Type,System.Object[])" size="60" />
						<method name="CreateClientProxy(System.Type,System.String,System.Object[])" size="63" />
						<method name="UpdateOutArgObject(System.Reflection.ParameterInfo,System.Object,System.Object)" size="65" />
						<method name="GetMethodBaseFromMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)" size="70" />
						<method name="SerializeExceptionData(System.Exception)" size="73" />
						<method name="GetMessageTargetIdentity(System.Runtime.Remoting.Messaging.IMessage)" size="84" />
						<method name="FindInterfaceMethod(System.Type,System.String,System.Type[])" size="86" />
						<method name="GetIdentityForUri(System.String)" size="88" />
						<method name="RegisterServerIdentity(System.Runtime.Remoting.ServerIdentity)" size="91" />
						<method name="DisposeIdentity(System.Runtime.Remoting.Identity)" size="93" />
						<method name="CreateClientProxy(System.Runtime.Remoting.ActivatedClientTypeEntry,System.Object[])" size="103" />
						<method name="SerializeCallData(System.Object)" size="128" />
						<method name="DeserializeCallData(System.Byte[])" size="131" />
						<method name="GetMethodBaseFromName(System.Type,System.String,System.Type[])" size="140" />
						<method name="Unmarshal(System.Runtime.Remoting.ObjRef,System.Boolean)" size="150" />
						<method name="NewUri()" size="163" />
						<method name=".cctor()" size="176" />
						<method name="GetOrCreateClientIdentity(System.Runtime.Remoting.ObjRef,System.Type,System.Object&amp;)" size="262" />
						<method name="Marshal(System.MarshalByRefObject,System.String,System.Type)" size="285" />
						<method name="InternalExecuteMessage(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="400" />
					</type>
					<type name="ConfigHandler" full-name="System.Runtime.Remoting.ConfigHandler" size="3457">
						<method name="OnStartParsing(Mono.Xml.SmallXmlParser)" size="1" />
						<method name="ReadServiceActivated(Mono.Xml.SmallXmlParser/IAttrList)" size="42" />
						<method name="GetNotNull(Mono.Xml.SmallXmlParser/IAttrList,System.String)" size="43" />
						<method name=".ctor(System.Boolean)" size="47" />
						<method name="ValidatePath(System.String,System.String[])" size="52" />
						<method name="ReadClientWellKnown(Mono.Xml.SmallXmlParser/IAttrList)" size="56" />
						<method name="CheckPath(System.String)" size="62" />
						<method name="OnEndElement(System.String)" size="79" />
						<method name="OnStartElement(System.String,Mono.Xml.SmallXmlParser/IAttrList)" size="82" />
						<method name="ReadClientActivated(Mono.Xml.SmallXmlParser/IAttrList)" size="85" />
						<method name="ReadCustomProviderData(System.String,Mono.Xml.SmallXmlParser/IAttrList)" size="95" />
						<method name="ReadServiceWellKnown(Mono.Xml.SmallXmlParser/IAttrList)" size="129" />
						<method name="ReadLifetine(Mono.Xml.SmallXmlParser/IAttrList)" size="199" />
						<method name="ReadProvider(System.String,Mono.Xml.SmallXmlParser/IAttrList,System.Boolean)" size="224" />
						<method name="ReadChannel(Mono.Xml.SmallXmlParser/IAttrList,System.Boolean)" size="225" />
						<method name="ParseTime(System.String)" size="226" />
						<method name="ParseElement(System.String,Mono.Xml.SmallXmlParser/IAttrList)" size="1532" />
					</type>
				</namespace>
				<namespace name="System.Numerics" size="15259">
					<type name="Register" full-name="System.Numerics.Register" size="0" />
					<type name="Vector" full-name="System.Numerics.Vector" size="17">
						<method name="get_IsHardwareAccelerated()" size="2" />
						<method name="AsVectorUInt64(System.Numerics.Vector`1&lt;T&gt;)" size="7" />
						<method name="Equals(System.Numerics.Vector`1&lt;T&gt;,System.Numerics.Vector`1&lt;T&gt;)" size="8" />
					</type>
					<type name="ConstantHelper" full-name="System.Numerics.ConstantHelper" size="115">
						<method name="GetSByteWithAllBitsSet()" size="9" />
						<method name="GetUInt64WithAllBitsSet()" size="11" />
						<method name="GetByteWithAllBitsSet()" size="13" />
						<method name="GetDoubleWithAllBitsSet()" size="18" />
					</type>
					<type name="Vector`1" full-name="System.Numerics.Vector`1" size="15127">
						<type name="VectorSizeHelper" full-name="System.Numerics.Vector`1/VectorSizeHelper" size="0" />
						<method name="get_Count()" size="6" />
						<method name=".ctor(System.Void*)" size="9" />
						<method name="op_Inequality(System.Numerics.Vector`1&lt;T&gt;,System.Numerics.Vector`1&lt;T&gt;)" size="11" />
						<method name=".ctor(System.Numerics.Register&amp;)" size="13" />
						<method name="ToString()" size="17" />
						<method name="Equals(System.Object)" size="23" />
						<method name=".cctor()" size="52" />
						<method name="ToString(System.String,System.IFormatProvider)" size="146" />
						<method name="InitializeCount()" size="377" />
						<method name="GetOneValue()" size="415" />
						<method name="GetAllBitsSetValue()" size="441" />
						<method name="ScalarEquals(T,T)" size="531" />
						<method name="get_Item(System.Int32)" size="631" />
						<method name=".ctor(System.Void*,System.Int32)" size="985" />
						<method name="Equals(System.Numerics.Vector`1&lt;T&gt;)" size="2028" />
						<method name=".ctor(T)" size="2646" />
						<method name="GetHashCode()" size="2673" />
						<method name="Equals(System.Numerics.Vector`1&lt;T&gt;,System.Numerics.Vector`1&lt;T&gt;)" size="4095" />
					</type>
				</namespace>
				<namespace name="System.Reflection" size="15606">
					<type name="AssemblyContentType" full-name="System.Reflection.AssemblyContentType" size="0" />
					<type name="Binder" full-name="System.Reflection.Binder" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="AssemblyCompanyAttribute" full-name="System.Reflection.AssemblyCompanyAttribute" size="14">
						<method name=".ctor(System.String)" size="14" />
					</type>
					<type name="Missing" full-name="System.Reflection.Missing" size="24">
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
					</type>
					<type name="AssemblyFileVersionAttribute" full-name="System.Reflection.AssemblyFileVersionAttribute" size="28">
						<method name=".ctor(System.String)" size="28" />
					</type>
					<type name="SignatureByRefType" full-name="System.Reflection.SignatureByRefType" size="35">
						<method name="IsArrayImpl()" size="2" />
						<method name="get_Suffix()" size="6" />
						<method name=".ctor(System.Reflection.SignatureType)" size="8" />
						<method name="GetArrayRank()" size="11" />
					</type>
					<type name="CustomAttributeExtensions" full-name="System.Reflection.CustomAttributeExtensions" size="38">
						<method name="GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" size="8" />
						<method name="GetCustomAttributes(System.Reflection.MemberInfo)" size="22" />
					</type>
					<type name="TargetException" full-name="System.Reflection.TargetException" size="46">
						<method name=".ctor()" size="8" />
						<method name=".ctor(System.String)" size="9" />
						<method name=".ctor(System.String,System.Exception)" size="20" />
					</type>
					<type name="ManifestResourceInfo" full-name="System.Reflection.ManifestResourceInfo" size="49">
						<method name="get_ReferencedAssembly()" size="7" />
						<method name=".ctor(System.Reflection.Assembly,System.String,System.Reflection.ResourceLocation)" size="28" />
					</type>
					<type name="CustomAttributeFormatException" full-name="System.Reflection.CustomAttributeFormatException" size="50">
						<method name=".ctor(System.String)" size="9" />
						<method name=".ctor()" size="12" />
						<method name=".ctor(System.String,System.Exception)" size="20" />
					</type>
					<type name="AmbiguousMatchException" full-name="System.Reflection.AmbiguousMatchException" size="51">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="TargetInvocationException" full-name="System.Reflection.TargetInvocationException" size="53">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.Exception)" size="20" />
						<method name=".ctor(System.Exception)" size="24" />
					</type>
					<type name="PropertyInfo" full-name="System.Reflection.PropertyInfo" size="58">
						<method name="get_MemberType()" size="3" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" size="11" />
						<method name="op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" size="22" />
					</type>
					<type name="LocalVariableInfo" full-name="System.Reflection.LocalVariableInfo" size="71">
						<method name=".ctor()" size="7" />
						<method name="ToString()" size="64" />
					</type>
					<type name="ConstructorInfo" full-name="System.Reflection.ConstructorInfo" size="93">
						<method name="get_MemberType()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="op_Inequality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" size="11" />
						<method name="Invoke(System.Object[])" size="15" />
						<method name=".cctor()" size="21" />
						<method name="op_Equality(System.Reflection.ConstructorInfo,System.Reflection.ConstructorInfo)" size="22" />
					</type>
					<type name="MonoMethodInfo" full-name="System.Reflection.MonoMethodInfo" size="102">
						<method name="GetAttributes(System.IntPtr)" size="7" />
						<method name="GetParametersInfo(System.IntPtr,System.Reflection.MemberInfo)" size="8" />
						<method name="GetMethodInfo(System.IntPtr)" size="10" />
						<method name="GetDeclaringType(System.IntPtr)" size="12" />
						<method name="GetReturnParameterInfo(System.Reflection.RuntimeMethodInfo)" size="29" />
					</type>
					<type name="Pointer" full-name="System.Reflection.Pointer" size="103">
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="6" />
						<method name=".ctor(System.Void*,System.Type)" size="21" />
						<method name="Box(System.Void*,System.Type)" size="76" />
					</type>
					<type name="SignatureArrayType" full-name="System.Reflection.SignatureArrayType" size="112">
						<method name="IsArrayImpl()" size="2" />
						<method name="get_IsVariableBoundArray()" size="7" />
						<method name="get_IsSZArray()" size="10" />
						<method name=".ctor(System.Reflection.SignatureType,System.Int32,System.Boolean)" size="22" />
						<method name="get_Suffix()" size="60" />
					</type>
					<type name="MethodInfo" full-name="System.Reflection.MethodInfo" size="122">
						<method name="get_MemberType()" size="2" />
						<method name="get_ReturnParameter()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="get_GenericParameterCount()" size="9" />
						<method name="GetGenericArguments()" size="11" />
						<method name="op_Equality(System.Reflection.MethodInfo,System.Reflection.MethodInfo)" size="22" />
					</type>
					<type name="SignatureHasElementType" full-name="System.Reflection.SignatureHasElementType" size="135">
						<method name="get_IsGenericTypeDefinition()" size="2" />
						<method name="GetGenericArguments()" size="6" />
						<method name="get_ElementType()" size="7" />
						<method name="GetGenericTypeDefinition()" size="11" />
						<method name="get_ContainsGenericParameters()" size="12" />
						<method name=".ctor(System.Reflection.SignatureType)" size="14" />
						<method name="get_Name()" size="23" />
					</type>
					<type name="ExceptionHandlingClause" full-name="System.Reflection.ExceptionHandlingClause" size="160">
						<method name=".ctor()" size="7" />
						<method name="ToString()" size="153" />
					</type>
					<type name="StrongNameKeyPair" full-name="System.Reflection.StrongNameKeyPair" size="195">
						<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="1" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="89" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="105" />
					</type>
					<type name="ReflectionTypeLoadException" full-name="System.Reflection.ReflectionTypeLoadException" size="266">
						<method name="get_LoaderExceptions()" size="7" />
						<method name="get_Message()" size="8" />
						<method name=".ctor(System.Type[],System.Exception[])" size="33" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="41" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="58" />
						<method name="CreateString(System.Boolean)" size="111" />
					</type>
					<type name="EventInfo" full-name="System.Reflection.EventInfo" size="292">
						<type name="AddEventAdapter" full-name="System.Reflection.EventInfo/AddEventAdapter" size="0" />
						<method name="get_MemberType()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="op_Inequality(System.Reflection.EventInfo,System.Reflection.EventInfo)" size="11" />
						<method name="StaticAddEventAdapterFrame(System.Reflection.EventInfo/StaticAddEvent`1&lt;D&gt;,System.Object,System.Object)" size="13" />
						<method name="op_Equality(System.Reflection.EventInfo,System.Reflection.EventInfo)" size="22" />
						<method name="get_EventHandlerType()" size="60" />
						<method name="GetEventFromHandle(Mono.RuntimeEventHandle,System.RuntimeTypeHandle)" size="70" />
						<method name="AddEventFrame(System.Reflection.EventInfo/AddEvent`2&lt;T,D&gt;,System.Object,System.Object)" size="92" />
					</type>
					<type name="MemberInfo" full-name="System.Reflection.MemberInfo" size="296">
						<method name="get_MetadataToken()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" size="11" />
						<method name="get_Module()" size="29" />
						<method name="op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" size="228" />
					</type>
					<type name="Assembly" full-name="System.Reflection.Assembly" size="308">
						<type name="ResolveEventHolder" full-name="System.Reflection.Assembly/ResolveEventHolder" size="7">
							<method name=".ctor()" size="7" />
						</type>
						<method name="get_IsFullyTrusted()" size="2" />
						<method name="get_CodeBase()" size="6" />
						<method name="ToString()" size="7" />
						<method name="GetTypes()" size="8" />
						<method name="LoadWithPartialName(System.String,System.Security.Policy.Evidence)" size="9" />
						<method name="GetType(System.String)" size="10" />
						<method name="CreateNIE()" size="11" />
						<method name="Load(System.String)" size="12" />
						<method name="ReflectionOnlyLoad(System.String)" size="18" />
						<method name="LoadWithPartialName(System.String,System.Security.Policy.Evidence,System.Boolean)" size="26" />
						<method name="GetAssembly(System.Type)" size="27" />
						<method name="op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" size="30" />
					</type>
					<type name="RuntimeModule" full-name="System.Reflection.RuntimeModule" size="332">
						<method name="get_Assembly()" size="7" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="9" />
						<method name="GetRuntimeAssembly()" size="12" />
						<method name="ResolveMethod(System.Int32,System.Type[],System.Type[])" size="16" />
						<method name="GetModuleVersionId()" size="17" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="34" />
						<method name="resolve_token_exception(System.String,System.Int32,System.Reflection.ResolveTokenError,System.String)" size="60" />
						<method name="ptrs_from_types(System.Type[])" size="66" />
						<method name="ResolveMethod(System.Reflection.Module,System.IntPtr,System.Int32,System.Type[],System.Type[])" size="67" />
					</type>
					<type name="SignatureConstructedGenericType" full-name="System.Reflection.SignatureConstructedGenericType" size="341">
						<method name="get_IsGenericTypeDefinition()" size="2" />
						<method name="GetGenericTypeDefinition()" size="7" />
						<method name="GetArrayRank()" size="11" />
						<method name="get_Name()" size="12" />
						<method name="get_GenericTypeArguments()" size="17" />
						<method name="get_ContainsGenericParameters()" size="38" />
						<method name="ToString()" size="100" />
						<method name=".ctor(System.Type,System.Type[])" size="104" />
					</type>
					<type name="Module" full-name="System.Reflection.Module" size="387">
						<method name="get_Assembly()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="ResolveMethod(System.Int32)" size="10" />
						<method name="op_Equality(System.Reflection.Module,System.Reflection.Module)" size="22" />
						<method name=".cctor()" size="35" />
						<method name="FilterTypeNameImpl(System.Type,System.Object)" size="99" />
						<method name="FilterTypeNameIgnoreCaseImpl(System.Type,System.Object)" size="132" />
					</type>
					<type name="ParameterInfo" full-name="System.Reflection.ParameterInfo" size="391">
						<method name="get_DefaultValue()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="get_IsIn()" size="12" />
						<method name="get_IsOptional()" size="13" />
						<method name="IsDefined(System.Type,System.Boolean)" size="22" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="26" />
						<method name="ToString()" size="28" />
						<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="230" />
					</type>
					<type name="FieldInfo" full-name="System.Reflection.FieldInfo" size="402">
						<method name="get_MemberType()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" size="11" />
						<method name="get_IsInitOnly()" size="13" />
						<method name="get_IsNotSerialized()" size="16" />
						<method name="op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" size="22" />
						<method name="GetFieldFromHandle(System.RuntimeFieldHandle)" size="48" />
						<method name="GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" size="70" />
						<method name="GetPseudoCustomAttributes()" size="123" />
					</type>
					<type name="RuntimeEventInfo" full-name="System.Reflection.RuntimeEventInfo" size="437">
						<method name="get_Module()" size="7" />
						<method name="GetCustomAttributes(System.Boolean)" size="8" />
						<method name="IsDefined(System.Type,System.Boolean)" size="9" />
						<method name="GetEventInfo(System.Reflection.RuntimeEventInfo)" size="10" />
						<method name="GetDeclaringTypeInternal()" size="12" />
						<method name="ToString()" size="23" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="35" />
						<method name="GetAddMethod(System.Boolean)" size="46" />
						<method name="GetBindingFlags()" size="105" />
					</type>
					<type name="SignatureType" full-name="System.Reflection.SignatureType" size="557">
						<method name="get_IsSignatureType()" size="2" />
						<method name="get_MemberType()" size="3" />
						<method name="MakeByRefType()" size="7" />
						<method name="MakeArrayType()" size="9" />
						<method name="MakeGenericType(System.Type[])" size="11" />
						<method name="get_IsGenericType()" size="17" />
						<method name="MakeArrayType(System.Int32)" size="19" />
					</type>
					<type name="RuntimeConstructorInfo" full-name="System.Reflection.RuntimeConstructorInfo" size="604">
						<method name="get_BindingFlags()" size="2" />
						<method name="get_Module()" size="7" />
						<method name="SerializationToString()" size="8" />
						<method name="IsDefined(System.Type,System.Boolean)" size="9" />
						<method name="get_IsSecurityCritical()" size="10" />
						<method name="get_ReflectedTypeInternal()" size="12" />
						<method name="GetParameters()" size="13" />
						<method name="GetRuntimeModule()" size="17" />
						<method name="ToString()" size="18" />
						<method name="GetParametersCount()" size="22" />
						<method name="SerializationInvoke(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="28" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="47" />
						<method name="InternalInvoke(System.Object,System.Object[],System.Boolean)" size="50" />
						<method name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" size="61" />
						<method name="DoInvoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" size="142" />
					</type>
					<type name="MethodBase" full-name="System.Reflection.MethodBase" size="652">
						<method name="get_CallingConvention()" size="2" />
						<method name="get_IsSecurityCritical()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="GetParametersCount()" size="9" />
						<method name="GetGenericArguments()" size="11" />
						<method name="get_IsPublic()" size="12" />
						<method name="get_IsStatic()" size="13" />
						<method name="get_IsAbstract()" size="16" />
						<method name="get_IsConstructor()" size="38" />
						<method name="GetParameterTypes()" size="43" />
						<method name="FormatNameAndSig(System.Boolean)" size="66" />
						<method name="op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)" size="96" />
						<method name="GetMethodFromHandle(System.RuntimeMethodHandle)" size="122" />
						<method name="ConstructParameters(System.Type[],System.Reflection.CallingConventions,System.Boolean)" size="140" />
					</type>
					<type name="RuntimeFieldInfo" full-name="System.Reflection.RuntimeFieldInfo" size="667">
						<method name="get_BindingFlags()" size="2" />
						<method name="get_Module()" size="7" />
						<method name="get_ReflectedType()" size="8" />
						<method name="IsDefined(System.Type,System.Boolean)" size="9" />
						<method name="GetDeclaringTypeInternal()" size="12" />
						<method name="UnsafeSetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" size="21" />
						<method name="ToString()" size="23" />
						<method name="CheckGeneric()" size="25" />
						<method name="get_FieldType()" size="33" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="40" />
						<method name="SetValueDirect(System.TypedReference,System.Object)" size="58" />
						<method name="CheckConsistency(System.Object)" size="91" />
						<method name="GetValue(System.Object)" size="102" />
						<method name="SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" size="152" />
					</type>
					<type name="RuntimeParameterInfo" full-name="System.Reflection.RuntimeParameterInfo" size="712">
						<method name="New(System.Reflection.ParameterInfo,System.Reflection.MemberInfo)" size="8" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="9" />
						<method name="GetDefaultValueImpl(System.Reflection.ParameterInfo)" size="29" />
						<method name=".ctor(System.Type,System.Reflection.MemberInfo,System.Runtime.InteropServices.MarshalAsAttribute)" size="49" />
						<method name=".ctor(System.String,System.Type,System.Int32,System.Int32,System.Object,System.Reflection.MemberInfo,System.Runtime.InteropServices.MarshalAsAttribute)" size="60" />
						<method name=".ctor(System.Reflection.ParameterInfo,System.Reflection.MemberInfo)" size="75" />
						<method name="FormatParameters(System.Text.StringBuilder,System.Reflection.ParameterInfo[],System.Reflection.CallingConventions,System.Boolean)" size="136" />
						<method name="GetPseudoCustomAttributes()" size="152" />
						<method name="get_DefaultValue()" size="176" />
					</type>
					<type name="SignatureTypeExtensions" full-name="System.Reflection.SignatureTypeExtensions" size="713">
						<method name="TryResolveAgainstGenericMethod(System.Reflection.SignatureType,System.Reflection.MethodInfo)" size="13" />
						<method name="TryMakeArrayType(System.Type)" size="16" />
						<method name="TryMakeArrayType(System.Type,System.Int32)" size="17" />
						<method name="MatchesParameterTypeExactly(System.Type,System.Reflection.ParameterInfo)" size="33" />
						<method name="TryResolve(System.Reflection.SignatureType,System.Type[])" size="264" />
						<method name="MatchesExactly(System.Reflection.SignatureType,System.Type)" size="321" />
					</type>
					<type name="RuntimePropertyInfo" full-name="System.Reflection.RuntimePropertyInfo" size="766">
						<type name="GetterAdapter" full-name="System.Reflection.RuntimePropertyInfo/GetterAdapter" size="0" />
						<method name="get_BindingFlags()" size="2" />
						<method name="get_Module()" size="7" />
						<method name="ToString()" size="8" />
						<method name="IsDefined(System.Type,System.Boolean)" size="9" />
						<method name="GetDeclaringTypeInternal()" size="12" />
						<method name="GetterAdapterFrame(System.Reflection.RuntimePropertyInfo/Getter`2&lt;T,R&gt;,System.Object)" size="18" />
						<method name="get_ReflectedType()" size="19" />
						<method name="get_DeclaringType()" size="20" />
						<method name="CachePropertyInfo(System.Reflection.PInfo)" size="39" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="48" />
						<method name="GetGetMethod(System.Boolean)" size="61" />
						<method name="GetPropertyFromHandle(Mono.RuntimePropertyHandle,System.RuntimeTypeHandle)" size="70" />
						<method name="get_PropertyType()" size="71" />
						<method name="FormatNameAndSig(System.Boolean)" size="94" />
						<method name="GetIndexParameters()" size="132" />
					</type>
					<type name="RuntimeAssembly" full-name="System.Reflection.RuntimeAssembly" size="848">
						<type name="UnmanagedMemoryStreamForModule" full-name="System.Reflection.RuntimeAssembly/UnmanagedMemoryStreamForModule" size="39">
							<method name=".ctor(System.Byte*,System.Int64,System.Reflection.Module)" size="16" />
							<method name="Dispose(System.Boolean)" size="23" />
						</type>
						<method name="get_FullName()" size="7" />
						<method name="get_CodeBase()" size="8" />
						<method name="IsDefined(System.Type,System.Boolean)" size="9" />
						<method name="LoadWithPartialNameInternal(System.String,System.Security.Policy.Evidence,System.Threading.StackCrawlMark&amp;)" size="13" />
						<method name="LoadWithPartialNameInternal(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.Threading.StackCrawlMark&amp;)" size="14" />
						<method name=".ctor()" size="18" />
						<method name="GetName(System.Boolean)" size="22" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="29" />
						<method name="ToString()" size="34" />
						<method name="Equals(System.Object)" size="44" />
						<method name="GetType(System.String,System.Boolean,System.Boolean)" size="45" />
						<method name="get_Location()" size="55" />
						<method name="GetManifestResourceInfo(System.String)" size="56" />
						<method name="GetCodeBase(System.Reflection.Assembly,System.Boolean)" size="59" />
						<method name="GetModules(System.Boolean)" size="66" />
						<method name="GetModule(System.String)" size="77" />
						<method name="GetManifestResourceStream(System.String)" size="230" />
					</type>
					<type name="RuntimeMethodInfo" full-name="System.Reflection.RuntimeMethodInfo" size="1230">
						<method name="get_BindingFlags()" size="2" />
						<method name="get_Module()" size="7" />
						<method name="GetBaseMethod()" size="8" />
						<method name="CreateDelegate(System.Type,System.Object)" size="9" />
						<method name="get_IsSecurityCritical()" size="10" />
						<method name="get_ReflectedTypeInternal()" size="12" />
						<method name="GetParametersInternal()" size="13" />
						<method name="GetParametersCount()" size="15" />
						<method name="GetRuntimeModule()" size="17" />
						<method name="GetMethodFromHandleNoGenericCheck(System.RuntimeMethodHandle)" size="19" />
						<method name=".ctor(System.RuntimeMethodHandle)" size="20" />
						<method name="GetMethodFromHandleNoGenericCheck(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" size="21" />
						<method name="get_Name()" size="22" />
						<method name="ToString()" size="29" />
						<method name="SerializationToString()" size="30" />
						<method name="GetParameters()" size="43" />
						<method name="get_ContainsGenericParameters()" size="53" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="73" />
						<method name="FormatNameAndSig(System.Boolean)" size="96" />
						<method name="GetPseudoCustomAttributes()" size="119" />
						<method name="ConvertValues(System.Reflection.Binder,System.Object[],System.Reflection.ParameterInfo[],System.Globalization.CultureInfo,System.Reflection.BindingFlags)" size="130" />
						<method name="Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" size="151" />
						<method name="MakeGenericMethod(System.Type[])" size="174" />
					</type>
					<type name="MemberInfoSerializationHolder" full-name="System.Reflection.MemberInfoSerializationHolder" size="1473">
						<method name="GetSerializationInfo(System.Runtime.Serialization.SerializationInfo,System.String,System.RuntimeType,System.String,System.Reflection.MemberTypes)" size="14" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="16" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="182" />
						<method name="GetSerializationInfo(System.Runtime.Serialization.SerializationInfo,System.String,System.RuntimeType,System.String,System.String,System.Reflection.MemberTypes,System.Type[])" size="202" />
						<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="1059" />
					</type>
					<type name="AssemblyName" full-name="System.Reflection.AssemblyName" size="2110">
						<method name="get_Name()" size="7" />
						<method name="OnDeserialization(System.Object)" size="13" />
						<method name=".ctor()" size="14" />
						<method name="ToString()" size="19" />
						<method name="Create(System.Reflection.Assembly,System.Boolean)" size="41" />
						<method name="InternalGetPublicKeyToken()" size="66" />
						<method name="GetPublicKeyToken()" size="78" />
						<method name="ComputePublicKeyToken()" size="79" />
						<method name="set_Version(System.Version)" size="100" />
						<method name=".ctor(System.String)" size="119" />
						<method name="get_IsPublicKeyValid()" size="125" />
						<method name="Clone()" size="186" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="245" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="293" />
						<method name="get_FullName()" size="312" />
						<method name="FillName(Mono.MonoAssemblyName*,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" size="399" />
					</type>
				</namespace>
				<namespace name="System.Threading" size="17837">
					<type name="ApartmentState" full-name="System.Threading.ApartmentState" size="0" />
					<type name="_ThreadPoolWaitCallback" full-name="System.Threading._ThreadPoolWaitCallback" size="6">
						<method name="PerformWaitCallback()" size="6" />
					</type>
					<type name="ManualResetEvent" full-name="System.Threading.ManualResetEvent" size="9">
						<method name=".ctor(System.Boolean)" size="9" />
					</type>
					<type name="CancellationCallbackCoreWorkArguments" full-name="System.Threading.CancellationCallbackCoreWorkArguments" size="15">
						<method name=".ctor(System.Threading.SparselyPopulatedArrayFragment`1&lt;System.Threading.CancellationCallbackInfo&gt;,System.Int32)" size="15" />
					</type>
					<type name="ThreadPoolGlobals" full-name="System.Threading.ThreadPoolGlobals" size="17">
						<method name="get_processorCount()" size="6" />
						<method name=".cctor()" size="11" />
					</type>
					<type name="SemaphoreFullException" full-name="System.Threading.SemaphoreFullException" size="21">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="12" />
					</type>
					<type name="LockRecursionException" full-name="System.Threading.LockRecursionException" size="24">
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.String)" size="8" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
					</type>
					<type name="LockHolder" full-name="System.Threading.LockHolder" size="28">
						<method name="Dispose()" size="12" />
						<method name="Hold(System.Threading.Lock)" size="16" />
					</type>
					<type name="SparselyPopulatedArrayAddInfo`1" full-name="System.Threading.SparselyPopulatedArrayAddInfo`1" size="29">
						<method name="get_Source()" size="7" />
						<method name=".ctor(System.Threading.SparselyPopulatedArrayFragment`1&lt;T&gt;,System.Int32)" size="15" />
					</type>
					<type name="ThreadAbortException" full-name="System.Threading.ThreadAbortException" size="33">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="24" />
					</type>
					<type name="TimeoutHelper" full-name="System.Threading.TimeoutHelper" size="36">
						<method name="GetTime()" size="6" />
						<method name="UpdateTimeOut(System.UInt32,System.Int32)" size="30" />
					</type>
					<type name="Lock" full-name="System.Threading.Lock" size="42">
						<method name="Acquire()" size="12" />
						<method name=".ctor()" size="18" />
					</type>
					<type name="SynchronizationLockException" full-name="System.Threading.SynchronizationLockException" size="51">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="PlatformHelper" full-name="System.Threading.PlatformHelper" size="71">
						<method name=".cctor()" size="14" />
						<method name="get_ProcessorCount()" size="57" />
					</type>
					<type name="Mutex" full-name="System.Threading.Mutex" size="84">
						<method name=".ctor(System.Boolean)" size="22" />
						<method name="ReleaseMutex()" size="25" />
						<method name="CreateMutex_internal(System.Boolean,System.String,System.Boolean&amp;)" size="37" />
					</type>
					<type name="ExecutionContextSwitcher" full-name="System.Threading.ExecutionContextSwitcher" size="87">
						<method name="UndoNoThrow()" size="17" />
						<method name="Undo()" size="70" />
					</type>
					<type name="AbandonedMutexException" full-name="System.Threading.AbandonedMutexException" size="107">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="16" />
						<method name="SetupException(System.Int32,System.Threading.WaitHandle)" size="23" />
						<method name=".ctor()" size="30" />
						<method name=".ctor(System.Int32,System.Threading.WaitHandle)" size="38" />
					</type>
					<type name="NativeEventCalls" full-name="System.Threading.NativeEventCalls" size="110">
						<method name="SetEvent(Microsoft.Win32.SafeHandles.SafeWaitHandle)" size="36" />
						<method name="CreateEvent_internal(System.Boolean,System.Boolean,System.String,System.Int32&amp;)" size="38" />
					</type>
					<type name="SparselyPopulatedArrayFragment`1" full-name="System.Threading.SparselyPopulatedArrayFragment`1" size="136">
						<method name=".ctor(System.Int32)" size="9" />
						<method name="get_Item(System.Int32)" size="18" />
						<method name=".ctor(System.Int32,System.Threading.SparselyPopulatedArrayFragment`1&lt;T&gt;)" size="37" />
						<method name="SafeAtomicRemove(System.Int32,T)" size="54" />
					</type>
					<type name="LazyInitializer" full-name="System.Threading.LazyInitializer" size="137">
						<method name="EnsureInitialized(T&amp;)" size="22" />
						<method name="EnsureInitialized(T&amp;,System.Func`1&lt;T&gt;)" size="23" />
						<method name="EnsureInitializedCore(T&amp;)" size="42" />
						<method name="EnsureInitializedCore(T&amp;,System.Func`1&lt;T&gt;)" size="50" />
					</type>
					<type name="CancellationCallbackInfo" full-name="System.Threading.CancellationCallbackInfo" size="138">
						<type name="WithSyncContext" full-name="System.Threading.CancellationCallbackInfo/WithSyncContext" size="20">
							<method name=".ctor(System.Action`1&lt;System.Object&gt;,System.Object,System.Threading.ExecutionContext,System.Threading.CancellationTokenSource,System.Threading.SynchronizationContext)" size="20" />
						</type>
						<method name="ExecutionContextCallback(System.Object)" size="25" />
						<method name=".ctor(System.Action`1&lt;System.Object&gt;,System.Object,System.Threading.ExecutionContext,System.Threading.CancellationTokenSource)" size="36" />
						<method name="ExecuteCallback()" size="57" />
					</type>
					<type name="QueueUserWorkItemCallback" full-name="System.Threading.QueueUserWorkItemCallback" size="141">
						<method name="System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException)" size="1" />
						<method name=".cctor()" size="18" />
						<method name="WaitCallback_Context(System.Object)" size="25" />
						<method name=".ctor(System.Threading.WaitCallback,System.Object,System.Boolean,System.Threading.StackCrawlMark&amp;)" size="45" />
						<method name="System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()" size="52" />
					</type>
					<type name="SynchronizationContext" full-name="System.Threading.SynchronizationContext" size="159">
						<method name="GetThreadLocalContext()" size="2" />
						<method name="get_CurrentExplicit()" size="6" />
						<method name="Send(System.Threading.SendOrPostCallback,System.Object)" size="8" />
						<method name="IsWaitNotificationRequired()" size="12" />
						<method name="Post(System.Threading.SendOrPostCallback,System.Object)" size="20" />
						<method name="Wait(System.IntPtr[],System.Boolean,System.Int32)" size="23" />
						<method name="SetSynchronizationContext(System.Threading.SynchronizationContext)" size="24" />
						<method name="get_Current()" size="28" />
						<method name="WaitHelper(System.IntPtr[],System.Boolean,System.Int32)" size="36" />
					</type>
					<type name="ThreadPoolWorkQueueThreadLocals" full-name="System.Threading.ThreadPoolWorkQueueThreadLocals" size="176">
						<method name="Finalize()" size="35" />
						<method name=".ctor(System.Threading.ThreadPoolWorkQueue)" size="63" />
						<method name="CleanUp()" size="78" />
					</type>
					<type name="ThreadHelper" full-name="System.Threading.ThreadHelper" size="194">
						<method name="SetExecutionContextHelper(System.Threading.ExecutionContext)" size="8" />
						<method name=".ctor(System.Delegate)" size="14" />
						<method name=".cctor()" size="18" />
						<method name="ThreadStart()" size="43" />
						<method name="ThreadStart(System.Object)" size="51" />
						<method name="ThreadStart_Context(System.Object)" size="60" />
					</type>
					<type name="EventWaitHandle" full-name="System.Threading.EventWaitHandle" size="247">
						<method name=".ctor(System.Boolean,System.Threading.EventResetMode)" size="10" />
						<method name="Reset()" size="23" />
						<method name=".ctor(System.Boolean,System.Threading.EventResetMode,System.String)" size="191" />
					</type>
					<type name="CancellationToken" full-name="System.Threading.CancellationToken" size="291">
						<type name="&lt;&gt;c" full-name="System.Threading.CancellationToken/&lt;&gt;c" size="30">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;.cctor&gt;b__26_0(System.Object)" size="12" />
						</type>
						<method name=".ctor(System.Threading.CancellationTokenSource)" size="8" />
						<method name="op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)" size="9" />
						<method name="get_None()" size="10" />
						<method name="InternalRegisterWithoutEC(System.Action`1&lt;System.Object&gt;,System.Object)" size="11" />
						<method name="op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)" size="12" />
						<method name="Equals(System.Threading.CancellationToken)" size="15" />
						<method name="ThrowOperationCanceledException()" size="17" />
						<method name="GetHashCode()" size="21" />
						<method name="get_IsCancellationRequested()" size="22" />
						<method name="Equals(System.Object)" size="23" />
						<method name="Register(System.Action`1&lt;System.Object&gt;,System.Object,System.Boolean,System.Boolean)" size="66" />
					</type>
					<type name="SpinWait" full-name="System.Threading.SpinWait" size="294">
						<method name="get_Count()" size="7" />
						<method name="SpinOnce()" size="9" />
						<method name="get_NextSpinWillYield()" size="18" />
						<method name="SpinOnce(System.Int32)" size="47" />
						<method name="SpinOnceCore(System.Int32)" size="195" />
					</type>
					<type name="Monitor" full-name="System.Threading.Monitor" size="297">
						<method name="Wait(System.Object,System.Int32)" size="9" />
						<method name="Enter(System.Object,System.Boolean&amp;)" size="17" />
						<method name="ThrowLockTakenException()" size="21" />
						<method name="Wait(System.Object,System.Int32,System.Boolean)" size="23" />
						<method name="ObjPulse(System.Object)" size="26" />
						<method name="ReliableEnterTimeout(System.Object,System.Int32,System.Boolean&amp;)" size="42" />
						<method name="ObjWait(System.Boolean,System.Int32,System.Object)" size="82" />
					</type>
					<type name="CancellationTokenRegistration" full-name="System.Threading.CancellationTokenRegistration" size="335">
						<method name=".ctor(System.Threading.CancellationCallbackInfo,System.Threading.SparselyPopulatedArrayAddInfo`1&lt;System.Threading.CancellationCallbackInfo&gt;)" size="15" />
						<method name="Equals(System.Object)" size="23" />
						<method name="Unregister()" size="69" />
						<method name="Equals(System.Threading.CancellationTokenRegistration)" size="77" />
						<method name="GetHashCode()" size="82" />
					</type>
					<type name="ThreadPool" full-name="System.Threading.ThreadPool" size="374">
						<method name="NotifyWorkItemProgress()" size="11" />
						<method name="QueueUserWorkItem(System.Threading.WaitCallback,System.Object)" size="14" />
						<method name="UnsafeQueueCustomWorkItem(System.Threading.IThreadPoolWorkItem,System.Boolean)" size="21" />
						<method name="TryPopCustomWorkItem(System.Threading.IThreadPoolWorkItem)" size="23" />
						<method name="EnsureVMInitialized()" size="28" />
						<method name="QueueUserWorkItemHelper(System.Threading.WaitCallback,System.Object,System.Threading.StackCrawlMark&amp;,System.Boolean,System.Boolean)" size="51" />
						<method name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" size="83" />
						<method name="RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean,System.Threading.StackCrawlMark&amp;,System.Boolean)" size="118" />
					</type>
					<type name="SparselyPopulatedArray`1" full-name="System.Threading.SparselyPopulatedArray`1" size="393">
						<method name="get_Tail()" size="9" />
						<method name=".ctor(System.Int32)" size="30" />
						<method name="Add(T)" size="354" />
					</type>
					<type name="RegisteredWaitHandle" full-name="System.Threading.RegisteredWaitHandle" size="447">
						<method name=".ctor(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" size="77" />
						<method name="DoCallBack(System.Object)" size="114" />
						<method name="Wait(System.Object)" size="256" />
					</type>
					<type name="Thread" full-name="System.Threading.Thread" size="889">
						<method name="Yield()" size="6" />
						<method name="get_CurrentUICulture()" size="7" />
						<method name="get_ExecutionContextBelongsToCurrentScope()" size="10" />
						<method name="Start()" size="11" />
						<method name="GetExecutionContextReader()" size="12" />
						<method name="set_Name(System.String)" size="13" />
						<method name="SetExecutionContext(System.Threading.ExecutionContext,System.Boolean)" size="15" />
						<method name="get_CurrentThread()" size="17" />
						<method name="GetApartmentState()" size="19" />
						<method name="SpinWait(System.Int32)" size="20" />
						<method name="SetExecutionContext(System.Threading.ExecutionContext/Reader,System.Boolean)" size="21" />
						<method name="BeginCriticalRegion()" size="28" />
						<method name=".ctor(System.Threading.ThreadStart)" size="29" />
						<method name="GetCurrentUICultureNoAppX()" size="30" />
						<method name="Sleep(System.Int32)" size="32" />
						<method name="set_IsBackground(System.Boolean)" size="36" />
						<method name="Start(System.Object)" size="47" />
						<method name="GetProcessDefaultStackSize(System.Int32)" size="51" />
						<method name=".ctor(System.Threading.ParameterizedThreadStart,System.Int32)" size="54" />
						<method name="StartInternal(System.Object,System.Threading.StackCrawlMark&amp;)" size="59" />
						<method name="GetMutableExecutionContext()" size="62" />
						<method name="SetStartHelper(System.Delegate,System.Int32)" size="63" />
					</type>
					<type name="SpinLock" full-name="System.Threading.SpinLock" size="1070">
						<type name="SystemThreading_SpinLockDebugView" full-name="System.Threading.SpinLock/SystemThreading_SpinLockDebugView" size="0" />
						<method name=".cctor()" size="11" />
						<method name="get_IsThreadOwnerTrackingEnabled()" size="18" />
						<method name=".ctor(System.Boolean)" size="35" />
						<method name="get_IsHeldByCurrentThread()" size="51" />
						<method name="DecrementWaiters()" size="55" />
						<method name="Enter(System.Boolean&amp;)" size="60" />
						<method name="TryEnter(System.Int32,System.Boolean&amp;)" size="65" />
						<method name="ExitSlowPath(System.Boolean)" size="113" />
						<method name="ContinueTryEnterWithThreadTracking(System.Int32,System.UInt32,System.Boolean&amp;)" size="119" />
						<method name="ContinueTryEnter(System.Int32,System.Boolean&amp;)" size="488" />
					</type>
					<type name="WaitHandle" full-name="System.Threading.WaitHandle" size="1099">
						<method name="ThrowAbandonedMutexException()" size="6" />
						<method name="ThrowAbandonedMutexException(System.Int32,System.Threading.WaitHandle)" size="8" />
						<method name="WaitOne()" size="9" />
						<method name=".cctor()" size="12" />
						<method name=".ctor()" size="13" />
						<method name="Close()" size="14" />
						<method name="SetHandleInternal(Microsoft.Win32.SafeHandles.SafeWaitHandle)" size="22" />
						<method name="Dispose(System.Boolean)" size="24" />
						<method name="Init()" size="28" />
						<method name="get_Handle()" size="30" />
						<method name="WaitOne(System.Int32,System.Boolean)" size="35" />
						<method name="get_SafeWaitHandle()" size="38" />
						<method name="WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" size="54" />
						<method name="InternalWaitOne(System.Runtime.InteropServices.SafeHandle,System.Int64,System.Boolean,System.Boolean)" size="66" />
						<method name="set_Handle(System.IntPtr)" size="70" />
						<method name="WaitOneNative(System.Runtime.InteropServices.SafeHandle,System.UInt32,System.Boolean,System.Boolean)" size="116" />
						<method name="WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" size="238" />
						<method name="WaitMultiple(System.Threading.WaitHandle[],System.Int32,System.Boolean,System.Boolean)" size="271" />
					</type>
					<type name="ManualResetEventSlim" full-name="System.Threading.ManualResetEventSlim" size="1175">
						<method name="ExtractStatePortion(System.Int32,System.Int32)" size="4" />
						<method name="Set()" size="8" />
						<method name="ExtractStatePortionAndShiftRight(System.Int32,System.Int32,System.Int32)" size="9" />
						<method name="Dispose()" size="14" />
						<method name=".cctor()" size="18" />
						<method name=".ctor(System.Boolean)" size="19" />
						<method name="get_Waiters()" size="20" />
						<method name="get_SpinCount()" size="21" />
						<method name="get_IsSet()" size="22" />
						<method name="set_SpinCount(System.Int32)" size="28" />
						<method name="get_WaitHandle()" size="32" />
						<method name="Initialize(System.Boolean,System.Int32)" size="37" />
						<method name="set_Waiters(System.Int32)" size="47" />
						<method name="UpdateStateAtomically(System.Int32,System.Int32)" size="50" />
						<method name="CancellationTokenCallback(System.Object)" size="52" />
						<method name=".ctor(System.Boolean,System.Int32)" size="69" />
						<method name="LazyInitializeEvent()" size="90" />
						<method name="Dispose(System.Boolean)" size="94" />
						<method name="Set(System.Boolean)" size="124" />
						<method name="Wait(System.Int32,System.Threading.CancellationToken)" size="335" />
					</type>
					<type name="CancellationTokenSource" full-name="System.Threading.CancellationTokenSource" size="1337">
						<type name="LinkedNCancellationTokenSource" full-name="System.Threading.CancellationTokenSource/LinkedNCancellationTokenSource" size="53">
							<type name="&lt;&gt;c" full-name="System.Threading.CancellationTokenSource/LinkedNCancellationTokenSource/&lt;&gt;c" size="31">
								<method name=".ctor()" size="7" />
								<method name=".cctor()" size="11" />
								<method name="&lt;.cctor&gt;b__4_0(System.Object)" size="13" />
							</type>
							<method name=".cctor()" size="22" />
						</type>
						<type name="Linked1CancellationTokenSource" full-name="System.Threading.CancellationTokenSource/Linked1CancellationTokenSource" size="60">
							<method name=".ctor(System.Threading.CancellationToken)" size="26" />
							<method name="Dispose(System.Boolean)" size="34" />
						</type>
						<type name="Linked2CancellationTokenSource" full-name="System.Threading.CancellationTokenSource/Linked2CancellationTokenSource" size="93">
							<method name=".ctor(System.Threading.CancellationToken,System.Threading.CancellationToken)" size="45" />
							<method name="Dispose(System.Boolean)" size="48" />
						</type>
						<method name="get_IsDisposed()" size="7" />
						<method name="Cancel()" size="8" />
						<method name="get_ThreadIDExecutingCallbacks()" size="9" />
						<method name="set_ThreadIDExecutingCallbacks(System.Int32)" size="10" />
						<method name="get_IsCancellationCompleted()" size="12" />
						<method name="get_Token()" size="13" />
						<method name="Cancel(System.Boolean)" size="14" />
						<method name="get_IsCancellationRequested()" size="15" />
						<method name="CreateLinkedTokenSource(System.Threading.CancellationToken)" size="22" />
						<method name=".ctor()" size="25" />
						<method name="WaitForCallbackToComplete(System.Threading.CancellationCallbackInfo)" size="27" />
						<method name="TimerCallbackLogic(System.Object)" size="37" />
						<method name="CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)" size="40" />
						<method name="CancellationCallbackCoreWork(System.Threading.CancellationCallbackCoreWorkArguments)" size="60" />
						<method name=".cctor()" size="79" />
						<method name="NotifyCancellation(System.Boolean)" size="82" />
						<method name="Dispose(System.Boolean)" size="90" />
						<method name="InternalRegister(System.Action`1&lt;System.Object&gt;,System.Object,System.Threading.SynchronizationContext,System.Threading.ExecutionContext)" size="218" />
						<method name="ExecuteCallbackHandlers(System.Boolean)" size="301" />
					</type>
					<type name="Timer" full-name="System.Threading.Timer" size="1416">
						<type name="TimerComparer" full-name="System.Threading.Timer/TimerComparer" size="58">
							<method name="Compare(System.Threading.Timer,System.Threading.Timer)" size="19" />
							<method name="System.Collections.IComparer.Compare(System.Object,System.Object)" size="39" />
						</type>
						<type name="Scheduler" full-name="System.Threading.Timer/Scheduler" size="1015">
							<method name="get_Instance()" size="6" />
							<method name=".cctor()" size="11" />
							<method name="WakeupScheduler()" size="13" />
							<method name="InternalRemove(System.Threading.Timer)" size="17" />
							<method name="TimerCB(System.Object)" size="25" />
							<method name="Remove(System.Threading.Timer)" size="32" />
							<method name="InitScheduler()" size="42" />
							<method name="Add(System.Threading.Timer)" size="49" />
							<method name=".ctor()" size="53" />
							<method name="SchedulerThread()" size="75" />
							<method name="FireTimer(System.Threading.Timer)" size="119" />
							<method name="Change(System.Threading.Timer,System.Int64)" size="147" />
							<method name="RunSchedulerLoop()" size="426" />
						</type>
						<method name="KeepRootedWhileScheduled()" size="1" />
						<method name="get_scheduler()" size="6" />
						<method name=".ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" size="20" />
						<method name="Change(System.TimeSpan,System.TimeSpan)" size="24" />
						<method name="Dispose()" size="28" />
						<method name=".ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" size="31" />
						<method name="Init(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" size="54" />
						<method name="Change(System.Int64,System.Int64,System.Boolean)" size="179" />
					</type>
					<type name="ExecutionContext" full-name="System.Threading.ExecutionContext" size="1714">
						<type name="Flags" full-name="System.Threading.ExecutionContext/Flags" size="0" />
						<type name="Reader" full-name="System.Threading.ExecutionContext/Reader" size="171">
							<method name="DangerousGetRawExecutionContext()" size="7" />
							<method name=".ctor(System.Threading.ExecutionContext)" size="8" />
							<method name="get_IsNull()" size="10" />
							<method name="IsDefaultFTContext(System.Boolean)" size="13" />
							<method name="get_IsFlowSuppressed()" size="22" />
							<method name="get_LogicalCallContext()" size="28" />
							<method name="HasSameLocalValues(System.Threading.ExecutionContext)" size="39" />
						</type>
						<method name=".ctor()" size="7" />
						<method name="set_LogicalCallContext(System.Runtime.Remoting.Messaging.LogicalCallContext)" size="8" />
						<method name="Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object,System.Boolean)" size="10" />
						<method name="Capture()" size="11" />
						<method name="get_isNewCapture()" size="12" />
						<method name="EstablishCopyOnWriteScope(System.Threading.ExecutionContextSwitcher&amp;)" size="13" />
						<method name="get_IsPreAllocatedDefault()" size="14" />
						<method name=".ctor(System.Boolean)" size="17" />
						<method name="IsFlowSuppressed()" size="19" />
						<method name=".cctor()" size="22" />
						<method name="get_LogicalCallContext()" size="26" />
						<method name="set_isNewCapture(System.Boolean)" size="34" />
						<method name="EstablishCopyOnWriteScope(System.Threading.Thread,System.Boolean,System.Threading.ExecutionContextSwitcher&amp;)" size="39" />
						<method name="Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" size="53" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="57" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="66" />
						<method name="IsDefaultFTContext(System.Boolean)" size="75" />
						<method name="SetExecutionContext(System.Threading.ExecutionContext,System.Boolean)" size="120" />
						<method name="RunInternal(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object,System.Boolean)" size="131" />
						<method name="CreateMutableCopy()" size="137" />
						<method name="Capture(System.Threading.StackCrawlMark&amp;,System.Threading.ExecutionContext/CaptureOptions)" size="228" />
						<method name="OnAsyncLocalContextChanged(System.Threading.ExecutionContext,System.Threading.ExecutionContext)" size="305" />
					</type>
					<type name="SemaphoreSlim" full-name="System.Threading.SemaphoreSlim" size="2076">
						<type name="TaskNode" full-name="System.Threading.SemaphoreSlim/TaskNode" size="17">
							<method name="System.Threading.IThreadPoolWorkItem.MarkAborted(System.Threading.ThreadAbortException)" size="1" />
							<method name=".ctor()" size="7" />
							<method name="System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()" size="9" />
						</type>
						<type name="&lt;WaitUntilCountOrTimeoutAsync&gt;d__32" full-name="System.Threading.SemaphoreSlim/&lt;WaitUntilCountOrTimeoutAsync&gt;d__32" size="532">
							<method name="SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)" size="13" />
							<method name="MoveNext()" size="519" />
						</type>
						<method name="GetResourceString(System.String)" size="7" />
						<method name="Release()" size="8" />
						<method name="Dispose()" size="14" />
						<method name="WaitAsync()" size="17" />
						<method name="Wait()" size="18" />
						<method name="CheckDispose()" size="26" />
						<method name="CancellationTokenCanceledEventHandler(System.Object)" size="48" />
						<method name="WaitUntilCountOrTimeout(System.Int32,System.UInt32,System.Threading.CancellationToken)" size="57" />
						<method name="CreateAndAddAsyncWaiter()" size="63" />
						<method name=".cctor()" size="70" />
						<method name="WaitUntilCountOrTimeoutAsync(System.Threading.SemaphoreSlim/TaskNode,System.Int32,System.Threading.CancellationToken)" size="81" />
						<method name=".ctor(System.Int32,System.Int32)" size="100" />
						<method name="RemoveAsyncWaiter(System.Threading.SemaphoreSlim/TaskNode)" size="130" />
						<method name="WaitAsync(System.Int32,System.Threading.CancellationToken)" size="199" />
						<method name="Release(System.Int32)" size="251" />
						<method name="Wait(System.Int32,System.Threading.CancellationToken)" size="373" />
					</type>
					<type name="ThreadPoolWorkQueue" full-name="System.Threading.ThreadPoolWorkQueue" size="2391">
						<type name="SparseArray`1" full-name="System.Threading.ThreadPoolWorkQueue/SparseArray`1" size="295">
							<method name="get_Current()" size="9" />
							<method name=".ctor(System.Int32)" size="21" />
							<method name="Remove(T)" size="110" />
							<method name="Add(T)" size="155" />
						</type>
						<type name="QueueSegment" full-name="System.Threading.ThreadPoolWorkQueue/QueueSegment" size="304">
							<method name=".ctor()" size="23" />
							<method name="GetIndexes(System.Int32&amp;,System.Int32&amp;)" size="31" />
							<method name="IsUsedUp()" size="35" />
							<method name="TryEnqueue(System.Threading.IThreadPoolWorkItem)" size="59" />
							<method name="CompareExchangeIndexes(System.Int32&amp;,System.Int32,System.Int32&amp;,System.Int32)" size="69" />
							<method name="TryDequeue(System.Threading.IThreadPoolWorkItem&amp;)" size="87" />
						</type>
						<type name="WorkStealingQueue" full-name="System.Threading.ThreadPoolWorkQueue/WorkStealingQueue" size="1123">
							<method name="TrySteal(System.Threading.IThreadPoolWorkItem&amp;,System.Boolean&amp;)" size="10" />
							<method name=".ctor()" size="44" />
							<method name="TrySteal(System.Threading.IThreadPoolWorkItem&amp;,System.Boolean&amp;,System.Int32)" size="172" />
							<method name="LocalPop(System.Threading.IThreadPoolWorkItem&amp;)" size="223" />
							<method name="LocalFindAndPop(System.Threading.IThreadPoolWorkItem)" size="260" />
							<method name="LocalPush(System.Threading.IThreadPoolWorkItem)" size="414" />
						</type>
						<method name=".cctor()" size="13" />
						<method name="EnsureCurrentThreadHasQueue()" size="24" />
						<method name=".ctor()" size="31" />
						<method name="MarkThreadRequestSatisfied()" size="38" />
						<method name="EnsureThreadRequested()" size="49" />
						<method name="Enqueue(System.Threading.IThreadPoolWorkItem,System.Boolean)" size="120" />
						<method name="Dequeue(System.Threading.ThreadPoolWorkQueueThreadLocals,System.Threading.IThreadPoolWorkItem&amp;,System.Boolean&amp;)" size="184" />
						<method name="Dispatch()" size="186" />
					</type>
				</namespace>
				<namespace name="System.IO" size="21454">
					<type name="FileAccess" full-name="System.IO.FileAccess" size="0" />
					<type name="TextReader" full-name="System.IO.TextReader" size="26">
						<method name="Dispose(System.Boolean)" size="1" />
						<method name="Peek()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Dispose()" size="14" />
					</type>
					<type name="Error" full-name="System.IO.Error" size="45">
						<method name="GetEndOfFile()" size="11" />
						<method name="GetStreamIsClosed()" size="12" />
					</type>
					<type name="DirectoryNotFoundException" full-name="System.IO.DirectoryNotFoundException" size="51">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="IOException" full-name="System.IO.IOException" size="66">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.Int32)" size="15" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="Directory" full-name="System.IO.Directory" size="75">
						<method name="GetCurrentDirectory()" size="6" />
						<method name="InsecureGetCurrentDirectory()" size="18" />
						<method name="Exists(System.String)" size="51" />
					</type>
					<type name="FileStreamAsyncResult" full-name="System.IO.FileStreamAsyncResult" size="87">
						<method name="get_AsyncWaitHandle()" size="7" />
						<method name="CBWrapper(System.IAsyncResult)" size="21" />
						<method name=".ctor(System.AsyncCallback,System.Object)" size="59" />
					</type>
					<type name="FileSystem" full-name="System.IO.FileSystem" size="113">
						<method name="DirectoryExists(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="9" />
						<method name="DirectoryExists(System.ReadOnlySpan`1&lt;System.Char&gt;,Interop/ErrorInfo&amp;)" size="13" />
						<method name="FileExists(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="19" />
						<method name="FileExists(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,Interop/ErrorInfo&amp;)" size="72" />
					</type>
					<type name="PathInternal" full-name="System.IO.PathInternal" size="125">
						<method name="IsPartiallyQualified(System.String)" size="2" />
						<method name="IsDirectorySeparator(System.Char)" size="6" />
						<method name="IsRoot(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="16" />
						<method name="GetRootLength(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="30" />
						<method name="EndsInDirectorySeparator(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="35" />
						<method name="TrimEndingDirectorySeparator(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="36" />
					</type>
					<type name="File" full-name="System.IO.File" size="404">
						<method name="Exists(System.String)" size="88" />
						<method name="ReadAllBytes(System.String)" size="121" />
						<method name="ReadAllBytesUnknownLength(System.IO.FileStream)" size="195" />
					</type>
					<type name="FileLoadException" full-name="System.IO.FileLoadException" size="411">
						<method name="get_FileName()" size="7" />
						<method name=".ctor(System.String)" size="19" />
						<method name="FormatFileLoadExceptionMessage(System.String,System.Int32)" size="21" />
						<method name=".ctor()" size="23" />
						<method name="get_Message()" size="38" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="43" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="63" />
						<method name="ToString()" size="190" />
					</type>
					<type name="FileNotFoundException" full-name="System.IO.FileNotFoundException" size="464">
						<method name="get_FileName()" size="7" />
						<method name="get_Message()" size="13" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.String,System.String)" size="26" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="43" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="63" />
						<method name="SetMessageField()" size="73" />
						<method name="ToString()" size="190" />
					</type>
					<type name="__Error" full-name="System.IO.__Error" size="669">
						<method name="EndOfFile()" size="16" />
						<method name="FileNotOpen()" size="17" />
						<method name="GetDisplayablePath(System.String,System.Boolean)" size="104" />
						<method name="WinIOError(System.Int32,System.String)" size="532" />
					</type>
					<type name="MonoIO" full-name="System.IO.MonoIO" size="913">
						<method name="Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions,System.IO.MonoIOError&amp;)" size="30" />
						<method name=".cctor()" size="31" />
						<method name="GetFileType(System.Runtime.InteropServices.SafeHandle,System.IO.MonoIOError&amp;)" size="37" />
						<method name="Seek(System.Runtime.InteropServices.SafeHandle,System.Int64,System.IO.SeekOrigin,System.IO.MonoIOError&amp;)" size="39" />
						<method name="Read(System.Runtime.InteropServices.SafeHandle,System.Byte[],System.Int32,System.Int32,System.IO.MonoIOError&amp;)" size="41" />
						<method name="GetException(System.IO.MonoIOError)" size="50" />
						<method name="GetException(System.String,System.IO.MonoIOError)" size="607" />
					</type>
					<type name="BinaryWriter" full-name="System.IO.BinaryWriter" size="1371">
						<method name="Dispose()" size="8" />
						<method name=".ctor(System.IO.Stream,System.Text.Encoding)" size="10" />
						<method name=".cctor()" size="11" />
						<method name="Flush()" size="12" />
						<method name="Write(System.Byte)" size="13" />
						<method name="Write(System.Byte[],System.Int32,System.Int32)" size="15" />
						<method name="Write(System.Double)" size="20" />
						<method name="Write(System.Byte[])" size="31" />
						<method name="Dispose(System.Boolean)" size="35" />
						<method name="Write(System.Boolean)" size="36" />
						<method name="Write7BitEncodedInt(System.Int32)" size="39" />
						<method name="Write(System.Int16)" size="42" />
						<method name="Write(System.Char[])" size="48" />
						<method name=".ctor()" size="61" />
						<method name="Write(System.Int32)" size="68" />
						<method name="Write(System.Char)" size="103" />
						<method name=".ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" size="110" />
						<method name="Write(System.Int64)" size="120" />
						<method name="Write(System.String)" size="339" />
					</type>
					<type name="StreamReader" full-name="System.IO.StreamReader" size="1684">
						<type name="NullStreamReader" full-name="System.IO.StreamReader/NullStreamReader" size="25">
							<method name="Dispose(System.Boolean)" size="1" />
							<method name="Peek()" size="2" />
							<method name=".ctor()" size="18" />
						</type>
						<method name=".ctor(System.String)" size="9" />
						<method name="get_LeaveOpen()" size="10" />
						<method name="ThrowAsyncIOInProgress()" size="11" />
						<method name="Init(System.IO.Stream)" size="15" />
						<method name=".ctor()" size="18" />
						<method name="CheckAsyncTaskInProgress()" size="19" />
						<method name="CompressBuffer(System.Int32)" size="42" />
						<method name="Peek()" size="72" />
						<method name="Read()" size="78" />
						<method name="Dispose(System.Boolean)" size="108" />
						<method name=".ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)" size="118" />
						<method name="Init(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)" size="149" />
						<method name="IsPreamble()" size="207" />
						<method name="ReadBuffer()" size="346" />
						<method name="DetectEncoding()" size="427" />
					</type>
					<type name="UnmanagedMemoryStream" full-name="System.IO.UnmanagedMemoryStream" size="1710">
						<method name="get_CanSeek()" size="7" />
						<method name="EnsureNotClosed()" size="15" />
						<method name=".ctor(System.Byte*,System.Int64)" size="17" />
						<method name="get_Length()" size="18" />
						<method name="get_CanRead()" size="22" />
						<method name="Dispose(System.Boolean)" size="23" />
						<method name="get_Position()" size="26" />
						<method name="Read(System.Span`1&lt;System.Byte&gt;)" size="39" />
						<method name="set_Position(System.Int64)" size="49" />
						<method name="get_PositionPointer()" size="67" />
						<method name="Read(System.Byte[],System.Int32,System.Int32)" size="93" />
						<method name="Write(System.Byte[],System.Int32,System.Int32)" size="98" />
						<method name="ReadByte()" size="133" />
						<method name="Seek(System.Int64,System.IO.SeekOrigin)" size="174" />
						<method name="ReadCore(System.Span`1&lt;System.Byte&gt;)" size="186" />
						<method name="Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)" size="188" />
						<method name="WriteByte(System.Byte)" size="210" />
						<method name="WriteCore(System.ReadOnlySpan`1&lt;System.Byte&gt;)" size="286" />
					</type>
					<type name="Stream" full-name="System.IO.Stream" size="1714">
						<type name="NullStream" full-name="System.IO.Stream/NullStream" size="131">
							<method name="set_Position(System.Int64)" size="1" />
							<method name="get_CanRead()" size="2" />
							<method name="get_Length()" size="3" />
							<method name=".ctor()" size="7" />
							<method name="EndRead(System.IAsyncResult)" size="21" />
							<method name="BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" size="28" />
						</type>
						<type name="&lt;&gt;c" full-name="System.IO.Stream/&lt;&gt;c" size="189">
							<method name=".ctor()" size="7" />
							<method name="&lt;EnsureAsyncActiveSemaphoreInitialized&gt;b__4_0()" size="8" />
							<method name=".cctor()" size="11" />
							<method name="&lt;RunReadWriteTaskWhenReady&gt;b__49_0(System.Threading.Tasks.Task,System.Object)" size="20" />
							<method name="&lt;BeginReadInternal&gt;b__40_0(System.Object)" size="71" />
							<method name="&lt;BeginWriteInternal&gt;b__48_0(System.Object)" size="72" />
						</type>
						<type name="ReadWriteTask" full-name="System.IO.Stream/ReadWriteTask" size="210">
							<method name="System.Threading.Tasks.ITaskCompletionAction.get_InvokeMayRunArbitraryCode()" size="2" />
							<method name="ClearBeginState()" size="15" />
							<method name="InvokeAsyncCallback(System.Object)" size="27" />
							<method name="System.Threading.Tasks.ITaskCompletionAction.Invoke(System.Threading.Tasks.Task)" size="74" />
							<method name=".ctor(System.Boolean,System.Boolean,System.Func`2&lt;System.Object,System.Int32&gt;,System.Object,System.IO.Stream,System.Byte[],System.Int32,System.Int32,System.AsyncCallback)" size="92" />
						</type>
						<type name="SynchronousAsyncResult" full-name="System.IO.Stream/SynchronousAsyncResult" size="293">
							<type name="&lt;&gt;c" full-name="System.IO.Stream/SynchronousAsyncResult/&lt;&gt;c" size="25">
								<method name=".ctor()" size="7" />
								<method name=".cctor()" size="11" />
							</type>
							<method name="ThrowIfError()" size="20" />
							<method name=".ctor(System.Int32,System.Object)" size="21" />
							<method name=".ctor(System.Exception,System.Object,System.Boolean)" size="33" />
							<method name="get_AsyncWaitHandle()" size="43" />
							<method name="EndWrite(System.IAsyncResult)" size="62" />
							<method name="EndRead(System.IAsyncResult)" size="68" />
						</type>
						<method name="Dispose(System.Boolean)" size="1" />
						<method name="Dispose()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="Close()" size="14" />
						<method name="BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" size="16" />
						<method name="FinishTrackingAsyncOperation()" size="20" />
						<method name="WriteByte(System.Byte)" size="21" />
						<method name="ReadByte()" size="24" />
						<method name="RunReadWriteTask(System.IO.Stream/ReadWriteTask)" size="26" />
						<method name="EnsureAsyncActiveSemaphoreInitialized()" size="43" />
						<method name="BlockingBeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" size="44" />
						<method name="RunReadWriteTaskWhenReady(System.Threading.Tasks.Task,System.IO.Stream/ReadWriteTask)" size="75" />
						<method name="Read(System.Span`1&lt;System.Byte&gt;)" size="93" />
						<method name="EndWrite(System.IAsyncResult)" size="95" />
						<method name="EndRead(System.IAsyncResult)" size="96" />
						<method name="BeginReadInternal(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object,System.Boolean,System.Boolean)" size="112" />
					</type>
					<type name="MemoryStream" full-name="System.IO.MemoryStream" size="1876">
						<method name="Flush()" size="1" />
						<method name="get_CanRead()" size="7" />
						<method name=".ctor()" size="8" />
						<method name=".ctor(System.Byte[])" size="9" />
						<method name="EnsureNotClosed()" size="15" />
						<method name="get_Capacity()" size="20" />
						<method name="get_Length()" size="21" />
						<method name="GetBuffer()" size="26" />
						<method name="Dispose(System.Boolean)" size="42" />
						<method name="ReadByte()" size="47" />
						<method name="InternalEmulateRead(System.Int32)" size="48" />
						<method name="ToArray()" size="52" />
						<method name="set_Position(System.Int64)" size="68" />
						<method name=".ctor(System.Byte[],System.Boolean)" size="79" />
						<method name=".ctor(System.Int32)" size="91" />
						<method name="EnsureCapacity(System.Int32)" size="103" />
						<method name="Read(System.Span`1&lt;System.Byte&gt;)" size="112" />
						<method name="WriteByte(System.Byte)" size="136" />
						<method name="set_Capacity(System.Int32)" size="141" />
						<method name="Read(System.Byte[],System.Int32,System.Int32)" size="184" />
						<method name="Seek(System.Int64,System.IO.SeekOrigin)" size="231" />
						<method name="Write(System.Byte[],System.Int32,System.Int32)" size="268" />
					</type>
					<type name="BinaryReader" full-name="System.IO.BinaryReader" size="2202">
						<method name="Dispose()" size="8" />
						<method name=".ctor(System.IO.Stream,System.Text.Encoding)" size="10" />
						<method name="ReadChar()" size="17" />
						<method name="ReadBoolean()" size="19" />
						<method name="Read()" size="20" />
						<method name="ReadInt16()" size="28" />
						<method name="ReadByte()" size="35" />
						<method name="ReadUInt32()" size="51" />
						<method name="Read7BitEncodedInt()" size="59" />
						<method name="Dispose(System.Boolean)" size="77" />
						<method name="ReadInt32()" size="89" />
						<method name="ReadChars(System.Int32)" size="92" />
						<method name="ReadInt64()" size="102" />
						<method name="ReadBytes(System.Int32)" size="115" />
						<method name="Read(System.Byte[],System.Int32,System.Int32)" size="126" />
						<method name="FillBuffer(System.Int32)" size="136" />
						<method name=".ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" size="177" />
						<method name="InternalReadOneChar()" size="254" />
						<method name="ReadString()" size="265" />
						<method name="InternalReadChars(System.Char[],System.Int32,System.Int32)" size="352" />
					</type>
					<type name="FileStream" full-name="System.IO.FileStream" size="3548">
						<type name="ReadDelegate" full-name="System.IO.FileStream/ReadDelegate" size="0" />
						<method name="get_CanSeek()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="FlushBufferIfDirty()" size="15" />
						<method name=".ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)" size="16" />
						<method name=".ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)" size="17" />
						<method name="get_CanRead()" size="21" />
						<method name="GetSecureFileName(System.String)" size="22" />
						<method name=".ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" size="25" />
						<method name="GetSecureFileName(System.String,System.Boolean)" size="27" />
						<method name=".ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean,System.Boolean)" size="28" />
						<method name="Flush()" size="31" />
						<method name="set_Position(System.Int64)" size="36" />
						<method name="RefillBuffer()" size="38" />
						<method name="ReadData(System.Runtime.InteropServices.SafeHandle,System.Byte[],System.Int32,System.Int32)" size="58" />
						<method name="ReadSegment(System.Byte[],System.Int32,System.Int32)" size="62" />
						<method name="get_Length()" size="85" />
						<method name="EndRead(System.IAsyncResult)" size="91" />
						<method name="ReadInternal(System.Byte[],System.Int32,System.Int32)" size="95" />
						<method name="WriteSegment(System.Byte[],System.Int32,System.Int32)" size="104" />
						<method name="get_Position()" size="105" />
						<method name="ReadByte()" size="139" />
						<method name="Write(System.Byte[],System.Int32,System.Int32)" size="154" />
						<method name="WriteByte(System.Byte)" size="160" />
						<method name="InitBuffer(System.Int32,System.Boolean)" size="162" />
						<method name="BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" size="163" />
						<method name="Read(System.Byte[],System.Int32,System.Int32)" size="171" />
						<method name="FlushBuffer()" size="188" />
						<method name="WriteInternal(System.Byte[],System.Int32,System.Int32)" size="191" />
						<method name="BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" size="192" />
						<method name="Seek(System.Int64,System.IO.SeekOrigin)" size="197" />
						<method name="Dispose(System.Boolean)" size="206" />
						<method name=".ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean,System.IO.FileOptions)" size="602" />
					</type>
					<type name="Path" full-name="System.IO.Path" size="3747">
						<type name="&lt;&gt;c" full-name="System.IO.Path/&lt;&gt;c" size="130">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;JoinInternal&gt;b__59_0(System.Span`1&lt;System.Char&gt;,System.ValueTuple`5&lt;System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Boolean&gt;)" size="112" />
						</type>
						<method name="GetFullPath(System.String)" size="7" />
						<method name="IsDirectorySeparator(System.Char)" size="19" />
						<method name="GetInvalidPathChars()" size="33" />
						<method name="GetInvalidFileNameChars()" size="38" />
						<method name="Join(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="40" />
						<method name="IsPathRooted(System.String)" size="50" />
						<method name="GetFileName(System.String)" size="66" />
						<method name="IsPathRooted(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="75" />
						<method name="GetFullPathName(System.String)" size="96" />
						<method name="GetServerAndShare(System.String)" size="99" />
						<method name="IsPathSubsetOf(System.String,System.String)" size="121" />
						<method name=".cctor()" size="151" />
						<method name="JoinInternal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="156" />
						<method name="Combine(System.String,System.String)" size="168" />
						<method name="SameRoot(System.String,System.String)" size="198" />
						<method name="WindowsDriveAdjustment(System.String)" size="205" />
						<method name="GetDirectoryName(System.String)" size="252" />
						<method name="GetPathRoot(System.String)" size="349" />
						<method name="CleanPath(System.String)" size="368" />
						<method name="InsecureGetFullPath(System.String)" size="532" />
						<method name="CanonicalizePath(System.String)" size="594" />
					</type>
				</namespace>
				<namespace name="System.Text" size="32236">
					<type name="DecoderExceptionFallback" full-name="System.Text.DecoderExceptionFallback" size="33">
						<method name="get_MaxCharCount()" size="2" />
						<method name="CreateFallbackBuffer()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="12" />
					</type>
					<type name="DecoderFallbackException" full-name="System.Text.DecoderFallbackException" size="54">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.Byte[],System.Int32)" size="22" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="EncoderFallback" full-name="System.Text.EncoderFallback" size="67">
						<method name=".ctor()" size="7" />
						<method name="get_ReplacementFallback()" size="30" />
					</type>
					<type name="InternalEncoderBestFitFallback" full-name="System.Text.InternalEncoderBestFitFallback" size="72">
						<method name="get_MaxCharCount()" size="2" />
						<method name="CreateFallbackBuffer()" size="7" />
						<method name="GetHashCode()" size="12" />
						<method name=".ctor(System.Text.Encoding)" size="14" />
						<method name="Equals(System.Object)" size="37" />
					</type>
					<type name="DecoderFallback" full-name="System.Text.DecoderFallback" size="77">
						<method name=".ctor()" size="7" />
						<method name="get_ReplacementFallback()" size="35" />
					</type>
					<type name="InternalDecoderBestFitFallback" full-name="System.Text.InternalDecoderBestFitFallback" size="80">
						<method name="get_MaxCharCount()" size="2" />
						<method name="CreateFallbackBuffer()" size="7" />
						<method name="GetHashCode()" size="12" />
						<method name=".ctor(System.Text.Encoding)" size="22" />
						<method name="Equals(System.Object)" size="37" />
					</type>
					<type name="StringBuilderCache" full-name="System.Text.StringBuilderCache" size="81">
						<method name="GetStringAndRelease(System.Text.StringBuilder)" size="13" />
						<method name="Release(System.Text.StringBuilder)" size="20" />
						<method name="Acquire(System.Int32)" size="48" />
					</type>
					<type name="DecoderExceptionFallbackBuffer" full-name="System.Text.DecoderExceptionFallbackBuffer" size="138">
						<method name="GetNextChar()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Fallback(System.Byte[],System.Int32)" size="10" />
						<method name="Throw(System.Byte[],System.Int32)" size="119" />
					</type>
					<type name="ValueUtf8Converter" full-name="System.Text.ValueUtf8Converter" size="167">
						<method name=".ctor(System.Span`1&lt;System.Byte&gt;)" size="15" />
						<method name="Dispose()" size="30" />
						<method name="ConvertAndTerminateString(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="122" />
					</type>
					<type name="EncoderExceptionFallbackBuffer" full-name="System.Text.EncoderExceptionFallbackBuffer" size="180">
						<method name="GetNextChar()" size="2" />
						<method name=".ctor()" size="7" />
						<method name="Fallback(System.Char,System.Int32)" size="30" />
						<method name="Fallback(System.Char,System.Char,System.Int32)" size="137" />
					</type>
					<type name="EncoderFallbackException" full-name="System.Text.EncoderFallbackException" size="182">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.Char,System.Int32)" size="22" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.String,System.Char,System.Char,System.Int32)" size="128" />
					</type>
					<type name="DecoderReplacementFallbackBuffer" full-name="System.Text.DecoderReplacementFallbackBuffer" size="204">
						<method name="InternalFallback(System.Byte[],System.Byte*)" size="12" />
						<method name="Reset()" size="23" />
						<method name=".ctor(System.Text.DecoderReplacementFallback)" size="33" />
						<method name="Fallback(System.Byte[],System.Int32)" size="57" />
						<method name="GetNextChar()" size="79" />
					</type>
					<type name="DecoderReplacementFallback" full-name="System.Text.DecoderReplacementFallback" size="254">
						<method name="get_DefaultString()" size="7" />
						<method name=".ctor()" size="12" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="18" />
						<method name="Equals(System.Object)" size="30" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="46" />
						<method name=".ctor(System.String)" size="110" />
					</type>
					<type name="Encoder" full-name="System.Text.Encoder" size="375">
						<method name=".ctor()" size="7" />
						<method name="get_InternalHasFallbackBuffer()" size="10" />
						<method name="Reset()" size="56" />
						<method name="get_FallbackBuffer()" size="58" />
						<method name="GetByteCount(System.Char*,System.Int32,System.Boolean)" size="81" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" size="156" />
					</type>
					<type name="Decoder" full-name="System.Text.Decoder" size="384">
						<method name=".ctor()" size="7" />
						<method name="get_InternalHasFallbackBuffer()" size="10" />
						<method name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" size="14" />
						<method name="Reset()" size="52" />
						<method name="get_FallbackBuffer()" size="58" />
						<method name="GetCharCount(System.Byte*,System.Int32,System.Boolean)" size="77" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" size="156" />
					</type>
					<type name="EncoderFallbackBuffer" full-name="System.Text.EncoderFallbackBuffer" size="394">
						<method name=".ctor()" size="7" />
						<method name="Reset()" size="9" />
						<method name="ThrowLastCharRecursive(System.Int32)" size="27" />
						<method name="InternalReset()" size="29" />
						<method name="InternalInitialize(System.Char*,System.Char*,System.Text.EncoderNLS,System.Boolean)" size="51" />
						<method name="InternalFallback(System.Char,System.Char*&amp;)" size="242" />
					</type>
					<type name="DecoderFallbackBuffer" full-name="System.Text.DecoderFallbackBuffer" size="407">
						<method name=".ctor()" size="7" />
						<method name="Reset()" size="9" />
						<method name="InternalReset()" size="15" />
						<method name="InternalFallback(System.Byte[],System.Byte*)" size="114" />
						<method name="ThrowLastBytesRecursive(System.Byte[])" size="117" />
						<method name="InternalFallback(System.Byte[],System.Byte*,System.Char*&amp;)" size="130" />
					</type>
					<type name="InternalDecoderBestFitFallbackBuffer" full-name="System.Text.InternalDecoderBestFitFallbackBuffer" size="464">
						<method name="InternalFallback(System.Byte[],System.Byte*)" size="2" />
						<method name="Reset()" size="16" />
						<method name="get_InternalSyncObject()" size="32" />
						<method name="GetNextChar()" size="54" />
						<method name="Fallback(System.Byte[],System.Int32)" size="56" />
						<method name=".ctor(System.Text.InternalDecoderBestFitFallback)" size="97" />
						<method name="TryBestFit(System.Byte[])" size="207" />
					</type>
					<type name="EncoderReplacementFallbackBuffer" full-name="System.Text.EncoderReplacementFallbackBuffer" size="501">
						<method name="get_Remaining()" size="18" />
						<method name="Reset()" size="30" />
						<method name=".ctor(System.Text.EncoderReplacementFallback)" size="44" />
						<method name="MovePrevious()" size="50" />
						<method name="GetNextChar()" size="79" />
						<method name="Fallback(System.Char,System.Int32)" size="126" />
						<method name="Fallback(System.Char,System.Char,System.Int32)" size="154" />
					</type>
					<type name="EncoderNLS" full-name="System.Text.EncoderNLS" size="552">
						<method name="get_MustFlush()" size="7" />
						<method name="ClearMustFlush()" size="8" />
						<method name="Reset()" size="27" />
						<method name=".ctor(System.Text.Encoding)" size="37" />
						<method name="GetByteCount(System.Char*,System.Int32,System.Boolean)" size="70" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" size="108" />
						<method name="GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" size="112" />
						<method name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" size="183" />
					</type>
					<type name="DecoderNLS" full-name="System.Text.DecoderNLS" size="563">
						<method name="get_HasState()" size="2" />
						<method name="get_MustFlush()" size="7" />
						<method name="ClearMustFlush()" size="8" />
						<method name="GetCharCount(System.Byte[],System.Int32,System.Int32)" size="11" />
						<method name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" size="15" />
						<method name="Reset()" size="17" />
						<method name=".ctor(System.Text.Encoding)" size="37" />
						<method name="GetCharCount(System.Byte*,System.Int32,System.Boolean)" size="70" />
						<method name="GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" size="106" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" size="107" />
						<method name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" size="183" />
					</type>
					<type name="InternalEncoderBestFitFallbackBuffer" full-name="System.Text.InternalEncoderBestFitFallbackBuffer" size="578">
						<method name="get_Remaining()" size="18" />
						<method name="Reset()" size="23" />
						<method name="get_InternalSyncObject()" size="32" />
						<method name="Fallback(System.Char,System.Int32)" size="47" />
						<method name="MovePrevious()" size="52" />
						<method name="GetNextChar()" size="54" />
						<method name=".ctor(System.Text.InternalEncoderBestFitFallback)" size="97" />
						<method name="Fallback(System.Char,System.Char,System.Int32)" size="124" />
						<method name="TryBestFit(System.Char)" size="131" />
					</type>
					<type name="ValueStringBuilder" full-name="System.Text.ValueStringBuilder" size="702">
						<method name="GrowAndAppend(System.Char)" size="15" />
						<method name=".ctor(System.Span`1&lt;System.Char&gt;)" size="22" />
						<method name="Dispose()" size="30" />
						<method name="ToString()" size="35" />
						<method name="Append(System.Char)" size="53" />
						<method name="TryCopyTo(System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="56" />
						<method name="Append(System.String)" size="68" />
						<method name="AppendSlow(System.String)" size="86" />
						<method name="Append(System.Char,System.Int32)" size="90" />
						<method name="Append(System.Char*,System.Int32)" size="96" />
						<method name="Grow(System.Int32)" size="98" />
					</type>
					<type name="Encoding" full-name="System.Text.Encoding" size="2129">
						<type name="DefaultDecoder" full-name="System.Text.Encoding/DefaultDecoder" size="285">
							<method name="GetCharCount(System.Byte[],System.Int32,System.Int32)" size="11" />
							<method name="GetCharCount(System.Byte*,System.Int32,System.Boolean)" size="14" />
							<method name="GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)" size="15" />
							<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)" size="17" />
							<method name="GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)" size="19" />
							<method name=".ctor(System.Text.Encoding)" size="21" />
							<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="32" />
							<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="44" />
							<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="97" />
						</type>
						<type name="DefaultEncoder" full-name="System.Text.Encoding/DefaultEncoder" size="314">
							<method name="GetByteCount(System.Char*,System.Int32,System.Boolean)" size="14" />
							<method name="GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" size="15" />
							<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" size="17" />
							<method name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" size="19" />
							<method name=".ctor(System.Text.Encoding)" size="21" />
							<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="32" />
							<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="74" />
							<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="122" />
						</type>
						<method name="GetPreamble()" size="6" />
						<method name="OnDeserializing(System.Runtime.Serialization.StreamingContext)" size="7" />
						<method name=".ctor()" size="8" />
						<method name="GetByteCount(System.Char*,System.Int32,System.Text.EncoderNLS)" size="9" />
						<method name="get_Preamble()" size="12" />
						<method name="GetString(System.Byte[],System.Int32,System.Int32)" size="15" />
						<method name="Clone()" size="19" />
						<method name="OnDeserializing()" size="22" />
						<method name="SetDefaultFallbacks()" size="25" />
						<method name="GetBytes(System.Char[],System.Int32,System.Int32)" size="29" />
						<method name="get_UTF8()" size="30" />
						<method name="get_Unicode()" size="31" />
						<method name="GetByteCount(System.String)" size="33" />
						<method name="OnDeserialized()" size="37" />
						<method name=".ctor(System.Int32)" size="42" />
						<method name="GetChars(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Span`1&lt;System.Char&gt;)" size="43" />
						<method name="ThrowBytesOverflow()" size="50" />
						<method name="ThrowBytesOverflow(System.Text.EncoderNLS,System.Boolean)" size="51" />
						<method name="GetString(System.Byte*,System.Int32)" size="60" />
						<method name="Equals(System.Object)" size="65" />
						<method name="GetCharCount(System.Byte*,System.Int32)" size="87" />
						<method name="GetByteCount(System.Char*,System.Int32)" size="90" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" size="164" />
					</type>
					<type name="UTF32Encoding" full-name="System.Text.UTF32Encoding" size="4071">
						<type name="UTF32Decoder" full-name="System.Text.UTF32Encoding/UTF32Decoder" size="52">
							<method name=".ctor(System.Text.UTF32Encoding)" size="8" />
							<method name="get_HasState()" size="10" />
							<method name="Reset()" size="34" />
						</type>
						<method name="GetDecoder()" size="7" />
						<method name=".ctor()" size="10" />
						<method name="GetHighSurrogate(System.UInt32)" size="21" />
						<method name="GetSurrogate(System.Char,System.Char)" size="28" />
						<method name="GetByteCount(System.String)" size="45" />
						<method name="GetByteCount(System.Char*,System.Int32)" size="51" />
						<method name=".ctor(System.Boolean,System.Boolean,System.Boolean)" size="57" />
						<method name="SetDefaultFallbacks()" size="64" />
						<method name="GetPreamble()" size="68" />
						<method name="get_Preamble()" size="72" />
						<method name="Equals(System.Object)" size="79" />
						<method name="GetMaxCharCount(System.Int32)" size="84" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" size="87" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" size="88" />
						<method name="GetCharCount(System.Byte[],System.Int32,System.Int32)" size="119" />
						<method name="GetByteCount(System.Char[],System.Int32,System.Int32)" size="122" />
						<method name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" size="186" />
						<method name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" size="196" />
						<method name="GetByteCount(System.Char*,System.Int32,System.Text.EncoderNLS)" size="286" />
						<method name="GetCharCount(System.Byte*,System.Int32,System.Text.DecoderNLS)" size="436" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Text.DecoderNLS)" size="631" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Text.EncoderNLS)" size="651" />
					</type>
					<type name="StringBuilder" full-name="System.Text.StringBuilder" size="5405">
						<method name="get_MaxCapacity()" size="7" />
						<method name="Append(System.Int32)" size="8" />
						<method name="Clear()" size="9" />
						<method name=".ctor(System.String)" size="10" />
						<method name="FormatError()" size="11" />
						<method name="AppendLine()" size="12" />
						<method name=".ctor(System.Int32)" size="13" />
						<method name="get_Length()" size="14" />
						<method name="AppendFormat(System.String,System.Object)" size="15" />
						<method name="get_Capacity()" size="16" />
						<method name="Append(System.Object)" size="18" />
						<method name=".ctor(System.String,System.Int32)" size="22" />
						<method name="AppendSpanFormattable(T)" size="26" />
						<method name=".ctor()" size="31" />
						<method name="AppendHelper(System.String)" size="33" />
						<method name="AppendFormat(System.String,System.Object[])" size="39" />
						<method name="Append(System.Char)" size="54" />
						<method name="get_Chars(System.Int32)" size="55" />
						<method name="ThreadSafeCopy(System.Char*,System.Char[],System.Int32,System.Int32)" size="56" />
						<method name="Insert(System.Int32,System.String)" size="62" />
						<method name=".ctor(System.Text.StringBuilder)" size="67" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="78" />
						<method name="StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String)" size="81" />
						<method name="ReplaceInPlaceAtChunk(System.Text.StringBuilder&amp;,System.Int32&amp;,System.Char*,System.Int32)" size="89" />
						<method name="Remove(System.Int32,System.Int32)" size="106" />
						<method name=".ctor(System.Int32,System.Int32)" size="109" />
						<method name="Append(System.Char[],System.Int32,System.Int32)" size="113" />
						<method name="ThreadSafeCopy(System.Char[],System.Int32,System.Span`1&lt;System.Char&gt;,System.Int32,System.Int32)" size="115" />
						<method name="Append(System.String,System.Int32,System.Int32)" size="126" />
						<method name="Append(System.Char,System.Int32)" size="132" />
						<method name="Append(System.String)" size="140" />
						<method name="ExpandByABlock(System.Int32)" size="141" />
						<method name="ToString()" size="163" />
						<method name="CopyTo(System.Int32,System.Span`1&lt;System.Char&gt;,System.Int32)" size="166" />
						<method name="Append(System.Char*,System.Int32)" size="198" />
						<method name="ReplaceAllInChunk(System.Int32[],System.Int32,System.Text.StringBuilder,System.Int32,System.String)" size="200" />
						<method name=".ctor(System.String,System.Int32,System.Int32,System.Int32)" size="211" />
						<method name="Remove(System.Int32,System.Int32,System.Text.StringBuilder&amp;,System.Int32&amp;)" size="218" />
						<method name="set_Length(System.Int32)" size="246" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="293" />
						<method name="Replace(System.String,System.String,System.Int32,System.Int32)" size="332" />
						<method name="MakeRoom(System.Int32,System.Int32,System.Text.StringBuilder&amp;,System.Int32&amp;,System.Boolean)" size="344" />
						<method name="AppendFormatHelper(System.IFormatProvider,System.String,System.ParamsArray)" size="988" />
					</type>
					<type name="UnicodeEncoding" full-name="System.Text.UnicodeEncoding" size="6406">
						<type name="Decoder" full-name="System.Text.UnicodeEncoding/Decoder" size="70">
							<method name=".ctor(System.Text.UnicodeEncoding)" size="15" />
							<method name="get_HasState()" size="21" />
							<method name="Reset()" size="34" />
						</type>
						<method name="GetEncoder()" size="7" />
						<method name=".ctor()" size="9" />
						<method name=".ctor(System.Boolean,System.Boolean)" size="10" />
						<method name="GetByteCount(System.String)" size="45" />
						<method name="GetByteCount(System.Char*,System.Int32)" size="51" />
						<method name="GetHashCode()" size="57" />
						<method name=".ctor(System.Boolean,System.Boolean,System.Boolean)" size="64" />
						<method name="GetPreamble()" size="68" />
						<method name="get_Preamble()" size="72" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" size="87" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" size="88" />
						<method name="GetMaxCharCount(System.Int32)" size="90" />
						<method name="Equals(System.Object)" size="93" />
						<method name="GetCharCount(System.Byte[],System.Int32,System.Int32)" size="119" />
						<method name=".cctor()" size="121" />
						<method name="GetByteCount(System.Char[],System.Int32,System.Int32)" size="122" />
						<method name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" size="186" />
						<method name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" size="196" />
						<method name="GetByteCount(System.Char*,System.Int32,System.Text.EncoderNLS)" size="759" />
						<method name="GetCharCount(System.Byte*,System.Int32,System.Text.DecoderNLS)" size="986" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Text.DecoderNLS)" size="1263" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Text.EncoderNLS)" size="1316" />
					</type>
					<type name="UTF8Encoding" full-name="System.Text.UTF8Encoding" size="7429">
						<type name="UTF8EncodingSealed" full-name="System.Text.UTF8Encoding/UTF8EncodingSealed" size="34">
							<method name=".ctor(System.Boolean)" size="8" />
							<method name="get_Preamble()" size="26" />
						</type>
						<type name="UTF8Encoder" full-name="System.Text.UTF8Encoding/UTF8Encoder" size="35">
							<method name=".ctor(System.Text.UTF8Encoding)" size="8" />
							<method name="Reset()" size="27" />
						</type>
						<type name="UTF8Decoder" full-name="System.Text.UTF8Encoding/UTF8Decoder" size="45">
							<method name=".ctor(System.Text.UTF8Encoding)" size="8" />
							<method name="get_HasState()" size="10" />
							<method name="Reset()" size="27" />
						</type>
						<method name="GetDecoder()" size="7" />
						<method name=".ctor()" size="8" />
						<method name=".ctor(System.Boolean)" size="9" />
						<method name="PtrDiff(System.Char*,System.Char*)" size="10" />
						<method name="InRange(System.Int32,System.Int32,System.Int32)" size="12" />
						<method name="FallbackInvalidByteSequence(System.Byte*,System.Int32,System.Text.DecoderFallbackBuffer)" size="19" />
						<method name="GetPreamble()" size="32" />
						<method name="FallbackInvalidByteSequence(System.Byte*&amp;,System.Int32,System.Text.DecoderFallbackBuffer,System.Char*&amp;)" size="33" />
						<method name=".cctor()" size="34" />
						<method name=".ctor(System.Boolean,System.Boolean)" size="40" />
						<method name="GetHashCode()" size="43" />
						<method name="GetByteCount(System.String)" size="45" />
						<method name="GetByteCount(System.Char*,System.Int32)" size="51" />
						<method name="get_Preamble()" size="57" />
						<method name="SetDefaultFallbacks()" size="64" />
						<method name="Equals(System.Object)" size="65" />
						<method name="GetMaxCharCount(System.Int32)" size="83" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" size="87" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" size="88" />
						<method name="GetCharCount(System.Byte[],System.Int32,System.Int32)" size="119" />
						<method name="GetByteCount(System.Char[],System.Int32,System.Int32)" size="122" />
						<method name="GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" size="186" />
						<method name="GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" size="196" />
						<method name="GetBytesUnknown(System.Byte*&amp;,System.Int32)" size="327" />
						<method name="GetCharCount(System.Byte*,System.Int32,System.Text.DecoderNLS)" size="914" />
						<method name="GetByteCount(System.Char*,System.Int32,System.Text.EncoderNLS)" size="1093" />
						<method name="GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Text.EncoderNLS)" size="1373" />
						<method name="GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Text.DecoderNLS)" size="1726" />
					</type>
				</namespace>
				<namespace name="System.Runtime.Serialization.Formatters.Binary" size="37213">
					<type name="BinaryHeaderEnum" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum" size="0" />
					<type name="InternalFE" full-name="System.Runtime.Serialization.Formatters.Binary.InternalFE" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="MessageEnd" full-name="System.Runtime.Serialization.Formatters.Binary.MessageEnd" size="19">
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="9" />
					</type>
					<type name="BinaryCrossAppDomainMap" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap" size="21">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="13" />
					</type>
					<type name="BinaryCrossAppDomainAssembly" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly" size="33">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="25" />
					</type>
					<type name="SerObjectInfoInit" full-name="System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit" size="41">
						<method name=".ctor()" size="41" />
					</type>
					<type name="TypeInformation" full-name="System.Runtime.Serialization.Formatters.Binary.TypeInformation" size="49">
						<method name="get_FullTypeName()" size="7" />
						<method name=".ctor(System.String,System.String,System.Boolean)" size="28" />
					</type>
					<type name="MemberReference" full-name="System.Runtime.Serialization.Formatters.Binary.MemberReference" size="50">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Set(System.Int32)" size="8" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="13" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="21" />
					</type>
					<type name="NameCache" full-name="System.Runtime.Serialization.Formatters.Binary.NameCache" size="62">
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="SetCachedValue(System.Object)" size="18" />
						<method name="GetCachedValue(System.String)" size="26" />
					</type>
					<type name="MemberPrimitiveUnTyped" full-name="System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped" size="69">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Set(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE)" size="8" />
						<method name="Set(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Object)" size="15" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="19" />
					</type>
					<type name="SerObjectInfoCache" full-name="System.Runtime.Serialization.Formatters.Binary.SerObjectInfoCache" size="78">
						<method name=".ctor(System.String,System.String,System.Boolean)" size="28" />
						<method name=".ctor(System.Type)" size="50" />
					</type>
					<type name="BinaryObject" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryObject" size="80">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Set(System.Int32,System.Int32)" size="15" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="25" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="32" />
					</type>
					<type name="BinaryAssembly" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryAssembly" size="81">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Set(System.Int32,System.String)" size="15" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="25" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="33" />
					</type>
					<type name="MemberPrimitiveTyped" full-name="System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped" size="93">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="Set(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Object)" size="15" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="31" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="39" />
					</type>
					<type name="ObjectMapInfo" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectMapInfo" size="112">
						<method name=".ctor(System.Int32,System.Int32,System.String[],System.Type[])" size="36" />
						<method name="isCompatible(System.Int32,System.String[],System.Type[])" size="76" />
					</type>
					<type name="BinaryAssemblyInfo" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo" size="118">
						<method name=".ctor(System.String)" size="14" />
						<method name=".ctor(System.String,System.Reflection.Assembly)" size="21" />
						<method name="GetAssembly()" size="83" />
					</type>
					<type name="ObjectNull" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectNull" size="154">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="SetNullCount(System.Int32)" size="8" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser,System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="64" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="74" />
					</type>
					<type name="IOUtil" full-name="System.Runtime.Serialization.Formatters.Binary.IOUtil" size="166">
						<method name="FlagTest(System.Runtime.Serialization.Formatters.Binary.MessageEnum,System.Runtime.Serialization.Formatters.Binary.MessageEnum)" size="10" />
						<method name="WriteStringWithCode(System.String,System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="28" />
						<method name="ReadWithCode(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="34" />
						<method name="ReadArgs(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="37" />
						<method name="WriteWithCode(System.Type,System.Object,System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="57" />
					</type>
					<type name="BinaryMethodReturnMessage" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturnMessage" size="168">
						<method name="get_Exception()" size="7" />
						<method name="get_HasProperties()" size="10" />
						<method name="PopulateMessageProperties(System.Collections.IDictionary)" size="51" />
						<method name=".ctor(System.Object,System.Object[],System.Exception,System.Runtime.Remoting.Messaging.LogicalCallContext,System.Object[])" size="79" />
					</type>
					<type name="NameInfo" full-name="System.Runtime.Serialization.Formatters.Binary.NameInfo" size="180">
						<method name=".ctor()" size="7" />
						<method name="set_NIname(System.String)" size="8" />
						<method name="get_NIname()" size="32" />
						<method name="get_IsSealed()" size="39" />
						<method name="Init()" size="94" />
					</type>
					<type name="BinaryMethodCallMessage" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryMethodCallMessage" size="201">
						<method name="get_MethodName()" size="7" />
						<method name="get_HasProperties()" size="10" />
						<method name="PopulateMessageProperties(System.Collections.IDictionary)" size="51" />
						<method name=".ctor(System.String,System.String,System.String,System.Type[],System.Object[],System.Object,System.Runtime.Remoting.Messaging.LogicalCallContext,System.Object[])" size="98" />
					</type>
					<type name="SerStack" full-name="System.Runtime.Serialization.Formatters.Binary.SerStack" size="244">
						<method name="IsEmpty()" size="13" />
						<method name="Peek()" size="25" />
						<method name="PeekPeek()" size="27" />
						<method name=".ctor(System.String)" size="33" />
						<method name="IncreaseCapacity()" size="46" />
						<method name="Push(System.Object)" size="50" />
					</type>
					<type name="BinaryObjectWithMap" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap" size="288">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="14" />
						<method name="Set(System.Int32,System.String,System.Int32,System.String[],System.Int32)" size="58" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="102" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="106" />
					</type>
					<type name="ParseRecord" full-name="System.Runtime.Serialization.Formatters.Binary.ParseRecord" size="292">
						<method name=".ctor()" size="7" />
						<method name="Init()" size="278" />
					</type>
					<type name="SerializationHeaderRecord" full-name="System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord" size="312">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="14" />
						<method name="GetInt32(System.Byte[],System.Int32)" size="30" />
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum,System.Int32,System.Int32,System.Int32,System.Int32)" size="51" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="86" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="130" />
					</type>
					<type name="ValueFixup" full-name="System.Runtime.Serialization.Formatters.Binary.ValueFixup" size="332">
						<method name=".ctor(System.Array,System.Int32[])" size="28" />
						<method name=".ctor(System.Object,System.String,System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo)" size="35" />
						<method name="Fixup(System.Runtime.Serialization.Formatters.Binary.ParseRecord,System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="269" />
					</type>
					<type name="ObjectProgress" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectProgress" size="386">
						<method name=".cctor()" size="7" />
						<method name="ArrayCountIncrement(System.Int32)" size="15" />
						<method name=".ctor()" size="25" />
						<method name="Init()" size="131" />
						<method name="GetNext(System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum&amp;,System.Object&amp;)" size="208" />
					</type>
					<type name="IntSizedArray" full-name="System.Runtime.Serialization.Formatters.Binary.IntSizedArray" size="398">
						<method name="Clone()" size="7" />
						<method name=".ctor()" size="32" />
						<method name="get_Item(System.Int32)" size="54" />
						<method name="set_Item(System.Int32,System.Int32)" size="66" />
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.IntSizedArray)" size="106" />
						<method name="IncreaseCapacity(System.Int32)" size="133" />
					</type>
					<type name="SizedArray" full-name="System.Runtime.Serialization.Formatters.Binary.SizedArray" size="413">
						<method name="Clone()" size="7" />
						<method name=".ctor(System.Int32)" size="31" />
						<method name=".ctor()" size="32" />
						<method name="get_Item(System.Int32)" size="54" />
						<method name="set_Item(System.Int32,System.Object)" size="75" />
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.SizedArray)" size="81" />
						<method name="IncreaseCapacity(System.Int32)" size="133" />
					</type>
					<type name="ObjectMap" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectMap" size="531">
						<method name="Create(System.String,System.Type,System.String[],System.Runtime.Serialization.Formatters.Binary.ObjectReader,System.Int32,System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo)" size="14" />
						<method name="Create(System.String,System.String[],System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum[],System.Object[],System.Int32[],System.Runtime.Serialization.Formatters.Binary.ObjectReader,System.Int32,System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo,System.Runtime.Serialization.Formatters.Binary.SizedArray)" size="20" />
						<method name="CreateObjectInfo(System.Runtime.Serialization.SerializationInfo&amp;,System.Object[]&amp;)" size="66" />
						<method name=".ctor(System.String,System.Type,System.String[],System.Runtime.Serialization.Formatters.Binary.ObjectReader,System.Int32,System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo)" size="185" />
						<method name=".ctor(System.String,System.String[],System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum[],System.Object[],System.Int32[],System.Runtime.Serialization.Formatters.Binary.ObjectReader,System.Int32,System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo,System.Runtime.Serialization.Formatters.Binary.SizedArray)" size="246" />
					</type>
					<type name="PrimitiveArray" full-name="System.Runtime.Serialization.Formatters.Binary.PrimitiveArray" size="562">
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Array)" size="15" />
						<method name="Init(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Array)" size="223" />
						<method name="SetValue(System.String,System.Int32)" size="324" />
					</type>
					<type name="BinaryFormatter" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" size="576">
						<method name="set_AssemblyFormat(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)" size="8" />
						<method name="Deserialize(System.IO.Stream)" size="9" />
						<method name="Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)" size="10" />
						<method name="Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Boolean)" size="11" />
						<method name="Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Boolean,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="13" />
						<method name=".ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" size="35" />
						<method name=".ctor()" size="44" />
						<method name="GetTypeInformation(System.Type)" size="88" />
						<method name="Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[],System.Boolean)" size="134" />
						<method name="Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Boolean,System.Boolean,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="173" />
					</type>
					<type name="BinaryObjectWithMapTyped" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped" size="582">
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="14" />
						<method name="Set(System.Int32,System.String,System.Int32,System.String[],System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum[],System.Object[],System.Int32[],System.Int32)" size="90" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="181" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="290" />
					</type>
					<type name="BinaryConverter" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryConverter" size="830">
						<method name="GetParserBinaryTypeInfo(System.Type,System.Object&amp;)" size="120" />
						<method name="WriteTypeInfo(System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum,System.Object,System.Int32,System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="124" />
						<method name="TypeFromInfo(System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum,System.Object,System.Runtime.Serialization.Formatters.Binary.ObjectReader,System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo,System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE&amp;,System.String&amp;,System.Type&amp;,System.Boolean&amp;)" size="229" />
						<method name="GetBinaryTypeInfo(System.Type,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.String,System.Runtime.Serialization.Formatters.Binary.ObjectWriter,System.Object&amp;,System.Int32&amp;)" size="233" />
					</type>
					<type name="BinaryArray" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryArray" size="973">
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="14" />
						<method name="Set(System.Int32,System.Int32,System.Int32[],System.Int32[],System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum,System.Object,System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum,System.Int32)" size="113" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="348" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="491" />
					</type>
					<type name="BinaryMethodCall" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall" size="1259">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="14" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="135" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="146" />
						<method name="ReadArray(System.Object[],System.Object)" size="366" />
						<method name="WriteArray(System.String,System.String,System.String,System.Type[],System.Object[],System.Object,System.Object,System.Object[])" size="597" />
					</type>
					<type name="BinaryMethodReturn" full-name="System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn" size="1398">
						<method name="Dump()" size="1" />
						<method name=".ctor()" size="14" />
						<method name=".cctor()" size="16" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.__BinaryWriter)" size="158" />
						<method name="Read(System.Runtime.Serialization.Formatters.Binary.__BinaryParser)" size="189" />
						<method name="ReadArray(System.Object[],System.Runtime.Remoting.Messaging.IMethodCallMessage,System.Object)" size="349" />
						<method name="WriteArray(System.Object,System.Object[],System.Exception,System.Object,System.Object[])" size="671" />
					</type>
					<type name="ReadObjectInfo" full-name="System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo" size="1747">
						<method name="ObjectEnd()" size="1" />
						<method name=".ctor()" size="7" />
						<method name="PrepareForReuse()" size="8" />
						<method name="InitNoMembers()" size="18" />
						<method name="InitSiRead()" size="22" />
						<method name="Create(System.Type,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ObjectManager,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Boolean)" size="24" />
						<method name="Create(System.Type,System.String[],System.Type[],System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ObjectManager,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Boolean)" size="28" />
						<method name="PopulateObjectMembers(System.Object,System.Object[])" size="31" />
						<method name="AddValue(System.String,System.Object,System.Runtime.Serialization.SerializationInfo&amp;,System.Object[]&amp;)" size="37" />
						<method name="Init(System.Type,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ObjectManager,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Boolean)" size="56" />
						<method name="RecordFixup(System.Int64,System.String,System.Int64)" size="62" />
						<method name="InitDataStore(System.Runtime.Serialization.SerializationInfo&amp;,System.Object[]&amp;)" size="65" />
						<method name="GetMemberType(System.Reflection.MemberInfo)" size="79" />
						<method name="Init(System.Type,System.String[],System.Type[],System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ObjectManager,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Boolean)" size="96" />
						<method name="GetType(System.String)" size="100" />
						<method name="InitReadConstructor(System.Type,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" size="103" />
						<method name="GetMemberInfo(System.String)" size="147" />
						<method name="Position(System.String)" size="190" />
						<method name="InitMemberInfo()" size="203" />
						<method name="GetMemberTypes(System.String[],System.Type)" size="448" />
					</type>
					<type name="WriteObjectInfo" full-name="System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo" size="1833">
						<method name=".ctor()" size="7" />
						<method name="ObjectEnd()" size="13" />
						<method name="Serialize(System.Type,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Runtime.Serialization.SerializationBinder)" size="21" />
						<method name="GetTypeFullName()" size="22" />
						<method name="Serialize(System.Object,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Runtime.Serialization.Formatters.Binary.ObjectWriter,System.Runtime.Serialization.SerializationBinder)" size="23" />
						<method name="InvokeSerializationBinder(System.Runtime.Serialization.SerializationBinder)" size="28" />
						<method name="GetMemberInfo(System.String[]&amp;,System.Type[]&amp;,System.Object[]&amp;)" size="67" />
						<method name="GetObjectInfo(System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit)" size="71" />
						<method name="CheckTypeForwardedFrom(System.Runtime.Serialization.Formatters.Binary.SerObjectInfoCache,System.Type,System.String)" size="79" />
						<method name="InitNoMembers()" size="87" />
						<method name="InternalInit()" size="94" />
						<method name="InitSerialize(System.Type,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Runtime.Serialization.SerializationBinder)" size="222" />
						<method name="InitMemberInfo()" size="291" />
						<method name="InitSiWrite()" size="320" />
						<method name="InitSerialize(System.Object,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.Formatters.Binary.SerObjectInfoInit,System.Runtime.Serialization.IFormatterConverter,System.Runtime.Serialization.Formatters.Binary.ObjectWriter,System.Runtime.Serialization.SerializationBinder)" size="374" />
					</type>
					<type name="Converter" full-name="System.Runtime.Serialization.Formatters.Binary.Converter" size="2157">
						<method name="ToArrayType(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE)" size="24" />
						<method name="FromString(System.String,System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE)" size="27" />
						<method name="ToCode(System.Type)" size="67" />
						<method name="IsWriteAsByteArray(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE)" size="80" />
						<method name="InitTypeCodeA()" size="98" />
						<method name="InitCodeA()" size="108" />
						<method name="TypeLength(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE)" size="124" />
						<method name="InitTypeA()" size="150" />
						<method name="CreatePrimitiveArray(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Int32)" size="214" />
						<method name="IsPrimitiveArray(System.Type,System.Object&amp;)" size="246" />
						<method name=".cctor()" size="623" />
					</type>
					<type name="__BinaryWriter" full-name="System.Runtime.Serialization.Formatters.Binary.__BinaryWriter" size="2706">
						<method name="WriteBegin()" size="1" />
						<method name="WriteItemEnd()" size="7" />
						<method name="WriteSByte(System.SByte)" size="9" />
						<method name="WriteEnd()" size="12" />
						<method name="WriteBoolean(System.Boolean)" size="13" />
						<method name="WriteTimeSpan(System.TimeSpan)" size="14" />
						<method name="WriteBytes(System.Byte[],System.Int32,System.Int32)" size="15" />
						<method name="WriteItem(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object)" size="16" />
						<method name="WriteDecimal(System.Decimal)" size="19" />
						<method name="WriteNullItem(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo)" size="21" />
						<method name="WriteSerializationHeaderEnd()" size="24" />
						<method name="WriteMemberString(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.String)" size="28" />
						<method name="WriteReturnArray(System.Object,System.Object[],System.Exception,System.Object,System.Object[])" size="38" />
						<method name="WriteMethodCall()" size="43" />
						<method name="WriteCallArray(System.String,System.String,System.String,System.Type[],System.Object[],System.Object,System.Object,System.Object[])" size="44" />
						<method name="WriteObjectString(System.Int32,System.String)" size="51" />
						<method name=".ctor(System.IO.Stream,System.Runtime.Serialization.Formatters.Binary.ObjectWriter,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" size="63" />
						<method name="WriteMemberObjectRef(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int32)" size="68" />
						<method name="WriteNullMember(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo)" size="76" />
						<method name="WriteRectangleArray(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int32,System.Int32[],System.Int32[])" size="141" />
						<method name="WriteMember(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object)" size="147" />
						<method name="WriteJaggedArray(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int32,System.Int32)" size="148" />
						<method name="WriteArrayAsBytes(System.Array,System.Int32)" size="209" />
						<method name="WriteSingleArray(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int32,System.Int32,System.Array)" size="231" />
						<method name="WriteValue(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Object)" size="373" />
						<method name="WriteObject(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int32,System.String[],System.Type[],System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo[])" size="424" />
					</type>
					<type name="ObjectWriter" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectWriter" size="5003">
						<method name="get_ObjectManager()" size="7" />
						<method name="Schedule(System.Object,System.Boolean,System.Type)" size="11" />
						<method name="PutNameInfo(System.Runtime.Serialization.Formatters.Binary.NameInfo)" size="13" />
						<method name="MemberToNameInfo(System.String)" size="14" />
						<method name="WriteObjectRef(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int64)" size="15" />
						<method name="TypeToNameInfo(System.Type)" size="17" />
						<method name="WriteSerializedStreamHeader(System.Int64,System.Int64)" size="18" />
						<method name="TypeToNameInfo(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo)" size="27" />
						<method name="ToCode(System.Type)" size="42" />
						<method name="GetNameInfo()" size="48" />
						<method name="Schedule(System.Object,System.Boolean,System.Type,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo)" size="59" />
						<method name=".ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.Formatters.Binary.InternalFE,System.Runtime.Serialization.SerializationBinder)" size="71" />
						<method name="TypeToNameInfo(System.Type,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE,System.Runtime.Serialization.Formatters.Binary.NameInfo)" size="72" />
						<method name="WriteKnownValueClass(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object)" size="74" />
						<method name="WriteString(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object)" size="81" />
						<method name="GetNext(System.Int64&amp;)" size="104" />
						<method name="WriteMemberSetup(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.String,System.Type,System.Object,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo)" size="113" />
						<method name="WriteMethodReturn(System.Runtime.Remoting.Messaging.IMethodReturnMessage)" size="114" />
						<method name="InternalGetId(System.Object,System.Boolean,System.Type,System.Boolean&amp;)" size="121" />
						<method name="CheckForNull(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object)" size="137" />
						<method name="GetAssemblyId(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo)" size="164" />
						<method name="WriteMethodCall(System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="188" />
						<method name="WriteRectangle(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Int32,System.Int32[],System.Array,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Int32[])" size="213" />
						<method name="StoreUserPropertiesForMethodMessage(System.Runtime.Remoting.Messaging.IMethodMessage)" size="231" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.String[],System.Type[],System.Object[],System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo[])" size="325" />
						<method name="WriteArrayMember(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object)" size="397" />
						<method name="WriteMembers(System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Object,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo)" size="410" />
						<method name="Write(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo)" size="423" />
						<method name="Serialize(System.Object,System.Runtime.Remoting.Messaging.Header[],System.Runtime.Serialization.Formatters.Binary.__BinaryWriter,System.Boolean)" size="533" />
						<method name="WriteArray(System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo,System.Runtime.Serialization.Formatters.Binary.NameInfo,System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo)" size="882" />
					</type>
					<type name="ObjectReader" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectReader" size="5709">
						<type name="TypeNAssembly" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectReader/TypeNAssembly" size="7">
							<method name=".ctor()" size="7" />
						</type>
						<type name="TopLevelAssemblyTypeResolver" full-name="System.Runtime.Serialization.Formatters.Binary.ObjectReader/TopLevelAssemblyTypeResolver" size="41">
							<method name=".ctor(System.Reflection.Assembly)" size="14" />
							<method name="ResolveType(System.Reflection.Assembly,System.String,System.Boolean)" size="27" />
						</type>
						<method name="get_TopObject()" size="7" />
						<method name="CrossAppDomainArray(System.Int32)" size="9" />
						<method name="RegisterObject(System.Object,System.Runtime.Serialization.Formatters.Binary.ParseRecord,System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="11" />
						<method name="ParseSerializedStreamHeader(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="13" />
						<method name="SetMethodCall(System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall)" size="15" />
						<method name="get_IsRemoting()" size="17" />
						<method name="set_TopObject(System.Object)" size="28" />
						<method name="get_ValueFixupStack()" size="31" />
						<method name="HasSurrogate(System.Type)" size="34" />
						<method name="Bind(System.String,System.String)" size="38" />
						<method name="ResolveSimpleAssemblyName(System.Reflection.AssemblyName)" size="41" />
						<method name="CreateReadObjectInfo(System.Type)" size="43" />
						<method name="CreateReadObjectInfo(System.Type,System.String[],System.Type[])" size="45" />
						<method name="CheckTypeForwardedTo(System.Reflection.Assembly,System.Reflection.Assembly,System.Type)" size="49" />
						<method name="CheckSerializable(System.Type)" size="61" />
						<method name="ParseMemberEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="64" />
						<method name="GetSimplyNamedTypeFromAssembly(System.Reflection.Assembly,System.String,System.Type&amp;)" size="66" />
						<method name="InitFullDeserialization()" size="73" />
						<method name=".ctor(System.IO.Stream,System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.Formatters.Binary.InternalFE,System.Runtime.Serialization.SerializationBinder)" size="79" />
						<method name="CheckSecurity(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="85" />
						<method name="ParseError(System.Runtime.Serialization.Formatters.Binary.ParseRecord,System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="106" />
						<method name="GetId(System.Int64)" size="112" />
						<method name="NextRectangleMap(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="120" />
						<method name="RegisterObject(System.Object,System.Runtime.Serialization.Formatters.Binary.ParseRecord,System.Runtime.Serialization.Formatters.Binary.ParseRecord,System.Boolean)" size="144" />
						<method name="Parse(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="147" />
						<method name="FastBindToType(System.String,System.String)" size="178" />
						<method name="GetType(System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo,System.String)" size="204" />
						<method name="ParseObjectEnd(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="271" />
						<method name="Deserialize(System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Serialization.Formatters.Binary.__BinaryParser,System.Boolean,System.Boolean,System.Runtime.Remoting.Messaging.IMethodCallMessage)" size="400" />
						<method name="ParseObject(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="413" />
						<method name="ParseMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="775" />
						<method name="ParseArray(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="869" />
						<method name="ParseArrayMember(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="1034" />
					</type>
					<type name="__BinaryParser" full-name="System.Runtime.Serialization.Formatters.Binary.__BinaryParser" size="6787">
						<method name="ReadBegin()" size="1" />
						<method name="ReadSByte()" size="8" />
						<method name="ReadBoolean()" size="12" />
						<method name="ReadBytes(System.Int32)" size="13" />
						<method name="ReadDecimal()" size="22" />
						<method name="get_ObjectMapIdTable()" size="26" />
						<method name="get_AssemIdToAssemblyTable()" size="27" />
						<method name="get_SystemAssemblyInfo()" size="36" />
						<method name="PutOp(System.Runtime.Serialization.Formatters.Binary.ObjectProgress)" size="37" />
						<method name="ReadBytes(System.Byte[],System.Int32,System.Int32)" size="40" />
						<method name="GetOp()" size="56" />
						<method name="ReadObjectWithMapTyped(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="59" />
						<method name=".ctor(System.IO.Stream,System.Runtime.Serialization.Formatters.Binary.ObjectReader)" size="66" />
						<method name="ReadMethodObject(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="69" />
						<method name="ReadObjectWithMap(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="70" />
						<method name="ReadMessageEnd()" size="76" />
						<method name="ReadSerializationHeaderRecord()" size="104" />
						<method name="ReadCrossAppDomainMap()" size="113" />
						<method name="ReadAssembly(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="164" />
						<method name="ReadMemberReference()" size="215" />
						<method name="ReadObjectNull(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="223" />
						<method name="ReadMemberPrimitiveUnTyped()" size="257" />
						<method name="ReadArrayAsBytes(System.Runtime.Serialization.Formatters.Binary.ParseRecord)" size="322" />
						<method name="ReadValue(System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE)" size="351" />
						<method name="ReadMemberPrimitiveTyped()" size="358" />
						<method name="ReadObject()" size="516" />
						<method name="ReadObjectString(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="598" />
						<method name="ReadObjectWithMapTyped(System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped)" size="624" />
						<method name="ReadObjectWithMap(System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap)" size="628" />
						<method name="Run()" size="655" />
						<method name="ReadArray(System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum)" size="832" />
					</type>
				</namespace>
				<namespace name="System.Globalization" size="38262">
					<type name="CompareOptions" full-name="System.Globalization.CompareOptions" size="0" />
					<type name="DaylightTimeStruct" full-name="System.Globalization.DaylightTimeStruct" size="22">
						<method name=".ctor(System.DateTime,System.DateTime,System.TimeSpan)" size="22" />
					</type>
					<type name="GlobalizationAssembly" full-name="System.Globalization.GlobalizationAssembly" size="36">
						<method name="GetGlobalizationResourceBytePtr(System.Reflection.Assembly,System.String)" size="36" />
					</type>
					<type name="GregorianCalendarHelper" full-name="System.Globalization.GregorianCalendarHelper" size="47">
						<method name=".cctor()" size="47" />
					</type>
					<type name="TextInfoToUpperData" full-name="System.Globalization.TextInfoToUpperData" size="194">
						<method name=".cctor()" size="194" />
					</type>
					<type name="TextInfoToLowerData" full-name="System.Globalization.TextInfoToLowerData" size="217">
						<method name=".cctor()" size="217" />
					</type>
					<type name="CultureNotFoundException" full-name="System.Globalization.CultureNotFoundException" size="305">
						<method name="get_DefaultMessage()" size="6" />
						<method name="get_InvalidCultureId()" size="7" />
						<method name=".ctor(System.String,System.String)" size="9" />
						<method name=".ctor()" size="12" />
						<method name="get_FormatedInvalidCultureId()" size="58" />
						<method name="get_Message()" size="65" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="68" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="73" />
					</type>
					<type name="Calendar" full-name="System.Globalization.Calendar" size="344">
						<method name="get_ID()" size="2" />
						<method name="get_MinSupportedDateTime()" size="6" />
						<method name="get_BaseCalendarID()" size="7" />
						<method name="SetReadOnlyState(System.Boolean)" size="8" />
						<method name="GetSystemTwoDigitYearSetting(System.Int32,System.Int32)" size="15" />
						<method name="Clone()" size="19" />
						<method name=".ctor()" size="21" />
						<method name="IsValidMonth(System.Int32,System.Int32,System.Int32)" size="31" />
						<method name="IsValidDay(System.Int32,System.Int32,System.Int32,System.Int32)" size="35" />
						<method name="IsValidYear(System.Int32,System.Int32)" size="36" />
						<method name="get_CurrentEraValue()" size="38" />
						<method name="TryToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime&amp;)" size="49" />
						<method name="ToFourDigitYear(System.Int32)" size="64" />
					</type>
					<type name="CharUnicodeInfo" full-name="System.Globalization.CharUnicodeInfo" size="350">
						<type name="UnicodeDataHeader" full-name="System.Globalization.CharUnicodeInfo/UnicodeDataHeader" size="0" />
						<method name="GetUnicodeCategory(System.Char)" size="7" />
						<method name="GetUnicodeCategory(System.Int32)" size="8" />
						<method name=".cctor()" size="11" />
						<method name="IsWhiteSpace(System.Char)" size="18" />
						<method name="EndianSwap(System.UInt16)" size="48" />
						<method name="EndianSwap(System.UInt32)" size="51" />
						<method name="InternalGetCategoryValue(System.Int32,System.Int32)" size="76" />
						<method name="InitTable()" size="123" />
					</type>
					<type name="SortKey" full-name="System.Globalization.SortKey" size="414">
						<method name="get_OriginalString()" size="7" />
						<method name=".ctor(System.String,System.String,System.Globalization.CompareOptions,System.Byte[])" size="12" />
						<method name="Equals(System.Object)" size="51" />
						<method name="GetHashCode()" size="59" />
						<method name=".ctor(System.Int32,System.String,System.Globalization.CompareOptions)" size="72" />
						<method name="ToString()" size="73" />
						<method name="Compare(System.Globalization.SortKey,System.Globalization.SortKey)" size="133" />
					</type>
					<type name="DateTimeFormatInfoScanner" full-name="System.Globalization.DateTimeFormatInfoScanner" size="474">
						<method name="GetFormatFlagUseHebrewCalendar(System.Int32)" size="9" />
						<method name="GetFormatFlagUseSpaceInDayNames(System.String[],System.String[])" size="21" />
						<method name="GetFormatFlagGenitiveMonth(System.String[],System.String[],System.String[],System.String[])" size="22" />
						<method name="EqualStringArrays(System.String[],System.String[])" size="47" />
						<method name="ArrayElementsHaveSpace(System.String[])" size="53" />
						<method name="GetFormatFlagUseSpaceInMonthNames(System.String[],System.String[],System.String[],System.String[])" size="77" />
						<method name="ArrayElementsBeginWithDigit(System.String[])" size="245" />
					</type>
					<type name="GregorianCalendar" full-name="System.Globalization.GregorianCalendar" size="1005">
						<method name="GetEra(System.DateTime)" size="2" />
						<method name="get_MinSupportedDateTime()" size="6" />
						<method name="get_ID()" size="7" />
						<method name=".ctor()" size="8" />
						<method name="get_Eras()" size="11" />
						<method name="GetDayOfMonth(System.DateTime)" size="15" />
						<method name="GetDayOfWeek(System.DateTime)" size="24" />
						<method name="GetDefaultInstance()" size="29" />
						<method name="get_TwoDigitYearMax()" size="38" />
						<method name="TryToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime&amp;)" size="42" />
						<method name="ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" size="47" />
						<method name=".ctor(System.Globalization.GregorianCalendarTypes)" size="69" />
						<method name="OnDeserialized(System.Runtime.Serialization.StreamingContext)" size="71" />
						<method name="ToFourDigitYear(System.Int32)" size="88" />
						<method name="GetMonthsInYear(System.Int32,System.Int32)" size="90" />
						<method name="GetDaysInMonth(System.Int32,System.Int32,System.Int32)" size="165" />
						<method name="GetDatePart(System.Int64,System.Int32)" size="210" />
					</type>
					<type name="NumberFormatInfo" full-name="System.Globalization.NumberFormatInfo" size="1126">
						<method name="OnDeserializing(System.Runtime.Serialization.StreamingContext)" size="1" />
						<method name="get_CurrencyDecimalDigits()" size="7" />
						<method name=".ctor()" size="8" />
						<method name="Clone()" size="19" />
						<method name="GetFormat(System.Type)" size="22" />
						<method name="VerifyWritable()" size="25" />
						<method name="set_NaNSymbol(System.String)" size="38" />
						<method name="get_InvariantInfo()" size="41" />
						<method name="ReadOnly(System.Globalization.NumberFormatInfo)" size="43" />
						<method name="get_CurrentInfo()" size="55" />
						<method name="ValidateParseStyleFloatingPoint(System.Globalization.NumberStyles)" size="56" />
						<method name="ValidateParseStyleInteger(System.Globalization.NumberStyles)" size="65" />
						<method name="GetInstance(System.IFormatProvider)" size="87" />
						<method name="OnSerializing(System.Runtime.Serialization.StreamingContext)" size="127" />
						<method name=".ctor(System.Globalization.CultureData)" size="377" />
					</type>
					<type name="CultureData" full-name="System.Globalization.CultureData" size="1652">
						<type name="NumberFormatEntryManaged" full-name="System.Globalization.CultureData/NumberFormatEntryManaged" size="0" />
						<method name="ReescapeWin32Strings(System.String[])" size="2" />
						<method name="get_SCOMPAREINFO()" size="6" />
						<method name="get_SISO639LANGNAME()" size="7" />
						<method name="get_LongTimes()" size="9" />
						<method name="get_IsInvariantCulture()" size="12" />
						<method name="EraNames(System.Int32)" size="13" />
						<method name=".ctor(System.String)" size="14" />
						<method name="strlen(System.Byte*)" size="16" />
						<method name="GetCultureData(System.String,System.Boolean)" size="22" />
						<method name="DateSeparator(System.Int32)" size="32" />
						<method name="create_group_sizes_array(System.Int32,System.Int32)" size="41" />
						<method name="GetCalendar(System.Int32)" size="67" />
						<method name="GetSeparator(System.String,System.String)" size="85" />
						<method name="IndexOfTimePart(System.String,System.Int32,System.String)" size="104" />
						<method name="GetCultureData(System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)" size="106" />
						<method name="UnescapeNlsString(System.String,System.Int32,System.Int32)" size="154" />
						<method name="get_Invariant()" size="262" />
						<method name="GetNFIValues(System.Globalization.NumberFormatInfo)" size="430" />
					</type>
					<type name="TextInfo" full-name="System.Globalization.TextInfo" size="2011">
						<method name="OnDeserialized(System.Runtime.Serialization.StreamingContext)" size="7" />
						<method name="SetReadOnlyState(System.Boolean)" size="8" />
						<method name="IsAscii(System.Char)" size="9" />
						<method name="GetHashCode()" size="12" />
						<method name="OnDeserializing(System.Runtime.Serialization.StreamingContext)" size="15" />
						<method name="Clone()" size="19" />
						<method name="ToLower(System.String)" size="22" />
						<method name="Equals(System.Object)" size="30" />
						<method name="ToLower(System.Char)" size="31" />
						<method name="get_Invariant()" size="34" />
						<method name="OnSerializing(System.Runtime.Serialization.StreamingContext)" size="42" />
						<method name=".ctor(System.Globalization.CultureData)" size="48" />
						<method name="get_IsAsciiCasingSameAsInvariant()" size="86" />
						<method name="ToLowerInternal(System.String)" size="118" />
						<method name="OnDeserialized()" size="126" />
						<method name="ToLowerInternal(System.Char)" size="569" />
						<method name="ToUpperInternal(System.Char)" size="688" />
					</type>
					<type name="CalendarData" full-name="System.Globalization.CalendarData" size="2297">
						<method name="nativeGetTwoDigitYearMax(System.Int32)" size="2" />
						<method name="nativeGetCalendarData(System.Globalization.CalendarData,System.String,System.Int32)" size="14" />
						<method name=".ctor()" size="18" />
						<method name="GetCalendarData(System.Int32)" size="23" />
						<method name="CalendarIdToCultureName(System.Int32)" size="158" />
						<method name="InitializeAbbreviatedEraNames(System.String,System.Int32)" size="338" />
						<method name="InitializeEraNames(System.String,System.Int32)" size="470" />
						<method name=".ctor(System.String,System.Int32,System.Boolean)" size="604" />
						<method name=".cctor()" size="670" />
					</type>
					<type name="TimeSpanFormat" full-name="System.Globalization.TimeSpanFormat" size="2467">
						<type name="Pattern" full-name="System.Globalization.TimeSpanFormat/Pattern" size="0" />
						<type name="FormatLiterals" full-name="System.Globalization.TimeSpanFormat/FormatLiterals" size="902">
							<method name="get_Start()" size="9" />
							<method name="InitInvariant(System.Boolean)" size="163" />
							<method name="Init(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" size="685" />
						</type>
						<method name="Format(System.TimeSpan,System.String,System.IFormatProvider)" size="19" />
						<method name=".cctor()" size="23" />
						<method name="TryFormat(System.TimeSpan,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="66" />
						<method name="AppendNonNegativeInt32(System.Text.StringBuilder,System.Int32,System.Int32)" size="102" />
						<method name="FormatToBuilder(System.TimeSpan,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="163" />
						<method name="FormatStandard(System.TimeSpan,System.Boolean,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.TimeSpanFormat/Pattern)" size="456" />
						<method name="FormatCustomized(System.TimeSpan,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.Text.StringBuilder)" size="736" />
					</type>
					<type name="CompareInfo" full-name="System.Globalization.CompareInfo" size="3693">
						<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="7" />
						<method name="OnDeserializing(System.Runtime.Serialization.StreamingContext)" size="8" />
						<method name="Compare(System.String,System.String)" size="10" />
						<method name="GetHashCode()" size="12" />
						<method name="InitSort(System.Globalization.CultureInfo)" size="13" />
						<method name="CreateSortKeyCore(System.String,System.Globalization.CompareOptions)" size="14" />
						<method name="LastIndexOfCore(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" size="15" />
						<method name="InvariantToUpper(System.Char)" size="16" />
						<method name="ToString()" size="17" />
						<method name="OnSerializing(System.Runtime.Serialization.StreamingContext)" size="23" />
						<method name="CompareOrdinalIgnoreCase(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" size="24" />
						<method name="GetCompareInfo(System.String)" size="26" />
						<method name="IndexOfCore(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions,System.Int32*)" size="27" />
						<method name="Equals(System.Object)" size="30" />
						<method name="CompareString(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Globalization.CompareOptions)" size="31" />
						<method name=".ctor(System.Globalization.CultureInfo)" size="33" />
						<method name="IndexOfOrdinal(System.String,System.String,System.Int32,System.Int32,System.Boolean)" size="34" />
						<method name="StartsWith(System.String,System.String,System.Globalization.CompareOptions)" size="43" />
						<method name="internal_index_switch(System.String,System.Int32,System.Int32,System.String,System.Globalization.CompareOptions,System.Boolean)" size="48" />
						<method name="get_Name()" size="50" />
						<method name="OnDeserialized()" size="51" />
						<method name="EndsWith(System.String,System.String,System.Globalization.CompareOptions)" size="55" />
						<method name="internal_compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" size="56" />
						<method name="CompareOptionIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="60" />
						<method name="InvariantIndexOf(System.String,System.String,System.Int32,System.Int32,System.Boolean)" size="69" />
						<method name="GetHashCodeOfString(System.String,System.Globalization.CompareOptions)" size="72" />
						<method name="InvariantLastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Boolean)" size="77" />
						<method name="CompareStringOrdinalIgnoreCase(System.Char*,System.Int32,System.Char*,System.Int32)" size="91" />
						<method name="GetIgnoreCaseHash(System.String)" size="132" />
						<method name="IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" size="143" />
						<method name="Compare(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Globalization.CompareOptions)" size="146" />
						<method name="Compare(System.String,System.String,System.Globalization.CompareOptions)" size="161" />
						<method name="InvariantCreateSortKey(System.String,System.Globalization.CompareOptions)" size="208" />
						<method name="CompareOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="220" />
						<method name="IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" size="227" />
						<method name="LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" size="270" />
						<method name="Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" size="357" />
						<method name="InvariantFindString(System.Char*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Boolean)" size="360" />
					</type>
					<type name="DateTimeFormatInfo" full-name="System.Globalization.DateTimeFormatInfo" size="4799">
						<type name="TokenHashValue" full-name="System.Globalization.DateTimeFormatInfo/TokenHashValue" size="28">
							<method name=".ctor(System.String,System.TokenType,System.Int32)" size="28" />
						</type>
						<method name="set_Calendar(System.Globalization.Calendar)" size="6" />
						<method name="get_Calendar()" size="7" />
						<method name="get_HasSpacesInMonthNames()" size="12" />
						<method name="get_HasSpacesInDayNames()" size="13" />
						<method name="internalGetAbbreviatedDayOfWeekNames()" size="17" />
						<method name="GetFormat(System.Type)" size="22" />
						<method name="get_FormatFlags()" size="23" />
						<method name=".cctor()" size="25" />
						<method name="get_LongDatePattern()" size="29" />
						<method name="get_CultureName()" size="32" />
						<method name="internalGetAbbreviatedDayOfWeekNamesCore()" size="35" />
						<method name="get_FullTimeSpanNegativePattern()" size="37" />
						<method name="Clone()" size="41" />
						<method name="get_EraNames()" size="43" />
						<method name="get_InvariantInfo()" size="48" />
						<method name="get_CurrentInfo()" size="50" />
						<method name="GetAbbreviatedMonthName(System.Int32)" size="54" />
						<method name="CompareStringIgnoreCaseOptimized(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" size="59" />
						<method name="GetEraName(System.Int32)" size="61" />
						<method name="IsAllowedJapaneseTokenFollowedByNonSpaceLetter(System.String,System.Char)" size="66" />
						<method name=".ctor()" size="78" />
						<method name="GetInstance(System.IFormatProvider)" size="79" />
						<method name="AddMonthNames(System.Globalization.DateTimeFormatInfo/TokenHashValue[],System.String)" size="80" />
						<method name="internalGetGenitiveMonthNames(System.Boolean)" size="89" />
						<method name="internalGetMonthName(System.Int32,System.Globalization.MonthNameStyles,System.Boolean)" size="100" />
						<method name="InitializeFormatFlags()" size="111" />
						<method name="InsertAtCurrentHashNode(System.Globalization.DateTimeFormatInfo/TokenHashValue[],System.String,System.Char,System.TokenType,System.Int32,System.Int32,System.Int32,System.Int32)" size="112" />
						<method name="InitializeOverridableProperties(System.Globalization.CultureData,System.Int32)" size="197" />
						<method name="get_DateTimeOffsetPattern()" size="212" />
						<method name="InsertHash(System.Globalization.DateTimeFormatInfo/TokenHashValue[],System.String,System.TokenType,System.Int32)" size="342" />
						<method name="Tokenize(System.TokenType,System.TokenType&amp;,System.Int32&amp;,System.__DTString&amp;)" size="519" />
						<method name="CreateTokenHashTable()" size="768" />
					</type>
					<type name="TimeSpanParse" full-name="System.Globalization.TimeSpanParse" size="7670">
						<type name="ParseFailureKind" full-name="System.Globalization.TimeSpanParse/ParseFailureKind" size="0" />
						<type name="TimeSpanResult" full-name="System.Globalization.TimeSpanParse/TimeSpanResult" size="99">
							<method name=".ctor(System.Boolean)" size="20" />
							<method name="SetFailure(System.Globalization.TimeSpanParse/ParseFailureKind,System.String,System.Object,System.String)" size="79" />
						</type>
						<type name="TimeSpanToken" full-name="System.Globalization.TimeSpanParse/TimeSpanToken" size="162">
							<method name=".ctor(System.Globalization.TimeSpanParse/TTT)" size="19" />
							<method name=".ctor(System.Globalization.TimeSpanParse/TTT,System.Int32,System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="30" />
							<method name="IsInvalidFraction()" size="75" />
						</type>
						<type name="TimeSpanTokenizer" full-name="System.Globalization.TimeSpanParse/TimeSpanTokenizer" size="474">
							<method name=".ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="9" />
							<method name=".ctor(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32)" size="15" />
							<method name="BackOne()" size="24" />
							<method name="get_EOL()" size="25" />
							<method name="get_NextChar()" size="48" />
							<method name="GetNextToken()" size="353" />
						</type>
						<type name="StringParser" full-name="System.Globalization.TimeSpanParse/StringParser" size="776">
							<method name="SkipBlanks()" size="29" />
							<method name="NextNonDigit()" size="50" />
							<method name="NextChar()" size="70" />
							<method name="ParseInt(System.Int32,System.Int32&amp;,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="148" />
							<method name="ParseTime(System.Int64&amp;,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="226" />
							<method name="TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="253" />
						</type>
						<type name="TimeSpanRawInfo" full-name="System.Globalization.TimeSpanParse/TimeSpanRawInfo" size="1743">
							<method name="get_PositiveInvariant()" size="6" />
							<method name="get_PositiveLocalized()" size="57" />
							<method name="Init(System.Globalization.DateTimeFormatInfo)" size="67" />
							<method name="FullDMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="69" />
							<method name="FullHMMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="94" />
							<method name="PartialAppCompatMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="118" />
							<method name="FullDHMMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="119" />
							<method name="ProcessToken(System.Globalization.TimeSpanParse/TimeSpanToken&amp;,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="133" />
							<method name="AddNum(System.Globalization.TimeSpanParse/TimeSpanToken,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="135" />
							<method name="FullAppCompatMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="146" />
							<method name="FullDHMSMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="147" />
							<method name="AddSep(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="148" />
							<method name="FullMatch(System.Globalization.TimeSpanFormat/FormatLiterals)" size="175" />
						</type>
						<method name="TryParseTimeSpanConstant(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="17" />
						<method name="ParseExactDigits(System.Globalization.TimeSpanParse/TimeSpanTokenizer&amp;,System.Int32,System.Int32&amp;)" size="26" />
						<method name="ParseExactLiteral(System.Globalization.TimeSpanParse/TimeSpanTokenizer&amp;,System.Text.StringBuilder)" size="36" />
						<method name="TryParseExact(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan&amp;)" size="46" />
						<method name="ParseExactDigits(System.Globalization.TimeSpanParse/TimeSpanTokenizer&amp;,System.Int32,System.Int32,System.Int32&amp;,System.Int32&amp;)" size="73" />
						<method name="Pow10(System.Int32)" size="104" />
						<method name="TryParseExactTimeSpan(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="135" />
						<method name="TryParseTimeSpan(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.TimeSpanParse/TimeSpanStandardStyles,System.IFormatProvider,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="143" />
						<method name="ProcessTerminalState(System.Globalization.TimeSpanParse/TimeSpanRawInfo&amp;,System.Globalization.TimeSpanParse/TimeSpanStandardStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="148" />
						<method name="ProcessTerminal_DHMSF(System.Globalization.TimeSpanParse/TimeSpanRawInfo&amp;,System.Globalization.TimeSpanParse/TimeSpanStandardStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="240" />
						<method name="TryTimeToTicks(System.Boolean,System.Globalization.TimeSpanParse/TimeSpanToken,System.Globalization.TimeSpanParse/TimeSpanToken,System.Globalization.TimeSpanParse/TimeSpanToken,System.Globalization.TimeSpanParse/TimeSpanToken,System.Globalization.TimeSpanParse/TimeSpanToken,System.Int64&amp;)" size="243" />
						<method name="ProcessTerminal_HM(System.Globalization.TimeSpanParse/TimeSpanRawInfo&amp;,System.Globalization.TimeSpanParse/TimeSpanStandardStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="244" />
						<method name="ProcessTerminal_HM_S_D(System.Globalization.TimeSpanParse/TimeSpanRawInfo&amp;,System.Globalization.TimeSpanParse/TimeSpanStandardStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="880" />
						<method name="TryParseByFormat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.TimeSpanStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="892" />
						<method name="ProcessTerminal_HMS_F_D(System.Globalization.TimeSpanParse/TimeSpanRawInfo&amp;,System.Globalization.TimeSpanParse/TimeSpanStandardStyles,System.Globalization.TimeSpanParse/TimeSpanResult&amp;)" size="949" />
					</type>
					<type name="CultureInfo" full-name="System.Globalization.CultureInfo" size="9139">
						<type name="Data" full-name="System.Globalization.CultureInfo/Data" size="0" />
						<method name="CheckNeutral()" size="1" />
						<method name="ConstructCurrentUICulture()" size="6" />
						<method name="get__cultureData()" size="7" />
						<method name="get_InvariantCulture()" size="8" />
						<method name=".ctor(System.Int32)" size="9" />
						<method name=".ctor(System.Int32,System.Boolean)" size="10" />
						<method name="get_CurrentCulture()" size="11" />
						<method name="GetTextInfoData()" size="12" />
						<method name=".ctor()" size="14" />
						<method name="CreateTextInfo(System.Boolean)" size="19" />
						<method name="Construct()" size="21" />
						<method name="CreateNotFoundException(System.String)" size="27" />
						<method name="get_IsNeutralCulture()" size="36" />
						<method name="Equals(System.Object)" size="44" />
						<method name="get_NumberFormat()" size="52" />
						<method name="get_CalendarType()" size="55" />
						<method name="GetFormat(System.Type)" size="56" />
						<method name="set_NumberFormat(System.Globalization.NumberFormatInfo)" size="57" />
						<method name="insert_into_shared_tables(System.Globalization.CultureInfo)" size="62" />
						<method name="ConstructCurrentCulture()" size="69" />
						<method name="get_DateTimeFormat()" size="80" />
						<method name="get_CompareInfo()" size="81" />
						<method name="get_TextInfo()" size="87" />
						<method name="GetCultureInfo(System.Int32)" size="93" />
						<method name="Clone()" size="94" />
						<method name="ConstructInvariant(System.Boolean)" size="139" />
						<method name=".ctor(System.String,System.Boolean,System.Boolean)" size="210" />
						<method name="CreateSpecificCulture(System.String)" size="227" />
						<method name=".ctor(System.Int32,System.Boolean,System.Boolean)" size="236" />
						<method name="CreateSpecificCultureFromNeutral(System.String)" size="6998" />
					</type>
				</namespace>
				<namespace name="System" size="150238">
					<type name="Action" full-name="System.Action" size="0" />
					<type name="NotImplemented" full-name="System.NotImplemented" size="6">
						<method name="get_ByDesign()" size="6" />
					</type>
					<type name="EventArgs" full-name="System.EventArgs" size="7">
						<method name=".ctor()" size="7" />
					</type>
					<type name="ByReference`1" full-name="System.ByReference`1" size="12">
						<method name=".ctor(T&amp;)" size="6" />
					</type>
					<type name="AssemblyLoadEventArgs" full-name="System.AssemblyLoadEventArgs" size="14">
						<method name=".ctor(System.Reflection.Assembly)" size="14" />
					</type>
					<type name="TypeNameParser" full-name="System.TypeNameParser" size="19">
						<method name="GetType(System.String,System.Func`2&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;,System.Func`4&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;,System.Boolean,System.Boolean,System.Threading.StackCrawlMark&amp;)" size="19" />
					</type>
					<type name="DTSubString" full-name="System.DTSubString" size="21">
						<method name="get_Item(System.Int32)" size="21" />
					</type>
					<type name="Tuple" full-name="System.Tuple" size="22">
						<method name="CombineHashCodes(System.Int32,System.Int32)" size="8" />
						<method name="CombineHashCodes(System.Int32,System.Int32,System.Int32)" size="14" />
					</type>
					<type name="ReflectionOnlyType" full-name="System.ReflectionOnlyType" size="23">
						<method name=".ctor()" size="7" />
						<method name="get_TypeHandle()" size="16" />
					</type>
					<type name="InvalidTimeZoneException" full-name="System.InvalidTimeZoneException" size="24">
						<method name=".ctor()" size="7" />
						<method name=".ctor(System.String)" size="8" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
					</type>
					<type name="Object" full-name="System.Object" size="28">
						<method name=".ctor()" size="1" />
						<method name="Equals(System.Object)" size="5" />
						<method name="GetHashCode()" size="7" />
						<method name="ToString()" size="12" />
					</type>
					<type name="ArrayTypeMismatchException" full-name="System.ArrayTypeMismatchException" size="32">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="ResolveEventArgs" full-name="System.ResolveEventArgs" size="35">
						<method name=".ctor(System.String)" size="14" />
						<method name=".ctor(System.String,System.Reflection.Assembly)" size="21" />
					</type>
					<type name="ContextMarshalException" full-name="System.ContextMarshalException" size="37">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="28" />
					</type>
					<type name="LocalDataStoreMgr" full-name="System.LocalDataStoreMgr" size="42">
						<method name=".ctor()" size="42" />
					</type>
					<type name="Empty" full-name="System.Empty" size="48">
						<method name="ToString()" size="6" />
						<method name=".ctor()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="24" />
					</type>
					<type name="DllNotFoundException" full-name="System.DllNotFoundException" size="51">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="TypeNames" full-name="System.TypeNames" size="55">
						<type name="ATypeName" full-name="System.TypeNames/ATypeName" size="55">
							<method name=".ctor()" size="7" />
							<method name="GetHashCode()" size="12" />
							<method name="Equals(System.Object)" size="13" />
							<method name="Equals(System.TypeName)" size="23" />
						</type>
					</type>
					<type name="Nullable" full-name="System.Nullable" size="59">
						<method name="GetUnderlyingType(System.Type)" size="59" />
					</type>
					<type name="DuplicateWaitObjectException" full-name="System.DuplicateWaitObjectException" size="61">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor()" size="23" />
						<method name="get_DuplicateWaitObjectMessage()" size="29" />
					</type>
					<type name="ObsoleteAttribute" full-name="System.ObsoleteAttribute" size="63">
						<method name=".ctor()" size="21" />
					</type>
					<type name="OrdinalCaseSensitiveComparer" full-name="System.OrdinalCaseSensitiveComparer" size="69">
						<method name=".ctor()" size="8" />
						<method name="GetHashCode(System.String)" size="16" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="29" />
					</type>
					<type name="ApplicationException" full-name="System.ApplicationException" size="71">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor(System.String,System.Exception)" size="20" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="Variant" full-name="System.Variant" size="72">
						<method name="Clear()" size="72" />
					</type>
					<type name="PointerSpec" full-name="System.PointerSpec" size="73">
						<method name=".ctor(System.Int32)" size="14" />
						<method name="Append(System.Text.StringBuilder)" size="15" />
						<method name="ToString()" size="17" />
						<method name="Resolve(System.Type)" size="27" />
					</type>
					<type name="TypeIdentifiers" full-name="System.TypeIdentifiers" size="74">
						<type name="Display" full-name="System.TypeIdentifiers/Display" size="67">
							<method name="get_DisplayName()" size="7" />
							<method name="GetInternalName()" size="12" />
							<method name=".ctor(System.String)" size="21" />
							<method name="get_InternalName()" size="27" />
						</type>
						<method name="FromDisplay(System.String)" size="7" />
					</type>
					<type name="ArgumentNullException" full-name="System.ArgumentNullException" size="76">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.String)" size="20" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.String)" size="24" />
					</type>
					<type name="AttributeUsageAttribute" full-name="System.AttributeUsageAttribute" size="78">
						<method name="get_AllowMultiple()" size="7" />
						<method name="set_AllowMultiple(System.Boolean)" size="8" />
						<method name=".cctor()" size="16" />
						<method name=".ctor(System.AttributeTargets)" size="32" />
					</type>
					<type name="GC" full-name="System.GC" size="80">
						<method name="KeepAlive(System.Object)" size="1" />
						<method name=".cctor()" size="11" />
						<method name="SuppressFinalize(System.Object)" size="21" />
						<method name="GetMemoryInfo(System.UInt32&amp;,System.UInt64&amp;,System.UInt32&amp;,System.UIntPtr&amp;,System.UIntPtr&amp;)" size="26" />
					</type>
					<type name="OperationCanceledException" full-name="System.OperationCanceledException" size="81">
						<method name="get_CancellationToken()" size="7" />
						<method name="set_CancellationToken(System.Threading.CancellationToken)" size="8" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String,System.Threading.CancellationToken)" size="15" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
					</type>
					<type name="MarshalByRefObject" full-name="System.MarshalByRefObject" size="98">
						<method name=".ctor()" size="7" />
						<method name="set_ObjectIdentity(System.Runtime.Remoting.ServerIdentity)" size="8" />
						<method name="CreateObjRef(System.Type)" size="37" />
						<method name="InitializeLifetimeService()" size="39" />
					</type>
					<type name="DateTimeRawInfo" full-name="System.DateTimeRawInfo" size="101">
						<method name="GetNumber(System.Int32)" size="13" />
						<method name="AddNumber(System.Int32)" size="30" />
						<method name="Init(System.Int32*)" size="58" />
					</type>
					<type name="NotFiniteNumberException" full-name="System.NotFiniteNumberException" size="106">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="27" />
						<method name=".ctor()" size="38" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="41" />
					</type>
					<type name="Gen2GcCallback" full-name="System.Gen2GcCallback" size="114">
						<method name=".ctor()" size="7" />
						<method name="Register(System.Func`2&lt;System.Object,System.Boolean&gt;,System.Object)" size="13" />
						<method name="Setup(System.Func`2&lt;System.Object,System.Boolean&gt;,System.Object)" size="21" />
						<method name="Finalize()" size="73" />
					</type>
					<type name="Math" full-name="System.Math" size="119">
						<method name="Max(System.Int32,System.Int32)" size="8" />
						<method name="ThrowAbsOverflow()" size="11" />
						<method name="Sign(System.Int64)" size="12" />
						<method name="Abs(System.Int32)" size="19" />
						<method name="Clamp(System.Int32,System.Int32,System.Int32)" size="25" />
						<method name="ThrowMinMaxException(T,T)" size="28" />
					</type>
					<type name="ArraySpec" full-name="System.ArraySpec" size="134">
						<method name="ToString()" size="17" />
						<method name=".ctor(System.Int32,System.Boolean)" size="21" />
						<method name="Resolve(System.Type)" size="45" />
						<method name="Append(System.Text.StringBuilder)" size="51" />
					</type>
					<type name="MissingFieldException" full-name="System.MissingFieldException" size="135">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
						<method name="get_Message()" size="84" />
					</type>
					<type name="DateTimeResult" full-name="System.DateTimeResult" size="143">
						<method name="SetDate(System.Int32,System.Int32,System.Int32)" size="22" />
						<method name="SetBadDateTimeFailure()" size="26" />
						<method name="Init(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="51" />
					</type>
					<type name="TypeInitializationException" full-name="System.TypeInitializationException" size="153">
						<method name=".ctor(System.String,System.Exception)" size="20" />
						<method name="get_TypeName()" size="21" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="26" />
						<method name=".ctor(System.String,System.String,System.Exception)" size="27" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="36" />
					</type>
					<type name="MissingMethodException" full-name="System.MissingMethodException" size="156">
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor(System.String,System.String)" size="21" />
						<method name=".ctor()" size="23" />
						<method name="get_Message()" size="84" />
					</type>
					<type name="ArgumentException" full-name="System.ArgumentException" size="182">
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.String,System.String)" size="26" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="36" />
						<method name="get_Message()" size="52" />
					</type>
					<type name="ValueType" full-name="System.ValueType" size="186">
						<method name=".ctor()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="ToString()" size="12" />
						<method name="GetHashCode()" size="44" />
						<method name="DefaultEquals(System.Object,System.Object)" size="115" />
					</type>
					<type name="ObjectDisposedException" full-name="System.ObjectDisposedException" size="190">
						<method name=".ctor()" size="13" />
						<method name="get_ObjectName()" size="21" />
						<method name=".ctor(System.String,System.String)" size="26" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="36" />
						<method name="get_Message()" size="55" />
					</type>
					<type name="OrdinalComparer" full-name="System.OrdinalComparer" size="195">
						<method name=".ctor(System.Boolean)" size="14" />
						<method name="GetHashCode()" size="24" />
						<method name="Equals(System.Object)" size="27" />
						<method name="GetHashCode(System.String)" size="31" />
						<method name="Compare(System.String,System.String)" size="41" />
						<method name="Equals(System.String,System.String)" size="58" />
					</type>
					<type name="CharEnumerator" full-name="System.CharEnumerator" size="209">
						<method name="Clone()" size="7" />
						<method name="System.Collections.IEnumerator.get_Current()" size="12" />
						<method name=".ctor(System.String)" size="21" />
						<method name="Dispose()" size="33" />
						<method name="get_Current()" size="57" />
						<method name="MoveNext()" size="79" />
					</type>
					<type name="ValueTuple" full-name="System.ValueTuple" size="212">
						<method name="Equals(System.ValueTuple)" size="2" />
						<method name="ToString()" size="6" />
						<method name="Equals(System.Object)" size="10" />
						<method name="CombineHashCodes(System.Int32,System.Int32,System.Int32)" size="14" />
						<method name="CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32)" size="15" />
						<method name="CombineHashCodes(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" size="17" />
						<method name="CombineHashCodes(System.Int32,System.Int32)" size="18" />
						<method name="System.IComparable.CompareTo(System.Object)" size="57" />
					</type>
					<type name="DBNull" full-name="System.DBNull" size="220">
						<method name="GetTypeCode()" size="2" />
						<method name="ToString()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="8" />
						<method name="System.IConvertible.ToType(System.Type,System.IFormatProvider)" size="9" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="11" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="17" />
					</type>
					<type name="ArgumentOutOfRangeException" full-name="System.ArgumentOutOfRangeException" size="223">
						<method name=".ctor(System.String,System.String)" size="20" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.String)" size="24" />
						<method name=".ctor(System.String,System.Object,System.String)" size="27" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="36" />
						<method name="get_Message()" size="57" />
					</type>
					<type name="StringComparer" full-name="System.StringComparer" size="230">
						<method name="get_OrdinalIgnoreCase()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="GetHashCode(System.Object)" size="39" />
						<method name="Equals(System.Object,System.Object)" size="51" />
						<method name=".cctor()" size="53" />
						<method name="Compare(System.Object,System.Object)" size="74" />
					</type>
					<type name="Nullable`1" full-name="System.Nullable`1" size="240">
						<method name="get_HasValue()" size="7" />
						<method name=".ctor(T)" size="15" />
						<method name="get_Value()" size="20" />
						<method name="Box(System.Nullable`1&lt;T&gt;)" size="22" />
						<method name="Unbox(System.Object)" size="25" />
						<method name="GetHashCode()" size="28" />
						<method name="ToString()" size="32" />
						<method name="Equals(System.Object)" size="37" />
						<method name="UnboxExact(System.Object)" size="54" />
					</type>
					<type name="UIntPtr" full-name="System.UIntPtr" size="247">
						<method name="op_Explicit(System.UInt64)" size="7" />
						<method name="GetHashCode()" size="8" />
						<method name=".ctor(System.UInt32)" size="9" />
						<method name=".cctor()" size="12" />
						<method name="System.IEquatable&lt;System.UIntPtr&gt;.Equals(System.UIntPtr)" size="16" />
						<method name="op_Equality(System.UIntPtr,System.UIntPtr)" size="17" />
						<method name="op_Inequality(System.UIntPtr,System.UIntPtr)" size="20" />
						<method name="Equals(System.Object)" size="33" />
						<method name=".ctor(System.UInt64)" size="38" />
						<method name="ToString()" size="40" />
					</type>
					<type name="ParamsArray" full-name="System.ParamsArray" size="251">
						<method name="get_Length()" size="9" />
						<method name="get_Item(System.Int32)" size="18" />
						<method name="GetAtSlow(System.Int32)" size="31" />
						<method name=".ctor(System.Object)" size="33" />
						<method name=".cctor()" size="34" />
						<method name=".ctor(System.Object[])" size="60" />
					</type>
					<type name="WeakReference" full-name="System.WeakReference" size="254">
						<method name="get_TrackResurrection()" size="7" />
						<method name=".ctor(System.Object)" size="9" />
						<method name=".ctor(System.Object,System.Boolean)" size="21" />
						<method name="get_Target()" size="27" />
						<method name="AllocateHandle(System.Object)" size="36" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="66" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="67" />
					</type>
					<type name="RuntimeFieldHandle" full-name="System.RuntimeFieldHandle" size="268">
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.IntPtr)" size="8" />
						<method name="SetValue(System.Reflection.RuntimeFieldInfo,System.Object,System.Object,System.RuntimeType,System.Reflection.FieldAttributes,System.RuntimeType,System.Boolean&amp;)" size="9" />
						<method name="GetHashCode()" size="12" />
						<method name="Equals(System.Object)" size="60" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="81" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="91" />
					</type>
					<type name="MissingMemberException" full-name="System.MissingMemberException" size="297">
						<method name="FormatSignature(System.Byte[])" size="6" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="75" />
						<method name="get_Message()" size="84" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="90" />
					</type>
					<type name="AppContext" full-name="System.AppContext" size="300">
						<type name="SwitchValueState" full-name="System.AppContext/SwitchValueState" size="0" />
						<method name=".cctor()" size="19" />
						<method name="InitializeDefaultSwitchValues()" size="51" />
						<method name="TryGetSwitch(System.String,System.Boolean&amp;)" size="230" />
					</type>
					<type name="IntPtr" full-name="System.IntPtr" size="331">
						<method name="get_Size()" size="7" />
						<method name=".ctor(System.Void*)" size="8" />
						<method name=".ctor(System.Int32)" size="9" />
						<method name="IsNull()" size="11" />
						<method name="op_Addition(System.IntPtr,System.Int32)" size="14" />
						<method name="System.IEquatable&lt;System.IntPtr&gt;.Equals(System.IntPtr)" size="16" />
						<method name="op_Equality(System.IntPtr,System.IntPtr)" size="17" />
						<method name="op_Inequality(System.IntPtr,System.IntPtr)" size="20" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="21" />
						<method name="ToInt64()" size="25" />
						<method name="Equals(System.Object)" size="30" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="32" />
						<method name="ToString(System.String)" size="44" />
					</type>
					<type name="Environment" full-name="System.Environment" size="337">
						<method name="GetResourceString(System.String)" size="2" />
						<method name="get_CurrentDirectory()" size="6" />
						<method name="GetEnvironmentVariable(System.String)" size="7" />
						<method name="FailFast(System.String,System.Exception)" size="8" />
						<method name="get_IsRunningOnWindows()" size="9" />
						<method name="get_CurrentManagedThreadId()" size="11" />
						<method name="GetResourceString(System.String,System.Object[])" size="13" />
						<method name="GetStackTrace(System.Exception,System.Boolean)" size="28" />
						<method name="get_NewLine()" size="29" />
						<method name="internalGetEnvironmentVariable(System.String)" size="43" />
						<method name="GetResourceStringEncodingName(System.Int32)" size="168" />
					</type>
					<type name="Activator" full-name="System.Activator" size="351">
						<method name="CreateInstance(System.Type,System.Boolean)" size="9" />
						<method name="CreateInstance(System.Type,System.Object[])" size="16" />
						<method name="CreateInstance()" size="58" />
						<method name="CreateInstance(System.Type,System.Boolean,System.Boolean)" size="72" />
						<method name="CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" size="196" />
					</type>
					<type name="UInt32" full-name="System.UInt32" size="358">
						<method name="GetHashCode()" size="3" />
						<method name="Equals(System.UInt32)" size="6" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="13" />
						<method name="ToString()" size="15" />
						<method name="CompareTo(System.UInt32)" size="16" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="CompareTo(System.Object)" size="47" />
					</type>
					<type name="RuntimeMethodHandle" full-name="System.RuntimeMethodHandle" size="365">
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.IntPtr)" size="8" />
						<method name="GetHashCode()" size="12" />
						<method name="IsNullHandle()" size="17" />
						<method name="Equals(System.Object)" size="60" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="81" />
						<method name="ConstructInstantiation(System.Reflection.RuntimeMethodInfo,System.TypeNameFormatFlags)" size="89" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="91" />
					</type>
					<type name="Int64" full-name="System.Int64" size="366">
						<method name="GetTypeCode()" size="3" />
						<method name="Equals(System.Int64)" size="6" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="GetHashCode()" size="11" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="13" />
						<method name="ToString()" size="15" />
						<method name="CompareTo(System.Int64)" size="16" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="CompareTo(System.Object)" size="47" />
					</type>
					<type name="Byte" full-name="System.Byte" size="371">
						<method name="GetTypeCode()" size="2" />
						<method name="GetHashCode()" size="3" />
						<method name="CompareTo(System.Byte)" size="5" />
						<method name="Equals(System.Byte)" size="6" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="13" />
						<method name="ToString()" size="15" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="CompareTo(System.Object)" size="34" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="52" />
					</type>
					<type name="UInt16" full-name="System.UInt16" size="381">
						<method name="GetTypeCode()" size="2" />
						<method name="GetHashCode()" size="3" />
						<method name="CompareTo(System.UInt16)" size="5" />
						<method name="Equals(System.UInt16)" size="6" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="13" />
						<method name="ToString()" size="15" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="CompareTo(System.Object)" size="34" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="48" />
					</type>
					<type name="CultureAwareComparer" full-name="System.CultureAwareComparer" size="405">
						<method name=".ctor(System.Globalization.CultureInfo,System.Globalization.CompareOptions)" size="14" />
						<method name="GetHashCode()" size="25" />
						<method name="GetHashCode(System.String)" size="33" />
						<method name="Compare(System.String,System.String)" size="36" />
						<method name="Equals(System.String,System.String)" size="37" />
						<method name="Equals(System.Object)" size="44" />
						<method name=".ctor(System.Globalization.CompareInfo,System.Globalization.CompareOptions)" size="46" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="62" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="108" />
					</type>
					<type name="Int32" full-name="System.Int32" size="414">
						<method name="GetHashCode()" size="3" />
						<method name="Equals(System.Int32)" size="6" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="13" />
						<method name="TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;)" size="14" />
						<method name="ToString()" size="15" />
						<method name="CompareTo(System.Int32)" size="16" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="TryParse(System.String,System.Int32&amp;)" size="27" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="CompareTo(System.Object)" size="47" />
					</type>
					<type name="TypedReference" full-name="System.TypedReference" size="428">
						<method name="SetTypedReference(System.TypedReference,System.Object)" size="11" />
						<method name="Equals(System.Object)" size="16" />
						<method name="get_IsNull()" size="37" />
						<method name="GetHashCode()" size="39" />
						<method name="MakeTypedReference(System.Object,System.Reflection.FieldInfo[])" size="325" />
					</type>
					<type name="BitConverter" full-name="System.BitConverter" size="429">
						<type name="&lt;&gt;c" full-name="System.BitConverter/&lt;&gt;c" size="209">
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;ToString&gt;b__38_0(System.Span`1&lt;System.Char&gt;,System.ValueTuple`3&lt;System.Byte[],System.Int32,System.Int32&gt;)" size="191" />
						</type>
						<method name="DoubleToInt64Bits(System.Double)" size="5" />
						<method name="ToString(System.Byte[])" size="21" />
						<method name=".cctor()" size="22" />
						<method name="ToString(System.Byte[],System.Int32,System.Int32)" size="167" />
					</type>
					<type name="BadImageFormatException" full-name="System.BadImageFormatException" size="442">
						<method name="get_Message()" size="13" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="23" />
						<method name=".ctor(System.String,System.String)" size="26" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="43" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="63" />
						<method name="SetMessageField()" size="65" />
						<method name="ToString()" size="190" />
					</type>
					<type name="TypeLoadException" full-name="System.TypeLoadException" size="470">
						<method name=".ctor(System.String,System.String)" size="11" />
						<method name="get_Message()" size="13" />
						<method name=".ctor(System.String)" size="19" />
						<method name=".ctor()" size="28" />
						<method name=".ctor(System.String,System.String,System.String,System.Int32)" size="54" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="91" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="121" />
						<method name="SetMessageField()" size="133" />
					</type>
					<type name="Marvin" full-name="System.Marvin" size="488">
						<method name="get_DefaultSeed()" size="6" />
						<method name="GenerateSeed()" size="7" />
						<method name=".cctor()" size="11" />
						<method name="_rotl(System.UInt32,System.Int32)" size="17" />
						<method name="ComputeHash32(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.UInt64)" size="20" />
						<method name="Block(System.UInt32&amp;,System.UInt32&amp;)" size="65" />
						<method name="ComputeHash32(System.Byte&amp;,System.Int32,System.UInt64)" size="362" />
					</type>
					<type name="Tuple`3" full-name="System.Tuple`3" size="515">
						<method name="get_Item1()" size="7" />
						<method name="GetHashCode()" size="12" />
						<method name="Equals(System.Object)" size="13" />
						<method name="ToString()" size="23" />
						<method name=".ctor(T1,T2,T3)" size="28" />
						<method name="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" size="57" />
						<method name="System.ITupleInternal.ToString(System.Text.StringBuilder)" size="94" />
						<method name="System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" size="108" />
						<method name="System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" size="146" />
					</type>
					<type name="MulticastDelegate" full-name="System.MulticastDelegate" size="517">
						<method name="GetHashCode()" size="7" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name="GetInvocationList()" size="36" />
						<method name="GetMethodImpl()" size="38" />
						<method name="Equals(System.Object)" size="130" />
						<method name="CombineImpl(System.Delegate)" size="297" />
					</type>
					<type name="SByte" full-name="System.SByte" size="538">
						<method name="GetTypeCode()" size="2" />
						<method name="System.IConvertible.ToSByte(System.IFormatProvider)" size="3" />
						<method name="CompareTo(System.SByte)" size="5" />
						<method name="Equals(System.SByte)" size="6" />
						<method name="GetHashCode()" size="8" />
						<method name="ToString()" size="15" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="CompareTo(System.Object)" size="34" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="73" />
						<method name="ToString(System.String,System.IFormatProvider)" size="75" />
						<method name="Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="85" />
					</type>
					<type name="Boolean" full-name="System.Boolean" size="544">
						<method name="GetTypeCode()" size="2" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="3" />
						<method name="Equals(System.Boolean)" size="6" />
						<method name="ToString(System.IFormatProvider)" size="7" />
						<method name="GetHashCode()" size="8" />
						<method name="CompareTo(System.Boolean)" size="15" />
						<method name="ToString()" size="16" />
						<method name="Equals(System.Object)" size="21" />
						<method name="Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="23" />
						<method name="Parse(System.String)" size="26" />
						<method name="CompareTo(System.Object)" size="44" />
						<method name="TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean&amp;)" size="91" />
						<method name="TrimWhiteSpaceAndNull(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="106" />
					</type>
					<type name="Int16" full-name="System.Int16" size="551">
						<method name="GetTypeCode()" size="2" />
						<method name="System.IConvertible.ToInt16(System.IFormatProvider)" size="3" />
						<method name="CompareTo(System.Int16)" size="5" />
						<method name="Equals(System.Int16)" size="6" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="GetHashCode()" size="10" />
						<method name="ToString()" size="15" />
						<method name="Equals(System.Object)" size="21" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="26" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="CompareTo(System.Object)" size="34" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="73" />
						<method name="ToString(System.String,System.IFormatProvider)" size="75" />
						<method name="Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="91" />
					</type>
					<type name="ReadOnlySpan`1" full-name="System.ReadOnlySpan`1" size="599">
						<method name="get_Length()" size="7" />
						<method name="get_IsEmpty()" size="10" />
						<method name="Equals(System.Object)" size="11" />
						<method name=".ctor(T&amp;,System.Int32)" size="20" />
						<method name="get_Item(System.Int32)" size="35" />
						<method name=".ctor(T[])" size="43" />
						<method name="Slice(System.Int32)" size="48" />
						<method name="Slice(System.Int32,System.Int32)" size="52" />
						<method name=".ctor(System.Void*,System.Int32)" size="56" />
						<method name="TryCopyTo(System.Span`1&lt;T&gt;)" size="61" />
						<method name="CopyTo(System.Span`1&lt;T&gt;)" size="62" />
						<method name=".ctor(T[],System.Int32,System.Int32)" size="77" />
						<method name="ToString()" size="99" />
					</type>
					<type name="Double" full-name="System.Double" size="647">
						<method name="GetTypeCode()" size="3" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="8" />
						<method name="ToString()" size="14" />
						<method name="ToString(System.IFormatProvider)" size="15" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="18" />
						<method name="Equals(System.Double)" size="25" />
						<method name="System.IConvertible.ToChar(System.IFormatProvider)" size="26" />
						<method name="IsFinite(System.Double)" size="28" />
						<method name="Parse(System.String)" size="32" />
						<method name="Parse(System.String,System.IFormatProvider)" size="33" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="Equals(System.Object)" size="42" />
						<method name="CompareTo(System.Double)" size="44" />
						<method name="GetHashCode()" size="54" />
						<method name="CompareTo(System.Object)" size="75" />
					</type>
					<type name="Random" full-name="System.Random" size="666">
						<method name="Next()" size="7" />
						<method name="GenerateGlobalSeed()" size="11" />
						<method name=".ctor()" size="12" />
						<method name=".cctor()" size="16" />
						<method name="Sample()" size="18" />
						<method name="Next(System.Int32)" size="41" />
						<method name="GetSampleForLargeRange()" size="49" />
						<method name="GenerateSeed()" size="68" />
						<method name="Next(System.Int32,System.Int32)" size="78" />
						<method name="InternalSample()" size="103" />
						<method name=".ctor(System.Int32)" size="263" />
					</type>
					<type name="DelegateSerializationHolder" full-name="System.DelegateSerializationHolder" size="669">
						<type name="DelegateEntry" full-name="System.DelegateSerializationHolder/DelegateEntry" size="361">
							<method name=".ctor(System.Delegate,System.String)" size="119" />
							<method name="DeserializeDelegate(System.Runtime.Serialization.SerializationInfo,System.Int32)" size="242" />
						</type>
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="6" />
						<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="7" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="130" />
						<method name="GetDelegateData(System.Delegate,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="165" />
					</type>
					<type name="__ComObject" full-name="System.__ComObject" size="680">
						<method name="&lt;Finalize&gt;b__6_0(System.Object)" size="7" />
						<method name="GetInterface(System.Type)" size="9" />
						<method name="get_IID_IUnknown()" size="11" />
						<method name=".ctor(System.Type)" size="14" />
						<method name="GetInterface(System.Type,System.Boolean)" size="15" />
						<method name="GetHashCode()" size="18" />
						<method name=".ctor()" size="19" />
						<method name="Initialize(System.IntPtr,Mono.Interop.ComInteropProxy)" size="21" />
						<method name="CheckIUnknown()" size="30" />
						<method name="get_IUnknown()" size="36" />
						<method name="Initialize(System.Type)" size="38" />
						<method name="get_IDispatch()" size="41" />
						<method name=".ctor(System.IntPtr,Mono.Interop.ComInteropProxy)" size="45" />
						<method name="InitializeApartmentDetails()" size="68" />
						<method name="Finalize()" size="75" />
						<method name="GetCLSID(System.Type)" size="86" />
						<method name="CreateIUnknown(System.Type)" size="95" />
					</type>
					<type name="RuntimeTypeHandle" full-name="System.RuntimeTypeHandle" size="682">
						<method name="IsEquivalentTo(System.RuntimeType,System.RuntimeType)" size="2" />
						<method name="get_Value()" size="7" />
						<method name=".ctor(System.IntPtr)" size="8" />
						<method name="IsByRef(System.RuntimeType)" size="11" />
						<method name="GetHashCode()" size="12" />
						<method name="IsInterface(System.RuntimeType)" size="14" />
						<method name="IsContextful(System.RuntimeType)" size="17" />
						<method name=".ctor(System.RuntimeType)" size="18" />
						<method name="IsArray(System.RuntimeType)" size="20" />
						<method name="IsSubclassOf(System.RuntimeType,System.RuntimeType)" size="28" />
						<method name="IsPrimitive(System.RuntimeType)" size="29" />
						<method name="HasElementType(System.RuntimeType)" size="30" />
						<method name="Equals(System.Object)" size="60" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="86" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="91" />
						<method name="GetTypeByName(System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.StackCrawlMark&amp;,System.Boolean)" size="193" />
					</type>
					<type name="ValueTuple`2" full-name="System.ValueTuple`2" size="720">
						<method name="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" size="8" />
						<method name=".ctor(T1,T2)" size="15" />
						<method name="Equals(System.Object)" size="23" />
						<method name="GetHashCodeCore(System.Collections.IEqualityComparer)" size="40" />
						<method name="Equals(System.ValueTuple`2&lt;T1,T2&gt;)" size="49" />
						<method name="CompareTo(System.ValueTuple`2&lt;T1,T2&gt;)" size="51" />
						<method name="System.IComparable.CompareTo(System.Object)" size="68" />
						<method name="System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" size="81" />
						<method name="GetHashCode()" size="112" />
						<method name="System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" size="125" />
						<method name="ToString()" size="148" />
					</type>
					<type name="Attribute" full-name="System.Attribute" size="744">
						<method name=".ctor()" size="7" />
						<method name="InternalIsDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)" size="9" />
						<method name="InternalGetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)" size="14" />
						<method name="GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" size="44" />
						<method name="GetHashCode()" size="89" />
						<method name="Equals(System.Object)" size="110" />
						<method name="AreFieldValuesEqual(System.Object,System.Object)" size="135" />
						<method name="IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" size="145" />
						<method name="GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" size="150" />
					</type>
					<type name="Span`1" full-name="System.Span`1" size="766">
						<method name="get_Length()" size="7" />
						<method name="Equals(System.Object)" size="11" />
						<method name=".ctor(T&amp;,System.Int32)" size="20" />
						<method name="op_Implicit(System.Span`1&lt;T&gt;)" size="26" />
						<method name="get_Item(System.Int32)" size="35" />
						<method name="Slice(System.Int32)" size="48" />
						<method name="Slice(System.Int32,System.Int32)" size="52" />
						<method name=".ctor(System.Void*,System.Int32)" size="56" />
						<method name="TryCopyTo(System.Span`1&lt;T&gt;)" size="61" />
						<method name="CopyTo(System.Span`1&lt;T&gt;)" size="62" />
						<method name="ToArray()" size="63" />
						<method name=".ctor(T[])" size="87" />
						<method name="ToString()" size="99" />
						<method name=".ctor(T[],System.Int32,System.Int32)" size="121" />
					</type>
					<type name="AggregateException" full-name="System.AggregateException" size="784">
						<method name=".ctor(System.String,System.Exception[])" size="9" />
						<method name=".ctor(System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" size="13" />
						<method name=".ctor()" size="28" />
						<method name=".ctor(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Exception&gt;)" size="30" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="61" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="76" />
						<method name=".ctor(System.String,System.Collections.Generic.IList`1&lt;System.Exception&gt;)" size="108" />
						<method name=".ctor(System.String,System.Collections.Generic.IList`1&lt;System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;)" size="132" />
						<method name="ToString()" size="133" />
						<method name="get_Message()" size="138" />
					</type>
					<type name="AppDomain" full-name="System.AppDomain" size="785">
						<method name="IsAppXModel()" size="2" />
						<method name="get_CurrentDomain()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="IsFinalizingForUnload()" size="12" />
						<method name="Load(System.String)" size="14" />
						<method name="DoDomainUnload()" size="22" />
						<method name="DoTypeBuilderResolve(System.Reflection.Emit.TypeBuilder)" size="23" />
						<method name="DoAssemblyLoad(System.Reflection.Assembly)" size="28" />
						<method name="GetProcessGuid()" size="42" />
						<method name="GetMarshalledDomainObjRef()" size="45" />
						<method name="Load(System.String,System.Security.Policy.Evidence,System.Boolean,System.Threading.StackCrawlMark&amp;)" size="62" />
						<method name="InvokeInDomainByID(System.Int32,System.Reflection.MethodInfo,System.Object,System.Object[])" size="64" />
						<method name="DoResourceResolve(System.String,System.Reflection.Assembly)" size="71" />
						<method name="ProcessMessageInDomain(System.Byte[],System.Runtime.Remoting.Messaging.CADMethodCallMessage,System.Byte[]&amp;,System.Runtime.Remoting.Messaging.CADMethodReturnMessage&amp;)" size="77" />
						<method name="DoTypeResolve(System.String)" size="128" />
						<method name="DoAssemblyResolve(System.String,System.Reflection.Assembly,System.Boolean)" size="167" />
					</type>
					<type name="DateTimeOffset" full-name="System.DateTimeOffset" size="830">
						<method name="get_UtcDateTime()" size="13" />
						<method name="get_Offset()" size="14" />
						<method name="GetHashCode()" size="15" />
						<method name="ToString()" size="20" />
						<method name="Equals(System.DateTimeOffset)" size="22" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="23" />
						<method name="get_ClockDateTime()" size="32" />
						<method name=".ctor(System.Int64,System.TimeSpan)" size="34" />
						<method name="CompareTo(System.DateTimeOffset)" size="39" />
						<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="46" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="49" />
						<method name="ValidateDate(System.DateTime,System.TimeSpan)" size="57" />
						<method name=".cctor()" size="66" />
						<method name="System.IComparable.CompareTo(System.Object)" size="70" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="79" />
						<method name="ValidateOffset(System.TimeSpan)" size="90" />
						<method name="FromUnixTimeSeconds(System.Int64)" size="102" />
					</type>
					<type name="Char" full-name="System.Char" size="864">
						<method name="GetTypeCode()" size="2" />
						<method name="System.IConvertible.ToChar(System.IFormatProvider)" size="3" />
						<method name="CompareTo(System.Char)" size="5" />
						<method name="Equals(System.Char)" size="6" />
						<method name="ToString(System.Char)" size="7" />
						<method name="GetLatin1UnicodeCategory(System.Char)" size="8" />
						<method name="IsAscii(System.Char)" size="9" />
						<method name="IsLatin1(System.Char)" size="12" />
						<method name="System.IConvertible.ToType(System.Type,System.IFormatProvider)" size="15" />
						<method name="ToUpperInvariant(System.Char)" size="17" />
						<method name="Equals(System.Object)" size="21" />
						<method name="IsWhiteSpace(System.Char)" size="22" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="26" />
						<method name=".cctor()" size="27" />
						<method name="IsWhiteSpaceLatin1(System.Char)" size="31" />
						<method name="CompareTo(System.Object)" size="34" />
						<method name="Parse(System.String)" size="42" />
						<method name="IsSurrogate(System.String,System.Int32)" size="47" />
						<method name="IsHighSurrogate(System.String,System.Int32)" size="51" />
						<method name="IsLetter(System.Char)" size="63" />
						<method name="ConvertToUtf32(System.Char,System.Char)" size="76" />
					</type>
					<type name="ValueTuple`3" full-name="System.ValueTuple`3" size="977">
						<method name="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" size="8" />
						<method name=".ctor(T1,T2,T3)" size="22" />
						<method name="Equals(System.Object)" size="23" />
						<method name="GetHashCodeCore(System.Collections.IEqualityComparer)" size="57" />
						<method name="System.IComparable.CompareTo(System.Object)" size="68" />
						<method name="Equals(System.ValueTuple`3&lt;T1,T2,T3&gt;)" size="73" />
						<method name="CompareTo(System.ValueTuple`3&lt;T1,T2,T3&gt;)" size="79" />
						<method name="System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" size="111" />
						<method name="System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" size="159" />
						<method name="GetHashCode()" size="165" />
						<method name="ToString()" size="212" />
					</type>
					<type name="MemoryExtensions" full-name="System.MemoryExtensions" size="1052">
						<method name="Trim(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="12" />
						<method name="AsSpan(System.String)" size="31" />
						<method name="Contains(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Char)" size="34" />
						<method name="EqualsOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="37" />
						<method name="EqualsOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="40" />
						<method name="ToUpperInvariant(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Span`1&lt;System.Char&gt;)" size="43" />
						<method name="TrimEnd(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="48" />
						<method name="AsSpan(System.String,System.Int32)" size="65" />
						<method name="AsSpan(System.String,System.Int32,System.Int32)" size="72" />
						<method name="SequenceEqual(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" size="108" />
						<method name="IndexOf(System.ReadOnlySpan`1&lt;T&gt;,T)" size="138" />
						<method name="IsTypeComparableAsBytes(System.UInt64&amp;)" size="273" />
					</type>
					<type name="Buffer" full-name="System.Buffer" size="1065">
						<method name="ZeroMemory(System.Byte*,System.Int64)" size="20" />
						<method name="ByteLength(System.Array)" size="36" />
						<method name="MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)" size="74" />
						<method name="memcpy2(System.Byte*,System.Byte*,System.Int32)" size="95" />
						<method name="Memmove(T&amp;,T&amp;,System.UInt64)" size="105" />
						<method name="memcpy4(System.Byte*,System.Byte*,System.Int32)" size="116" />
						<method name="memcpy1(System.Byte*,System.Byte*,System.Int32)" size="123" />
						<method name="BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" size="138" />
						<method name="IndexOfByte(System.Byte*,System.Byte,System.Int32,System.Int32)" size="184" />
					</type>
					<type name="TimeSpan" full-name="System.TimeSpan" size="1111">
						<method name="get_Ticks()" size="7" />
						<method name=".ctor(System.Int64)" size="8" />
						<method name="op_Subtraction(System.TimeSpan,System.TimeSpan)" size="9" />
						<method name="FromDays(System.Double)" size="12" />
						<method name="ToString()" size="14" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32)" size="15" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="17" />
						<method name="get_TotalHours()" size="18" />
						<method name="get_Minutes()" size="19" />
						<method name="get_Hours()" size="22" />
						<method name="Equals(System.Object)" size="30" />
						<method name="CompareTo(System.TimeSpan)" size="31" />
						<method name="TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan&amp;)" size="36" />
						<method name="op_UnaryNegation(System.TimeSpan)" size="42" />
						<method name="Negate()" size="45" />
						<method name=".cctor()" size="51" />
						<method name="CompareTo(System.Object)" size="60" />
						<method name="get_TotalMilliseconds()" size="64" />
						<method name="TimeToTicks(System.Int32,System.Int32,System.Int32)" size="65" />
						<method name="Add(System.TimeSpan)" size="67" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" size="97" />
						<method name="Interval(System.Double,System.Int32)" size="107" />
					</type>
					<type name="Version" full-name="System.Version" size="1148">
						<method name="Clone()" size="7" />
						<method name="System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="9" />
						<method name="op_Inequality(System.Version,System.Version)" size="11" />
						<method name="Equals(System.Object)" size="13" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="15" />
						<method name="op_Equality(System.Version,System.Version)" size="16" />
						<method name="get_DefaultFormatFieldCount()" size="24" />
						<method name=".ctor()" size="35" />
						<method name="CompareTo(System.Object)" size="40" />
						<method name="ToString(System.Int32)" size="41" />
						<method name="GetHashCode()" size="60" />
						<method name="Equals(System.Version)" size="68" />
						<method name=".ctor(System.Version)" size="69" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32,System.Int32&amp;)" size="103" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32,System.Int32)" size="131" />
						<method name="CompareTo(System.Version)" size="147" />
						<method name="ToCachedStringBuilder(System.Int32)" size="318" />
					</type>
					<type name="ParseNumbers" full-name="System.ParseNumbers" size="1407">
						<method name="ThrowOverflowInt32Exception()" size="11" />
						<method name="EatWhiteSpace(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;)" size="39" />
						<method name="IsDigit(System.Char,System.Int32,System.Int32&amp;)" size="70" />
						<method name="GrabInts(System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean)" size="205" />
						<method name="GrabLongs(System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean)" size="236" />
						<method name="StringToLong(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Int32,System.Int32&amp;)" size="380" />
						<method name="StringToInt(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Int32,System.Int32&amp;)" size="433" />
					</type>
					<type name="ThrowHelper" full-name="System.ThrowHelper" size="1460">
						<method name="ThrowArrayTypeMismatchException()" size="6" />
						<method name="ThrowArgumentNullException(System.ExceptionArgument)" size="7" />
						<method name="CreateArgumentException_DestinationTooShort()" size="11" />
						<method name="GetArgumentOutOfRangeException(System.ExceptionArgument,System.String)" size="13" />
						<method name="ThrowArgumentException(System.ExceptionResource)" size="17" />
						<method name="CreateArgumentNullException(System.ExceptionArgument)" size="19" />
						<method name="ThrowArgumentException(System.ExceptionResource,System.ExceptionArgument)" size="23" />
						<method name="IfNullAndNullsAreIllegalThenThrow(System.Object,System.ExceptionArgument)" size="26" />
						<method name="ThrowWrongKeyTypeArgumentException(System.Object,System.Type)" size="35" />
						<method name="ThrowArgumentOutOfRangeException(System.ExceptionArgument,System.ExceptionResource)" size="47" />
						<method name="GetArgumentName(System.ExceptionArgument)" size="333" />
						<method name="GetResourceName(System.ExceptionResource)" size="663" />
					</type>
					<type name="UnitySerializationHolder" full-name="System.UnitySerializationHolder" size="1476">
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="16" />
						<method name="ThrowInsufficientInformation(System.String)" size="26" />
						<method name="GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.Int32)" size="67" />
						<method name="GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.Int32,System.String,System.Reflection.RuntimeAssembly)" size="87" />
						<method name="MakeElementTypes(System.Type)" size="117" />
						<method name="AddElementTypes(System.Runtime.Serialization.SerializationInfo,System.RuntimeType)" size="136" />
						<method name="GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.RuntimeType)" size="211" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="278" />
						<method name="GetRealObject(System.Runtime.Serialization.StreamingContext)" size="538" />
					</type>
					<type name="ValueTuple`5" full-name="System.ValueTuple`5" size="1502">
						<method name="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" size="8" />
						<method name="Equals(System.Object)" size="23" />
						<method name=".ctor(T1,T2,T3,T4,T5)" size="38" />
						<method name="System.IComparable.CompareTo(System.Object)" size="68" />
						<method name="GetHashCodeCore(System.Collections.IEqualityComparer)" size="91" />
						<method name="Equals(System.ValueTuple`5&lt;T1,T2,T3,T4,T5&gt;)" size="121" />
						<method name="CompareTo(System.ValueTuple`5&lt;T1,T2,T3,T4,T5&gt;)" size="135" />
						<method name="System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" size="171" />
						<method name="System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" size="227" />
						<method name="GetHashCode()" size="274" />
						<method name="ToString()" size="346" />
					</type>
					<type name="Exception" full-name="System.Exception" size="1516">
						<type name="ExceptionMessageKind" full-name="System.Exception/ExceptionMessageKind" size="0" />
						<method name="StripFileInfo(System.String,System.Boolean)" size="2" />
						<method name="get_InnerException()" size="7" />
						<method name="get_StackTrace()" size="8" />
						<method name="ToString()" size="9" />
						<method name=".cctor()" size="11" />
						<method name=".ctor()" size="13" />
						<method name=".ctor(System.String)" size="20" />
						<method name=".ctor(System.String,System.Exception)" size="27" />
						<method name="GetClassName()" size="32" />
						<method name="OnDeserialized(System.Runtime.Serialization.StreamingContext)" size="40" />
						<method name="Init()" size="44" />
						<method name="GetMessageFromNativeResources(System.Exception/ExceptionMessageKind)" size="46" />
						<method name="get_Message()" size="61" />
						<method name="GetStackTrace(System.Boolean)" size="72" />
						<method name="FixRemotingException()" size="78" />
						<method name="get_Source()" size="81" />
						<method name="ToString(System.Boolean,System.Boolean)" size="155" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="329" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="395" />
					</type>
					<type name="__DTString" full-name="System.__DTString" size="1690">
						<method name="get_Length()" size="12" />
						<method name="AtEnd()" size="18" />
						<method name="GetChar()" size="19" />
						<method name="GetDigit()" size="22" />
						<method name=".cctor()" size="25" />
						<method name="GetNextDigit()" size="51" />
						<method name="GetNext()" size="56" />
						<method name="ConsumeSubString(System.DTSubString)" size="58" />
						<method name="SkipWhiteSpaces()" size="61" />
						<method name="Match(System.Char)" size="73" />
						<method name="GetSeparatorToken(System.Globalization.DateTimeFormatInfo,System.Int32&amp;,System.Char&amp;)" size="77" />
						<method name=".ctor(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo)" size="79" />
						<method name="SkipWhiteSpaceCurrent()" size="97" />
						<method name="GetSubString()" size="207" />
						<method name="GetRegularToken(System.TokenType&amp;,System.Int32&amp;,System.Globalization.DateTimeFormatInfo)" size="376" />
						<method name="MatchSpecifiedWords(System.String,System.Boolean,System.Int32&amp;)" size="403" />
					</type>
					<type name="Delegate" full-name="System.Delegate" size="1901">
						<method name="get_Method()" size="7" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="9" />
						<method name="CreateDelegate(System.Type,System.Object,System.String)" size="10" />
						<method name="CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" size="11" />
						<method name="return_type_match(System.Type,System.Type)" size="32" />
						<method name="Combine(System.Delegate[])" size="37" />
						<method name="GetHashCode()" size="48" />
						<method name="CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" size="54" />
						<method name="CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" size="55" />
						<method name="arg_type_match_this(System.Type,System.Type,System.Boolean)" size="71" />
						<method name="Combine(System.Delegate,System.Delegate)" size="75" />
						<method name="arg_type_match(System.Type,System.Type)" size="85" />
						<method name="GetMethodImpl()" size="95" />
						<method name="Equals(System.Object)" size="203" />
						<method name="GetCandidateMethod(System.Type,System.Type,System.String,System.Reflection.BindingFlags,System.Boolean,System.Boolean)" size="260" />
						<method name="CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean,System.Boolean)" size="791" />
					</type>
					<type name="MonoCustomAttrs" full-name="System.MonoCustomAttrs" size="2163">
						<type name="AttributeInfo" full-name="System.MonoCustomAttrs/AttributeInfo" size="35">
							<method name="get_Usage()" size="7" />
							<method name=".ctor(System.AttributeUsageAttribute,System.Int32)" size="21" />
						</type>
						<method name=".cctor()" size="16" />
						<method name="GetCustomAttributes(System.Reflection.ICustomAttributeProvider,System.Boolean)" size="54" />
						<method name="RetrieveAttributeUsage(System.Type)" size="57" />
						<method name="GetCustomAttributesBase(System.Reflection.ICustomAttributeProvider,System.Type,System.Boolean)" size="83" />
						<method name="GetPseudoCustomAttributes(System.Type)" size="93" />
						<method name="IsUserCattrProvider(System.Object)" size="97" />
						<method name="RetrieveAttributeUsageNoCache(System.Type)" size="112" />
						<method name="IsDefined(System.Reflection.ICustomAttributeProvider,System.Type,System.Boolean)" size="131" />
						<method name="GetPseudoCustomAttributes(System.Reflection.ICustomAttributeProvider,System.Type)" size="156" />
						<method name="GetBaseEventDefinition(System.Reflection.RuntimeEventInfo)" size="158" />
						<method name="GetBasePropertyDefinition(System.Reflection.RuntimePropertyInfo)" size="187" />
						<method name="GetBase(System.Reflection.ICustomAttributeProvider)" size="198" />
						<method name="GetCustomAttributes(System.Reflection.ICustomAttributeProvider,System.Type,System.Boolean)" size="786" />
					</type>
					<type name="TypeSpec" full-name="System.TypeSpec" size="2579">
						<type name="DisplayNameFormat" full-name="System.TypeSpec/DisplayNameFormat" size="0" />
						<method name="ParsedTypeIdentifier(System.String)" size="7" />
						<method name="get_HasModifiers()" size="10" />
						<method name="BoundCheck(System.Int32,System.String)" size="26" />
						<method name="get_DisplayFullName()" size="28" />
						<method name="AddModifier(System.ModifierSpec)" size="32" />
						<method name="SkipSpace(System.String,System.Int32&amp;)" size="36" />
						<method name="Parse(System.String)" size="52" />
						<method name="AddName(System.String)" size="58" />
						<method name="UnescapeInternalName(System.String)" size="78" />
						<method name="GetModifierString(System.Text.StringBuilder)" size="80" />
						<method name="GetDisplayFullName(System.TypeSpec/DisplayNameFormat)" size="320" />
						<method name="Resolve(System.Func`2&lt;System.Reflection.AssemblyName,System.Reflection.Assembly&gt;,System.Func`4&lt;System.Reflection.Assembly,System.String,System.Boolean,System.Type&gt;,System.Boolean,System.Boolean,System.Threading.StackCrawlMark&amp;)" size="544" />
						<method name="Parse(System.String,System.Int32&amp;,System.Boolean,System.Boolean)" size="1301" />
					</type>
					<type name="SpanHelpers" full-name="System.SpanHelpers" size="3045">
						<method name="LocateFirstFoundChar(System.UInt64)" size="21" />
						<method name="LocateFirstFoundChar(System.Numerics.Vector`1&lt;System.UInt16&gt;)" size="49" />
						<method name="LocateLastFoundChar(System.Numerics.Vector`1&lt;System.UInt16&gt;)" size="51" />
						<method name="SequenceEqual(System.Byte&amp;,System.Byte&amp;,System.UInt64)" size="192" />
						<method name="IndexOf(System.Char&amp;,System.Char,System.Int32)" size="303" />
						<method name="LastIndexOf(System.Char&amp;,System.Char,System.Int32)" size="320" />
						<method name="SequenceCompareTo(System.Char&amp;,System.Int32,System.Char&amp;,System.Int32)" size="376" />
						<method name="IndexOf(System.Byte&amp;,System.Byte,System.Int32)" size="439" />
						<method name="IndexOf(T&amp;,T,System.Int32)" size="620" />
						<method name="SequenceEqual(T&amp;,T&amp;,System.Int32)" size="653" />
					</type>
					<type name="Type" full-name="System.Type" size="3075">
						<method name="get_DeclaringType()" size="2" />
						<method name="get_MemberType()" size="3" />
						<method name="op_Equality(System.Type,System.Type)" size="5" />
						<method name="get_IsConstructedGenericType()" size="6" />
						<method name=".ctor()" size="7" />
						<method name="IsEquivalentTo(System.Type)" size="8" />
						<method name="GetMethods()" size="9" />
						<method name="GetMember(System.String)" size="10" />
						<method name="GetArrayRank()" size="11" />
						<method name="GetEnumRawConstantValues()" size="12" />
						<method name="get_IsNested()" size="13" />
						<method name="get_IsExplicitLayout()" size="14" />
						<method name="GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" size="15" />
						<method name="get_IsAbstract()" size="16" />
						<method name="IsContextfulImpl()" size="17" />
						<method name="GetTypeCode(System.Type)" size="18" />
						<method name="get_IsVariableBoundArray()" size="20" />
						<method name="GetRootElementType()" size="21" />
						<method name="get_IsGenericMethodParameter()" size="23" />
						<method name="GetGenericParameterConstraints()" size="25" />
						<method name="Equals(System.Type)" size="26" />
						<method name="GetMethod(System.String,System.Reflection.BindingFlags)" size="27" />
						<method name="get_GenericTypeArguments()" size="29" />
						<method name="GetTypeFromHandle(System.RuntimeTypeHandle)" size="34" />
						<method name="GetEnumNames()" size="36" />
						<method name="get_IsInterface()" size="37" />
						<method name="IsSubclassOf(System.Type)" size="42" />
						<method name="GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" size="45" />
						<method name="GetProperty(System.String,System.Type)" size="48" />
						<method name="BinarySearch(System.Array,System.Object)" size="59" />
						<method name="GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="67" />
						<method name="get_ContainsGenericParameters()" size="75" />
						<method name=".cctor()" size="79" />
						<method name="ImplementInterface(System.Type)" size="81" />
						<method name="GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="83" />
						<method name="get_IsSerializable()" size="87" />
						<method name="GetEnumName(System.Object)" size="105" />
						<method name="IsAssignableFrom(System.Type)" size="118" />
						<method name="FilterNameImpl(System.Reflection.MemberInfo,System.Object)" size="133" />
						<method name="FilterNameIgnoreCaseImpl(System.Reflection.MemberInfo,System.Object)" size="148" />
						<method name="IsIntegerType(System.Type)" size="187" />
						<method name="GetEnumData(System.String[]&amp;,System.Array&amp;)" size="189" />
						<method name="FilterAttributeImpl(System.Reflection.MemberInfo,System.Object)" size="339" />
					</type>
					<type name="DateTime" full-name="System.DateTime" size="3331">
						<method name="GetTypeCode()" size="3" />
						<method name="get_Ticks()" size="7" />
						<method name=".ctor(System.UInt64)" size="8" />
						<method name="AddMilliseconds(System.Double)" size="9" />
						<method name="AddDays(System.Double)" size="13" />
						<method name="SpecifyKind(System.DateTime,System.DateTimeKind)" size="14" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32)" size="15" />
						<method name="Equals(System.DateTime)" size="16" />
						<method name="get_InternalTicks()" size="17" />
						<method name="IsAmbiguousDaylightSavingTime()" size="18" />
						<method name="get_Minute()" size="19" />
						<method name="op_Inequality(System.DateTime,System.DateTime)" size="20" />
						<method name="op_Subtraction(System.DateTime,System.DateTime)" size="21" />
						<method name="get_Hour()" size="22" />
						<method name="get_DayOfWeek()" size="24" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="26" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" size="27" />
						<method name="Parse(System.String,System.IFormatProvider)" size="29" />
						<method name="Compare(System.DateTime,System.DateTime)" size="30" />
						<method name="get_Date()" size="31" />
						<method name="Equals(System.Object)" size="33" />
						<method name=".ctor(System.Int64)" size="41" />
						<method name="CompareTo(System.Object)" size="42" />
						<method name="AddYears(System.Int32)" size="43" />
						<method name="TimeToTicks(System.Int32,System.Int32,System.Int32)" size="48" />
						<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="49" />
						<method name="FromBinaryRaw(System.Int64)" size="52" />
						<method name="IsLeapYear(System.Int32)" size="54" />
						<method name="DaysInMonth(System.Int32,System.Int32)" size="56" />
						<method name="AddTicks(System.Int64)" size="60" />
						<method name=".ctor(System.Int64,System.DateTimeKind,System.Boolean)" size="65" />
						<method name="op_Subtraction(System.DateTime,System.TimeSpan)" size="66" />
						<method name="op_Addition(System.DateTime,System.TimeSpan)" size="69" />
						<method name=".ctor(System.Int64,System.DateTimeKind)" size="71" />
						<method name="get_Now()" size="87" />
						<method name="Add(System.Double,System.Int32)" size="94" />
						<method name=".cctor()" size="100" />
						<method name="DateToTicks(System.Int32,System.Int32,System.Int32)" size="120" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" size="121" />
						<method name="AddMonths(System.Int32)" size="173" />
						<method name="TryCreate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime&amp;)" size="191" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="202" />
						<method name="GetDatePart(System.Int32&amp;,System.Int32&amp;,System.Int32&amp;)" size="206" />
						<method name="GetDatePart(System.Int32)" size="217" />
					</type>
					<type name="Enum" full-name="System.Enum" size="3476">
						<type name="ParseFailureKind" full-name="System.Enum/ParseFailureKind" size="0" />
						<type name="ValuesAndNames" full-name="System.Enum/ValuesAndNames" size="21">
							<method name=".ctor(System.UInt64[],System.String[])" size="21" />
						</type>
						<type name="EnumResult" full-name="System.Enum/EnumResult" size="219">
							<method name="SetFailure(System.Exception)" size="15" />
							<method name="Init(System.Boolean)" size="20" />
							<method name="SetFailure(System.Enum/ParseFailureKind,System.String)" size="30" />
							<method name="SetFailure(System.Enum/ParseFailureKind,System.String,System.Object)" size="37" />
							<method name="GetEnumParseException()" size="117" />
						</type>
						<method name="GetValue()" size="7" />
						<method name="Equals(System.Object)" size="8" />
						<method name="System.IConvertible.ToType(System.Type,System.IFormatProvider)" size="9" />
						<method name="InternalGetValues(System.RuntimeType)" size="13" />
						<method name="System.IConvertible.ToBoolean(System.IFormatProvider)" size="17" />
						<method name="ToString()" size="23" />
						<method name="GetUnderlyingType(System.Type)" size="27" />
						<method name="GetName(System.Type,System.Object)" size="28" />
						<method name="System.IConvertible.ToDateTime(System.IFormatProvider)" size="38" />
						<method name="Parse(System.Type,System.String,System.Boolean)" size="43" />
						<method name="InternalFormat(System.RuntimeType,System.Object)" size="47" />
						<method name="GetCachedValuesAndNames(System.RuntimeType,System.Boolean)" size="71" />
						<method name="ToObject(System.Type,System.Int64)" size="92" />
						<method name="ToObject(System.Type,System.SByte)" size="93" />
						<method name="CompareTo(System.Object)" size="97" />
						<method name="ToObject(System.Type,System.Boolean)" size="99" />
						<method name="ToUInt64(System.Object)" size="103" />
						<method name="ToString(System.String)" size="144" />
						<method name="InternalFlagsFormat(System.RuntimeType,System.Object)" size="154" />
						<method name="ToObject(System.Type,System.Object)" size="225" />
						<method name="GetTypeCode()" size="232" />
						<method name="InternalFormattedHexString(System.Object)" size="300" />
						<method name="TryParseEnum(System.Type,System.String,System.Boolean,System.Enum/EnumResult&amp;)" size="453" />
					</type>
					<type name="Array" full-name="System.Array" size="3510">
						<type name="RawData" full-name="System.Array/RawData" size="0" />
						<type name="EmptyInternalEnumerator`1" full-name="System.Array/EmptyInternalEnumerator`1" size="44">
							<method name="Dispose()" size="1" />
							<method name="MoveNext()" size="2" />
							<method name=".ctor()" size="7" />
							<method name="get_Current()" size="11" />
							<method name="System.Collections.IEnumerator.get_Current()" size="12" />
						</type>
						<type name="InternalEnumerator`1" full-name="System.Array/InternalEnumerator`1" size="164">
							<method name="Dispose()" size="1" />
							<method name="System.Collections.IEnumerator.get_Current()" size="12" />
							<method name=".ctor(System.Array)" size="16" />
							<method name="MoveNext()" size="62" />
							<method name="get_Current()" size="73" />
						</type>
						<type name="ArrayEnumerator" full-name="System.Array/ArrayEnumerator" size="190">
							<method name="Clone()" size="7" />
							<method name=".ctor(System.Array)" size="33" />
							<method name="MoveNext()" size="45" />
							<method name="get_Current()" size="105" />
						</type>
						<method name="InternalArray__ICollection_get_IsReadOnly()" size="2" />
						<method name="CreateArrayTypeMismatchException()" size="6" />
						<method name="System.Collections.ICollection.get_Count()" size="7" />
						<method name="CombineHashCodes(System.Int32,System.Int32)" size="8" />
						<method name="UnsafeCreateInstance(System.Type,System.Int32[],System.Int32[])" size="9" />
						<method name="System.Collections.IList.Add(System.Object)" size="11" />
						<method name="GetRawSzArrayData()" size="12" />
						<method name="System.Collections.IList.Contains(System.Object)" size="14" />
						<method name="IndexOfImpl(T[],T,System.Int32,System.Int32)" size="15" />
						<method name="GetUpperBound(System.Int32)" size="18" />
						<method name="CreateInstance(System.Type,System.Int32)" size="19" />
						<method name="InternalArray__ICollection_CopyTo(T[],System.Int32)" size="22" />
						<method name="Reverse(T[])" size="25" />
						<method name="InternalArray__IEnumerable_GetEnumerator()" size="26" />
						<method name="BinarySearch(T[],T)" size="27" />
						<method name="InternalArray__IReadOnlyList_get_Item(System.Int32)" size="31" />
						<method name="IndexOf(System.Array,System.Object)" size="35" />
						<method name="get_Length()" size="37" />
						<method name="CopyTo(System.Array,System.Int32)" size="45" />
						<method name="InternalArray__set_Item(System.Int32,T)" size="50" />
						<method name="Copy(System.Array,System.Array,System.Int32)" size="51" />
						<method name="CanAssignArrayElement(System.Type,System.Type)" size="71" />
						<method name="Resize(T[]&amp;,System.Int32)" size="73" />
						<method name="System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" size="74" />
						<method name="IndexOf(T[],T,System.Int32,System.Int32)" size="78" />
						<method name="System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" size="84" />
						<method name="BinarySearch(T[],System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" size="85" />
						<method name="Sort(T[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" size="87" />
						<method name="Clear(System.Array,System.Int32,System.Int32)" size="88" />
						<method name="InternalArray__ICollection_Contains(T)" size="91" />
						<method name="GetValue(System.Int32)" size="92" />
						<method name="SetValue(System.Object,System.Int32)" size="93" />
						<method name="System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" size="96" />
						<method name="Sort(TKey[],TValue[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;TKey&gt;)" size="114" />
						<method name="InternalArray__IndexOf(T)" size="115" />
						<method name="CreateInstance(System.Type,System.Int32[])" size="145" />
						<method name="Reverse(T[],System.Int32,System.Int32)" size="157" />
						<method name="IndexOf(System.Array,System.Object,System.Int32,System.Int32)" size="238" />
						<method name="CreateInstance(System.Type,System.Int32[],System.Int32[])" size="264" />
						<method name="Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" size="416" />
					</type>
					<type name="Decimal" full-name="System.Decimal" size="4621">
						<type name="DecCalc" full-name="System.Decimal/DecCalc" size="3038">
							<type name="RoundingMode" full-name="System.Decimal/DecCalc/RoundingMode" size="0" />
							<type name="PowerOvfl" full-name="System.Decimal/DecCalc/PowerOvfl" size="22">
								<method name=".ctor(System.UInt32,System.UInt32,System.UInt32)" size="22" />
							</type>
							<method name="UInt32x32To64(System.UInt32,System.UInt32)" size="6" />
							<method name="set_High(System.UInt32)" size="8" />
							<method name="GetExponent(System.Single)" size="9" />
							<method name="get_IsNegative()" size="10" />
							<method name="GetExponent(System.Double)" size="15" />
							<method name="get_Low64()" size="33" />
							<method name="set_Low64(System.UInt64)" size="35" />
							<method name="Div96ByConst(System.UInt64&amp;,System.UInt32&amp;,System.UInt32)" size="42" />
							<method name="VarR8FromDec(System.Decimal&amp;)" size="54" />
							<method name="DecDivMod1E9(System.Decimal/DecCalc&amp;)" size="94" />
							<method name="Unscale(System.UInt32&amp;,System.UInt64&amp;,System.Int32&amp;)" size="121" />
							<method name="VarDecCmp(System.Decimal&amp;,System.Decimal&amp;)" size="126" />
							<method name="UInt64x64To128(System.UInt64,System.UInt64,System.Decimal/DecCalc&amp;)" size="134" />
							<method name="GetHashCode(System.Decimal&amp;)" size="142" />
							<method name="VarDecCmpSub(System.Decimal&amp;,System.Decimal&amp;)" size="232" />
							<method name=".cctor()" size="294" />
							<method name="InternalRound(System.Decimal/DecCalc&amp;,System.UInt32,System.Decimal/DecCalc/RoundingMode)" size="515" />
							<method name="VarDecFromR4(System.Single,System.Decimal/DecCalc&amp;)" size="555" />
							<method name="VarDecFromR8(System.Double,System.Decimal/DecCalc&amp;)" size="567" />
						</type>
						<method name="GetTypeCode()" size="3" />
						<method name="get_High()" size="7" />
						<method name="ToDouble(System.Decimal)" size="8" />
						<method name="CompareTo(System.Decimal)" size="9" />
						<method name="get_IsNegative()" size="10" />
						<method name="get_Scale()" size="11" />
						<method name="DecDivMod1E9(System.Decimal&amp;)" size="12" />
						<method name=".ctor(System.Single)" size="13" />
						<method name="System.IConvertible.ToType(System.Type,System.IFormatProvider)" size="19" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="22" />
						<method name="ToString()" size="23" />
						<method name="ToString(System.IFormatProvider)" size="24" />
						<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="25" />
						<method name="System.IConvertible.ToChar(System.IFormatProvider)" size="26" />
						<method name=".ctor(System.UInt32)" size="29" />
						<method name="Parse(System.String,System.IFormatProvider)" size="30" />
						<method name="get_Low64()" size="33" />
						<method name=".ctor(System.UInt64)" size="34" />
						<method name="Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" size="35" />
						<method name="CompareTo(System.Object)" size="40" />
						<method name="ToByte(System.Decimal)" size="41" />
						<method name="ToUInt64(System.Decimal)" size="48" />
						<method name=".ctor(System.Int32)" size="50" />
						<method name="ToUInt32(System.Decimal)" size="55" />
						<method name=".ctor(System.Int64)" size="56" />
						<method name="ToInt64(System.Decimal)" size="60" />
						<method name="ToInt32(System.Decimal)" size="64" />
						<method name=".ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" size="77" />
						<method name="Round(System.Decimal&amp;,System.Int32,System.MidpointRounding)" size="90" />
					</type>
					<type name="DateTimeFormat" full-name="System.DateTimeFormat" size="4759">
						<method name="InvalidFormatForLocal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.DateTime)" size="1" />
						<method name="FormatDigits(System.Text.StringBuilder,System.Int32,System.Int32)" size="10" />
						<method name="Format(System.DateTime,System.String,System.IFormatProvider)" size="14" />
						<method name="TryFormat(System.DateTime,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="17" />
						<method name="FormatDayOfWeek(System.Int32,System.Int32,System.Globalization.DateTimeFormatInfo)" size="20" />
						<method name="ParseNextChar(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32)" size="26" />
						<method name="Append2DigitNumber(System.Text.StringBuilder,System.Int32)" size="31" />
						<method name="ParseRepeatPattern(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Char)" size="38" />
						<method name="WriteTwoDecimalDigits(System.UInt32,System.Span`1&lt;System.Char&gt;,System.Int32)" size="44" />
						<method name="WriteDigits(System.UInt64,System.Span`1&lt;System.Char&gt;)" size="66" />
						<method name="FormatDigits(System.Text.StringBuilder,System.Int32,System.Int32,System.Boolean)" size="98" />
						<method name="WriteFourDecimalDigits(System.UInt32,System.Span`1&lt;System.Char&gt;,System.Int32)" size="102" />
						<method name="FormatCustomizedRoundripTimeZone(System.DateTime,System.TimeSpan,System.Text.StringBuilder)" size="132" />
						<method name="ParseQuoteString(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Text.StringBuilder)" size="145" />
						<method name=".cctor()" size="146" />
						<method name="IsUseGenitiveForm(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Int32,System.Char)" size="148" />
						<method name="Format(System.DateTime,System.String,System.IFormatProvider,System.TimeSpan)" size="174" />
						<method name="FormatStringBuilder(System.DateTime,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.TimeSpan)" size="198" />
						<method name="FormatCustomizedTimeZone(System.DateTime,System.TimeSpan,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Boolean,System.Text.StringBuilder)" size="222" />
						<method name="ExpandPredefinedFormat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.DateTime&amp;,System.Globalization.DateTimeFormatInfo&amp;,System.TimeSpan&amp;)" size="358" />
						<method name="GetRealFormat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo)" size="360" />
						<method name="TryFormatR(System.DateTime,System.TimeSpan,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="374" />
						<method name="TryFormatO(System.DateTime,System.TimeSpan,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="396" />
						<method name="FormatCustomized(System.DateTime,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.TimeSpan,System.Text.StringBuilder)" size="1474" />
					</type>
					<type name="DefaultBinder" full-name="System.DefaultBinder" size="5036">
						<type name="Primitives" full-name="System.DefaultBinder/Primitives" size="0" />
						<type name="&lt;&gt;c" full-name="System.DefaultBinder/&lt;&gt;c" size="26">
							<method name=".ctor()" size="7" />
							<method name="&lt;SelectProperty&gt;b__2_0(System.Type)" size="8" />
							<method name=".cctor()" size="11" />
						</type>
						<type name="BinderState" full-name="System.DefaultBinder/BinderState" size="28">
							<method name=".ctor(System.Int32[],System.Int32,System.Boolean)" size="28" />
						</type>
						<method name=".ctor()" size="7" />
						<method name="CanChangePrimitive(System.Type,System.Type)" size="8" />
						<method name="ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" size="16" />
						<method name=".cctor()" size="24" />
						<method name="GetHierarchyDepth(System.Type)" size="26" />
						<method name="CanPrimitiveWiden(System.Type,System.Type)" size="32" />
						<method name="CanConvertPrimitiveObjectToType(System.Object,System.RuntimeType)" size="36" />
						<method name="ReorderParams(System.Int32[],System.Object[])" size="52" />
						<method name="FindMostSpecificProperty(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" size="59" />
						<method name="FindMostDerivedNewSlotMeth(System.Reflection.MethodBase[],System.Int32)" size="62" />
						<method name="CompareMethodSigAndName(System.Reflection.MethodBase,System.Reflection.MethodBase)" size="67" />
						<method name="FindMostSpecificMethod(System.Reflection.MethodBase,System.Int32[],System.Type,System.Reflection.MethodBase,System.Int32[],System.Type,System.Type[],System.Object[])" size="82" />
						<method name="ExactBinding(System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" size="128" />
						<method name="ExactPropertyBinding(System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" size="146" />
						<method name="CreateParamOrder(System.Int32[],System.Reflection.ParameterInfo[],System.String[])" size="155" />
						<method name="ReorderArgumentArray(System.Object[]&amp;,System.Object)" size="173" />
						<method name="FindMostSpecificType(System.Type,System.Type,System.Type)" size="224" />
						<method name="FindMostSpecific(System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Type[],System.Object[])" size="249" />
						<method name="CanConvertPrimitive(System.RuntimeType,System.RuntimeType)" size="300" />
						<method name="SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" size="476" />
						<method name="SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" size="580" />
						<method name="BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]&amp;,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object&amp;)" size="2013" />
					</type>
					<type name="Convert" full-name="System.Convert" size="5191">
						<method name="ToChar(System.Byte)" size="2" />
						<method name="ToInt64(System.Char)" size="3" />
						<method name="ToSingle(System.UInt32)" size="4" />
						<method name="ToBoolean(System.SByte)" size="5" />
						<method name="ToBoolean(System.Int64)" size="6" />
						<method name="ToSByte(System.Boolean)" size="7" />
						<method name="ToSByte(System.Single)" size="8" />
						<method name="ToSByte(System.String,System.IFormatProvider)" size="9" />
						<method name="ThrowCharOverflowException()" size="11" />
						<method name="ToBoolean(System.String,System.IFormatProvider)" size="12" />
						<method name="ToSByte(System.Char)" size="13" />
						<method name="ToSByte(System.UInt64)" size="14" />
						<method name="ToSByte(System.UInt32)" size="15" />
						<method name="ToBoolean(System.Double)" size="16" />
						<method name="ToChar(System.UInt64)" size="17" />
						<method name="ToBoolean(System.Object,System.IFormatProvider)" size="18" />
						<method name="ToInt64(System.Object,System.IFormatProvider)" size="19" />
						<method name="ToChar(System.Int32)" size="20" />
						<method name="ToChar(System.Int64)" size="22" />
						<method name="IsSpace(System.Char)" size="23" />
						<method name="GetTypeCode(System.Object)" size="24" />
						<method name="ToInt16(System.Int64)" size="26" />
						<method name="WriteThreeLowOrderBytes(System.Byte&amp;,System.Int32)" size="30" />
						<method name="ToChar(System.String,System.IFormatProvider)" size="42" />
						<method name="FromBase64String(System.String)" size="43" />
						<method name="ToString(System.Object,System.IFormatProvider)" size="53" />
						<method name="ToUInt32(System.Double)" size="79" />
						<method name="CopyToTempBufferWithoutWhiteSpace(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Int32&amp;)" size="84" />
						<method name="FromBase64_ComputeResultLength(System.Char*,System.Int32)" size="87" />
						<method name="FromBase64CharPtr(System.Char*,System.Int32)" size="89" />
						<method name="Decode(System.Char&amp;,System.SByte&amp;)" size="113" />
						<method name="ToInt32(System.Double)" size="133" />
						<method name="TryFromBase64Chars(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" size="296" />
						<method name=".cctor()" size="344" />
						<method name="ChangeType(System.Object,System.TypeCode,System.IFormatProvider)" size="350" />
						<method name="ChangeType(System.Object,System.Type,System.IFormatProvider)" size="445" />
						<method name="DefaultToType(System.IConvertible,System.Type,System.IFormatProvider)" size="482" />
						<method name="TryDecodeFromUtf16(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.Int32&amp;)" size="523" />
					</type>
					<type name="Guid" full-name="System.Guid" size="5556">
						<type name="GuidStyles" full-name="System.Guid/GuidStyles" size="0" />
						<type name="GuidResult" full-name="System.Guid/GuidResult" size="246">
							<method name="Init(System.Guid/GuidParseThrowStyle)" size="8" />
							<method name="SetFailure(System.Guid/ParseFailureKind,System.String)" size="12" />
							<method name="SetFailure(System.Exception)" size="15" />
							<method name="SetFailure(System.Guid/ParseFailureKind,System.String,System.Object,System.String,System.Exception)" size="53" />
							<method name="GetGuidParseException()" size="146" />
						</type>
						<method name="GetResult(System.UInt32,System.UInt32)" size="8" />
						<method name="ToString(System.String)" size="9" />
						<method name="System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="10" />
						<method name="ToString()" size="13" />
						<method name="StringToShort(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Int32,System.Int16&amp;,System.Guid/GuidResult&amp;)" size="16" />
						<method name="StringToShort(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;,System.Int32,System.Int32,System.Int16&amp;,System.Guid/GuidResult&amp;)" size="23" />
						<method name="HexToChar(System.Int32)" size="26" />
						<method name="GetHashCode()" size="49" />
						<method name="HexsToChars(System.Char*,System.Int32,System.Int32)" size="50" />
						<method name="IsHexPrefix(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32)" size="65" />
						<method name="NewGuid()" size="68" />
						<method name=".ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)" size="86" />
						<method name="StringToLong(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;,System.Int32,System.Int64&amp;,System.Guid/GuidResult&amp;)" size="93" />
						<method name="HexsToCharsHexOutput(System.Char*,System.Int32,System.Int32)" size="96" />
						<method name="Equals(System.Guid)" size="104" />
						<method name="op_Equality(System.Guid,System.Guid)" size="107" />
						<method name="StringToInt(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;,System.Int32,System.Int32,System.Int32&amp;,System.Guid/GuidResult&amp;)" size="123" />
						<method name="Equals(System.Object)" size="124" />
						<method name="EatAllWhitespace(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="144" />
						<method name="ToString(System.String,System.IFormatProvider)" size="212" />
						<method name="TryParseGuid(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Guid/GuidStyles,System.Guid/GuidResult&amp;)" size="284" />
						<method name="CompareTo(System.Guid)" size="365" />
						<method name="CompareTo(System.Object)" size="401" />
						<method name="TryParseGuidWithNoStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Guid/GuidResult&amp;)" size="431" />
						<method name="TryParseGuidWithDashes(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Guid/GuidResult&amp;)" size="528" />
						<method name="TryParseGuidWithHexPrefix(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Guid/GuidResult&amp;)" size="861" />
						<method name="TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="930" />
					</type>
					<type name="RuntimeType" full-name="System.RuntimeType" size="9125">
						<type name="MemberListType" full-name="System.RuntimeType/MemberListType" size="0" />
						<type name="ListBuilder`1" full-name="System.RuntimeType/ListBuilder`1" size="356">
							<method name="get_Count()" size="7" />
							<method name="get_Item(System.Int32)" size="28" />
							<method name=".ctor(System.Int32)" size="34" />
							<method name="CopyTo(System.Object[],System.Int32)" size="54" />
							<method name="ToArray()" size="79" />
							<method name="Add(T)" size="154" />
						</type>
						<method name="get_UnderlyingSystemType()" size="2" />
						<method name="Equals(System.Object)" size="5" />
						<method name="get_Module()" size="7" />
						<method name="IsInstanceOfType(System.Object)" size="8" />
						<method name="ToString()" size="9" />
						<method name=".ctor()" size="12" />
						<method name="FilterHelper(System.Reflection.BindingFlags,System.String&amp;,System.Boolean&amp;,System.RuntimeType/MemberListType&amp;)" size="13" />
						<method name="FilterApplyMethodInfo(System.Reflection.RuntimeMethodInfo,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[])" size="16" />
						<method name="get_IsEnum()" size="17" />
						<method name="GetFields(System.Reflection.BindingFlags)" size="18" />
						<method name="GetGenericArguments()" size="19" />
						<method name="GetConstructors(System.Reflection.BindingFlags)" size="20" />
						<method name="GetMethods(System.Reflection.BindingFlags)" size="21" />
						<method name="GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="22" />
						<method name="get_MemberType()" size="25" />
						<method name="MakeArrayType(System.Int32)" size="26" />
						<method name="GetType(System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.StackCrawlMark&amp;)" size="27" />
						<method name="ActivationCreateInstance(System.Reflection.MethodBase,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" size="28" />
						<method name="IsEquivalentTo(System.Type)" size="31" />
						<method name="CreateInstanceForAnotherGenericParameter(System.Type,System.RuntimeType)" size="35" />
						<method name="GetEnumUnderlyingType()" size="36" />
						<method name="FilterApplyPrefixLookup(System.Reflection.MemberInfo,System.String,System.Boolean)" size="39" />
						<method name="IsSubclassOf(System.Type)" size="40" />
						<method name="MakePointerType()" size="43" />
						<method name="get_GUID()" size="47" />
						<method name="FilterPreCalculate(System.Boolean,System.Boolean,System.Boolean)" size="48" />
						<method name="GetHashCode()" size="49" />
						<method name="CreateInstanceDefaultCtor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Threading.StackCrawlMark&amp;)" size="51" />
						<method name="IsValueTypeImpl()" size="55" />
						<method name="GetGenericParameterConstraints()" size="56" />
						<method name="GetEnumNames()" size="57" />
						<method name="FilterApplyType(System.Type,System.Reflection.BindingFlags,System.String,System.Boolean,System.String)" size="62" />
						<method name="GetCustomAttributes(System.Type,System.Boolean)" size="65" />
						<method name="ThrowIfTypeNeverValidGenericArgument(System.RuntimeType)" size="66" />
						<method name="get_ContainsGenericParameters()" size="73" />
						<method name="GetSerializationCtor()" size="77" />
						<method name="SplitName(System.String,System.String&amp;,System.String&amp;)" size="82" />
						<method name="get_FullName()" size="85" />
						<method name="GetEnumName(System.Object)" size="93" />
						<method name="FilterHelper(System.Reflection.BindingFlags,System.String&amp;,System.Boolean,System.Boolean&amp;,System.Boolean&amp;,System.RuntimeType/MemberListType&amp;)" size="94" />
						<method name="SanityCheckGenericArguments(System.RuntimeType[],System.RuntimeType[])" size="101" />
						<method name="GetDefaultConstructor()" size="102" />
						<method name="FormatTypeName(System.Boolean)" size="103" />
						<method name="GetNestedTypeCandidates(System.String,System.Reflection.BindingFlags,System.Boolean)" size="105" />
						<method name="GetConstructors_internal(System.Reflection.BindingFlags,System.RuntimeType)" size="108" />
						<method name="GetEventCandidates(System.String,System.Reflection.BindingFlags,System.Boolean)" size="109" />
						<method name="GetEvent(System.String,System.Reflection.BindingFlags)" size="111" />
						<method name="GetMethodCandidates(System.String,System.Int32,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[],System.Boolean)" size="115" />
						<method name="CheckValue(System.Object,System.Reflection.Binder,System.Globalization.CultureInfo,System.Reflection.BindingFlags)" size="119" />
						<method name=".cctor()" size="121" />
						<method name="CreateInstanceCheckThis()" size="122" />
						<method name="GetNestedType(System.String,System.Reflection.BindingFlags)" size="123" />
						<method name="GetPropertyCandidates(System.String,System.Reflection.BindingFlags,System.Type[],System.Boolean)" size="127" />
						<method name="IsAssignableFrom(System.Type)" size="128" />
						<method name="GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="133" />
						<method name="GetBaseType()" size="136" />
						<method name="GetConstructorCandidates(System.String,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[],System.Boolean)" size="139" />
						<method name="GetEvents_internal(System.String,System.Reflection.BindingFlags,System.RuntimeType/MemberListType,System.RuntimeType)" size="141" />
						<method name="GetMethodsByName(System.String,System.Reflection.BindingFlags,System.RuntimeType/MemberListType,System.RuntimeType)" size="142" />
						<method name="GetMethodCandidates(System.String,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[],System.Int32,System.Boolean)" size="146" />
						<method name="GetNestedTypes_internal(System.String,System.Reflection.BindingFlags,System.RuntimeType/MemberListType)" size="149" />
						<method name="CreateInstanceMono(System.Boolean,System.Boolean)" size="159" />
						<method name="GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" size="162" />
						<method name="TryConvertToType(System.Object,System.Boolean&amp;)" size="166" />
						<method name="GetMethodImplCommon(System.String,System.Int32,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" size="170" />
						<method name="FilterApplyBase(System.Reflection.MemberInfo,System.Reflection.BindingFlags,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)" size="190" />
						<method name="GetField(System.String,System.Reflection.BindingFlags)" size="240" />
						<method name="FilterApplyMethodBase(System.Reflection.MethodBase,System.Reflection.BindingFlags,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[])" size="260" />
						<method name="MakeGenericType(System.Type[])" size="269" />
						<method name="GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" size="536" />
						<method name="CreateInstanceImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Threading.StackCrawlMark&amp;)" size="573" />
						<method name="IsConvertibleToPrimitiveType(System.Object,System.Type)" size="933" />
					</type>
					<type name="String" full-name="System.String" size="10504">
						<type name="TrimType" full-name="System.String/TrimType" size="0" />
						<method name="Clone()" size="2" />
						<method name="GetTypeCode()" size="3" />
						<method name="bzero_aligned_1(System.Byte*,System.Int32)" size="4" />
						<method name="bzero_aligned_8(System.Byte*,System.Int32)" size="5" />
						<method name="GetRawStringData()" size="7" />
						<method name="op_Equality(System.String,System.String)" size="8" />
						<method name="CompareTo(System.String)" size="9" />
						<method name="op_Inequality(System.String,System.String)" size="11" />
						<method name="LastIndexOf(System.Char,System.Int32)" size="12" />
						<method name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" size="13" />
						<method name="Format(System.String,System.Object)" size="14" />
						<method name="Format(System.String,System.Object,System.Object)" size="15" />
						<method name="CheckStringComparison(System.StringComparison)" size="16" />
						<method name="Compare(System.String,System.String,System.Boolean)" size="17" />
						<method name="Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" size="18" />
						<method name="Split(System.Char[])" size="19" />
						<method name="Split(System.Char,System.StringSplitOptions)" size="21" />
						<method name="IsCharBitSet(System.UInt32*,System.Byte)" size="22" />
						<method name="StartsWith(System.String)" size="23" />
						<method name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" size="24" />
						<method name="EndsWith(System.Char)" size="25" />
						<method name="Join(System.String,System.String[])" size="26" />
						<method name="ToLower(System.Globalization.CultureInfo)" size="27" />
						<method name="Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" size="29" />
						<method name="GetHashCode()" size="30" />
						<method name="op_Implicit(System.String)" size="31" />
						<method name="CompareOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="32" />
						<method name="CompareOrdinalHelper(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" size="34" />
						<method name="Equals(System.String)" size="35" />
						<method name="Equals(System.String,System.String)" size="36" />
						<method name="EqualsHelper(System.String,System.String)" size="38" />
						<method name="Equals(System.Object)" size="42" />
						<method name="InternalSubString(System.Int32,System.Int32)" size="44" />
						<method name="FormatHelper(System.IFormatProvider,System.String,System.ParamsArray)" size="49" />
						<method name="CreateStringFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" size="51" />
						<method name="CompareOrdinal(System.String,System.String)" size="52" />
						<method name="Concat(System.Object,System.Object,System.Object)" size="54" />
						<method name="IndexOfAny(System.Char,System.Char,System.Char,System.Int32,System.Int32)" size="60" />
						<method name="Copy(System.String)" size="63" />
						<method name="ToCharArray()" size="64" />
						<method name="FillStringChecked(System.String,System.Int32,System.String)" size="65" />
						<method name="Ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" size="66" />
						<method name="InitializeProbabilisticMap(System.UInt32*,System.ReadOnlySpan`1&lt;System.Char&gt;)" size="69" />
						<method name="Concat(System.String,System.String)" size="71" />
						<method name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" size="74" />
						<method name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" size="78" />
						<method name="IndexOf(System.Char,System.Int32,System.Int32)" size="82" />
						<method name="IndexOfAny(System.Char,System.Char,System.Int32,System.Int32)" size="88" />
						<method name="TrimWhiteSpaceHelper(System.String/TrimType)" size="91" />
						<method name="LastIndexOf(System.Char,System.Int32,System.Int32)" size="93" />
						<method name="Ctor(System.SByte*,System.Int32,System.Int32)" size="97" />
						<method name="IndexOfCharArray(System.Char[],System.Int32,System.Int32)" size="110" />
						<method name="LastIndexOfAny(System.Char[],System.Int32,System.Int32)" size="111" />
						<method name="Ctor(System.Char,System.Int32)" size="114" />
						<method name="Concat(System.String,System.String,System.String)" size="115" />
						<method name="Ctor(System.Char*,System.Int32,System.Int32)" size="123" />
						<method name="Substring(System.Int32,System.Int32)" size="124" />
						<method name="wcslen(System.Char*)" size="140" />
						<method name="IndexOfUnchecked(System.String,System.Int32,System.Int32)" size="143" />
						<method name="TrimHelper(System.Char*,System.Int32,System.String/TrimType)" size="144" />
						<method name="IndexOfAny(System.Char[],System.Int32,System.Int32)" size="147" />
						<method name="memset(System.Byte*,System.Int32,System.Int32)" size="158" />
						<method name="SplitKeepEmptyEntries(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" size="166" />
						<method name="Concat(System.String,System.String,System.String,System.String)" size="169" />
						<method name="CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" size="171" />
						<method name="Replace(System.Char,System.Char)" size="179" />
						<method name="IndexOfUncheckedIgnoreCase(System.String,System.Int32,System.Int32)" size="185" />
						<method name="Concat(System.Object[])" size="200" />
						<method name="ReplaceHelper(System.Int32,System.String,System.ReadOnlySpan`1&lt;System.Int32&gt;)" size="203" />
						<method name="SplitInternal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.StringSplitOptions)" size="205" />
						<method name="Compare(System.String,System.String,System.StringComparison)" size="206" />
						<method name="LastIndexOfUncheckedIgnoreCase(System.String,System.Int32,System.Int32)" size="208" />
						<method name="Concat(System.String[])" size="211" />
						<method name="Equals(System.String,System.StringComparison)" size="217" />
						<method name="Equals(System.String,System.String,System.StringComparison)" size="220" />
						<method name="IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" size="229" />
						<method name="Replace(System.String,System.String)" size="230" />
						<method name="EndsWith(System.String,System.StringComparison)" size="265" />
						<method name="SplitOmitEmptyEntries(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" size="274" />
						<method name="StartsWith(System.String,System.StringComparison)" size="279" />
						<method name="LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" size="286" />
						<method name="CompareOrdinalHelper(System.String,System.String)" size="298" />
						<method name="Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" size="339" />
						<method name="JoinCore(System.Char*,System.Int32,System.String[],System.Int32,System.Int32)" size="344" />
						<method name="MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" size="383" />
					</type>
					<type name="DateTimeParse" full-name="System.DateTimeParse" size="10843">
						<type name="DTT" full-name="System.DateTimeParse/DTT" size="0" />
						<method name="SetDateMDY(System.DateTimeResult&amp;,System.Int32,System.Int32,System.Int32)" size="10" />
						<method name="IsDigit(System.Char)" size="12" />
						<method name="ParseDigits(System.__DTString&amp;,System.Int32,System.Int32&amp;)" size="24" />
						<method name="SetDateYMD(System.DateTimeResult&amp;,System.Int32,System.Int32,System.Int32)" size="35" />
						<method name="TryAdjustYear(System.DateTimeResult&amp;,System.Int32,System.Int32&amp;)" size="36" />
						<method name="GetDefaultYear(System.DateTimeResult&amp;,System.Globalization.DateTimeStyles&amp;)" size="40" />
						<method name="GetDateOfDSN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;)" size="41" />
						<method name="Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles)" size="43" />
						<method name="GetTimeOfNN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;)" size="59" />
						<method name="AdjustHour(System.Int32&amp;,System.DateTimeParse/TM)" size="63" />
						<method name="GetDayOfYM(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;)" size="68" />
						<method name="GetDayOfYN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;)" size="69" />
						<method name="GetTimeOfNNN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;)" size="72" />
						<method name="GetDayOfYMN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;)" size="74" />
						<method name="GetDateTimeNow(System.DateTimeResult&amp;,System.Globalization.DateTimeStyles&amp;)" size="79" />
						<method name="ParseFraction(System.__DTString&amp;,System.Double&amp;)" size="81" />
						<method name="AdjustTimeZoneToUniversal(System.DateTimeResult&amp;)" size="89" />
						<method name="AdjustTimeMark(System.Globalization.DateTimeFormatInfo,System.DateTimeRawInfo&amp;)" size="92" />
						<method name="TryParseQuoteString(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.Text.StringBuilder,System.Int32&amp;)" size="117" />
						<method name="GetDayOfYNN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="132" />
						<method name="GetDayOfNNY(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="155" />
						<method name="GetDayOfNN(System.DateTimeResult&amp;,System.Globalization.DateTimeStyles&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="159" />
						<method name="HandleTimeZone(System.__DTString&amp;,System.DateTimeResult&amp;)" size="175" />
						<method name="VerifyValidPunctuation(System.__DTString&amp;)" size="183" />
						<method name="GetDayOfMN(System.DateTimeResult&amp;,System.Globalization.DateTimeStyles&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="189" />
						<method name="GetYearMonthOrder(System.String,System.Globalization.DateTimeFormatInfo,System.Int32&amp;)" size="212" />
						<method name="DateTimeOffsetTimeZonePostProcessing(System.__DTString&amp;,System.DateTimeResult&amp;,System.Globalization.DateTimeStyles)" size="216" />
						<method name="GetMonthDayOrder(System.String,System.Globalization.DateTimeFormatInfo,System.Int32&amp;)" size="229" />
						<method name="AdjustTimeZoneToLocal(System.DateTimeResult&amp;,System.Boolean)" size="253" />
						<method name="GetDateOfNNDS(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="257" />
						<method name="GetDateTimeParseException(System.DateTimeResult&amp;)" size="262" />
						<method name="ParseTimeZone(System.__DTString&amp;,System.TimeSpan&amp;)" size="268" />
						<method name="GetDayOfNNN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="271" />
						<method name="DetermineTimeZoneAdjustments(System.__DTString&amp;,System.DateTimeResult&amp;,System.Globalization.DateTimeStyles,System.Boolean)" size="283" />
						<method name="GetYearMonthDayOrder(System.String,System.Globalization.DateTimeFormatInfo,System.Int32&amp;)" size="326" />
						<method name="ProcessTerminalState(System.DateTimeParse/DS,System.__DTString&amp;,System.DateTimeResult&amp;,System.Globalization.DateTimeStyles&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="327" />
						<method name="ProcessDateTimeSuffix(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;,System.DateTimeToken&amp;)" size="335" />
						<method name="CheckDefaultDateTime(System.DateTimeResult&amp;,System.Globalization.Calendar&amp;,System.Globalization.DateTimeStyles)" size="369" />
						<method name=".cctor()" size="444" />
						<method name="GetDayOfMNN(System.DateTimeResult&amp;,System.DateTimeRawInfo&amp;,System.Globalization.DateTimeFormatInfo)" size="528" />
						<method name="ParseISO8601(System.DateTimeRawInfo&amp;,System.__DTString&amp;,System.Globalization.DateTimeStyles,System.DateTimeResult&amp;)" size="532" />
						<method name="TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTimeResult&amp;)" size="834" />
						<method name="Lex(System.DateTimeParse/DS,System.__DTString&amp;,System.DateTimeToken&amp;,System.DateTimeRawInfo&amp;,System.DateTimeResult&amp;,System.Globalization.DateTimeFormatInfo&amp;,System.Globalization.DateTimeStyles)" size="2384" />
					</type>
					<type name="TimeZoneInfo" full-name="System.TimeZoneInfo" size="12290">
						<type name="TZVersion" full-name="System.TimeZoneInfo/TZVersion" size="0" />
						<type name="TZifType" full-name="System.TimeZoneInfo/TZifType" size="73">
							<method name=".ctor(System.Byte[],System.Int32)" size="73" />
						</type>
						<type name="&lt;&gt;c" full-name="System.TimeZoneInfo/&lt;&gt;c" size="98">
							<method name="&lt;TZif_ParsePosixName&gt;b__37_1(System.Char)" size="6" />
							<method name=".ctor()" size="7" />
							<method name=".cctor()" size="11" />
							<method name="&lt;TZif_ParsePosixDate&gt;b__40_0(System.Char)" size="13" />
							<method name="&lt;TZif_ParsePosixName&gt;b__37_0(System.Char)" size="26" />
							<method name="&lt;TZif_ParsePosixOffset&gt;b__38_0(System.Char)" size="29" />
						</type>
						<type name="&lt;&gt;c__DisplayClass19_0" full-name="System.TimeZoneInfo/&lt;&gt;c__DisplayClass19_0" size="116">
							<method name=".ctor()" size="7" />
							<method name="&lt;FindTimeZoneId&gt;b__0(System.String)" size="109" />
						</type>
						<type name="CachedData" full-name="System.TimeZoneInfo/CachedData" size="152">
							<method name=".ctor()" size="7" />
							<method name="get_Local()" size="21" />
							<method name="GetCorrespondingKind(System.TimeZoneInfo)" size="25" />
							<method name="CreateLocal()" size="99" />
						</type>
						<type name="TZifHead" full-name="System.TimeZoneInfo/TZifHead" size="194">
							<method name=".ctor(System.Byte[],System.Int32)" size="194" />
						</type>
						<type name="TransitionTime" full-name="System.TimeZoneInfo/TransitionTime" size="844">
							<method name="get_TimeOfDay()" size="7" />
							<method name="op_Inequality(System.TimeZoneInfo/TransitionTime,System.TimeZoneInfo/TransitionTime)" size="12" />
							<method name="GetHashCode()" size="16" />
							<method name="Equals(System.Object)" size="23" />
							<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="51" />
							<method name=".ctor(System.DateTime,System.Int32,System.Int32,System.Int32,System.DayOfWeek,System.Boolean)" size="61" />
							<method name="Equals(System.TimeZoneInfo/TransitionTime)" size="103" />
							<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="122" />
							<method name="ValidateTransitionTime(System.DateTime,System.Int32,System.Int32,System.Int32,System.DayOfWeek)" size="183" />
							<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="207" />
						</type>
						<type name="AdjustmentRule" full-name="System.TimeZoneInfo/AdjustmentRule" size="1509">
							<method name="get_DateStart()" size="7" />
							<method name="GetHashCode()" size="15" />
							<method name="CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo/TransitionTime,System.TimeZoneInfo/TransitionTime,System.TimeSpan,System.Boolean)" size="16" />
							<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="57" />
							<method name=".ctor(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo/TransitionTime,System.TimeZoneInfo/TransitionTime,System.TimeSpan,System.Boolean)" size="74" />
							<method name="Equals(System.TimeZoneInfo/AdjustmentRule)" size="124" />
							<method name="get_HasDaylightSaving()" size="134" />
							<method name="IsStartDateMarkerForBeginningOfYear()" size="150" />
							<method name="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="154" />
							<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="255" />
							<method name="ValidateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo/TransitionTime,System.TimeZoneInfo/TransitionTime,System.Boolean)" size="331" />
						</type>
						<method name="GetLocalTimeZone(System.TimeZoneInfo/CachedData)" size="6" />
						<method name="get_BaseUtcOffset()" size="7" />
						<method name="GetAdjustmentRuleForTime(System.DateTime,System.Nullable`1&lt;System.Int32&gt;&amp;)" size="10" />
						<method name="get_Local()" size="11" />
						<method name="Equals(System.Object)" size="13" />
						<method name="GetUtcOffset(System.DateTime)" size="14" />
						<method name="GetDateTimeNowUtcOffsetFromUtc(System.DateTime,System.Boolean&amp;)" size="15" />
						<method name="get_DisplayName()" size="16" />
						<method name="GetHashCode()" size="17" />
						<method name="TZif_ToUnixTime(System.Byte[],System.Int32,System.TimeZoneInfo/TZVersion)" size="20" />
						<method name="GetLocalUtcOffset(System.DateTime,System.TimeZoneInfoOptions)" size="21" />
						<method name="GetDaylightSavingsEndOffsetFromUtc(System.TimeSpan,System.TimeZoneInfo/AdjustmentRule)" size="24" />
						<method name="GetLocalTimeZoneFromTzFile()" size="30" />
						<method name="TZif_GetZoneAbbreviation(System.String,System.Int32)" size="32" />
						<method name="Equals(System.TimeZoneInfo)" size="33" />
						<method name="TZif_ToInt32(System.Byte[],System.Int32)" size="37" />
						<method name="ConvertTimeToUtc(System.DateTime,System.TimeZoneInfoOptions)" size="38" />
						<method name="TZif_ParsePosixOffset(System.String,System.Int32&amp;)" size="39" />
						<method name="GetTzEnvironmentVariable()" size="40" />
						<method name="GetTimeZoneFromTzData(System.Byte[],System.String)" size="42" />
						<method name="TZif_CalculateTransitionOffsetFromBase(System.TimeSpan,System.TimeSpan)" size="48" />
						<method name="TZif_ParsePosixDateTime(System.String,System.Int32&amp;,System.String&amp;,System.String&amp;)" size="50" />
						<method name="FindTimeZoneIdUsingReadLink(System.String)" size="51" />
						<method name="GetDaylightSavingsStartOffsetFromUtc(System.TimeSpan,System.TimeZoneInfo/AdjustmentRule,System.Nullable`1&lt;System.Int32&gt;)" size="54" />
						<method name="GetTimeZoneDirectory()" size="57" />
						<method name="TZif_GenerateAdjustmentRules(System.TimeZoneInfo/AdjustmentRule[]&amp;,System.TimeSpan,System.DateTime[],System.Byte[],System.TimeZoneInfo/TZifType[],System.Boolean[],System.Boolean[],System.String)" size="63" />
						<method name="TryLoadTzFile(System.String,System.Byte[]&amp;,System.String&amp;)" size="68" />
						<method name="TZif_ToInt64(System.Byte[],System.Int32)" size="72" />
						<method name=".cctor()" size="73" />
						<method name="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" size="84" />
						<method name=".ctor(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo/AdjustmentRule[],System.Boolean)" size="87" />
						<method name="GetUtcOffset(System.DateTime,System.TimeZoneInfoOptions,System.TimeZoneInfo/CachedData)" size="89" />
						<method name="GetUtcOffset(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfoOptions)" size="94" />
						<method name="ConvertToFromUtc(System.DateTime,System.TimeSpan,System.TimeSpan,System.Boolean)" size="98" />
						<method name="GetPreviousAdjustmentRule(System.TimeZoneInfo/AdjustmentRule,System.Nullable`1&lt;System.Int32&gt;)" size="100" />
						<method name="GetDirectoryEntryFullPath(Interop/Sys/DirectoryEntry&amp;,System.String)" size="101" />
						<method name="TryGetLocalTzFile(System.Byte[]&amp;,System.String&amp;)" size="103" />
						<method name="GetDaylightTime(System.Int32,System.TimeZoneInfo/AdjustmentRule,System.Nullable`1&lt;System.Int32&gt;)" size="111" />
						<method name="TZif_ParseMDateRule(System.String,System.Int32&amp;,System.Int32&amp;,System.DayOfWeek&amp;)" size="114" />
						<method name="CompareTimeZoneFile(System.String,System.Byte[],System.Byte[])" size="120" />
						<method name="ConvertUtcToTimeZone(System.Int64,System.TimeZoneInfo,System.Boolean&amp;)" size="122" />
						<method name="TZif_CreateTransitionTimeFromPosixRule(System.String,System.String)" size="123" />
						<method name="HasSameRules(System.TimeZoneInfo)" size="132" />
						<method name="FindTimeZoneId(System.Byte[])" size="139" />
						<method name="TZif_ParseOffsetString(System.String)" size="142" />
						<method name="CheckIsDst(System.DateTime,System.DateTime,System.DateTime,System.Boolean,System.TimeZoneInfo/AdjustmentRule)" size="143" />
						<method name="ParseTimeOfDay(System.String)" size="151" />
						<method name="TZif_ParseJulianDay(System.String,System.Int32&amp;,System.Int32&amp;)" size="154" />
						<method name="TZif_ParsePosixFormat(System.String,System.String&amp;,System.String&amp;,System.String&amp;,System.String&amp;,System.String&amp;,System.String&amp;,System.String&amp;,System.String&amp;)" size="175" />
						<method name="GetUtcOffsetFromUtc(System.DateTime,System.TimeZoneInfo,System.Boolean&amp;,System.Boolean&amp;)" size="176" />
						<method name="GetAdjustmentRuleForTime(System.DateTime,System.Boolean,System.Nullable`1&lt;System.Int32&gt;&amp;)" size="181" />
						<method name="ValidateTimeZoneInfo(System.String,System.TimeSpan,System.TimeZoneInfo/AdjustmentRule[],System.Boolean&amp;)" size="215" />
						<method name="TZif_CreateAdjustmentRuleForPosixFormat(System.String,System.DateTime,System.TimeSpan)" size="236" />
						<method name=".ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" size="245" />
						<method name="GetIsAmbiguousTime(System.DateTime,System.TimeZoneInfo/AdjustmentRule,System.Globalization.DaylightTimeStruct)" size="249" />
						<method name="ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo,System.TimeZoneInfoOptions,System.TimeZoneInfo/CachedData)" size="296" />
						<method name="TransitionTimeToDateTime(System.Int32,System.TimeZoneInfo/TransitionTime)" size="324" />
						<method name="GetIsDaylightSavings(System.DateTime,System.TimeZoneInfo/AdjustmentRule,System.Globalization.DaylightTimeStruct,System.TimeZoneInfoOptions)" size="330" />
						<method name="EnumerateFilesRecursively(System.String,System.Predicate`1&lt;System.String&gt;)" size="334" />
						<method name=".ctor(System.Byte[],System.String,System.Boolean)" size="428" />
						<method name="TZif_GenerateAdjustmentRule(System.Int32&amp;,System.TimeSpan,System.Collections.Generic.List`1&lt;System.TimeZoneInfo/AdjustmentRule&gt;,System.DateTime[],System.Byte[],System.TimeZoneInfo/TZifType[],System.Boolean[],System.Boolean[],System.String)" size="515" />
						<method name="TZif_ParseRaw(System.Byte[],System.TimeZoneInfo/TZifHead&amp;,System.DateTime[]&amp;,System.Byte[]&amp;,System.TimeZoneInfo/TZifType[]&amp;,System.String&amp;,System.Boolean[]&amp;,System.Boolean[]&amp;,System.String&amp;)" size="568" />
						<method name="GetIsDaylightSavingsFromUtc(System.DateTime,System.Int32,System.TimeSpan,System.TimeZoneInfo/AdjustmentRule,System.Nullable`1&lt;System.Int32&gt;,System.Boolean&amp;,System.TimeZoneInfo)" size="769" />
					</type>
					<type name="Number" full-name="System.Number" size="17830">
						<type name="NumberBuffer" full-name="System.Number/NumberBuffer" size="36">
							<type name="DigitsAndNullTerminator" full-name="System.Number/NumberBuffer/DigitsAndNullTerminator" size="0" />
							<method name="get_sign()" size="10" />
							<method name="get_digits()" size="12" />
							<method name="set_sign(System.Boolean)" size="14" />
						</type>
						<method name="Low32(System.UInt64)" size="3" />
						<method name="Mul32x32To64(System.UInt32,System.UInt32)" size="6" />
						<method name="abs(System.Int32)" size="9" />
						<method name="IsDigit(System.Int32)" size="12" />
						<method name="High32(System.UInt64)" size="16" />
						<method name="IsWhite(System.Int32)" size="18" />
						<method name="Int64DivMod1E9(System.UInt64&amp;)" size="22" />
						<method name="ThrowOverflowOrFormatException(System.Boolean,System.String)" size="27" />
						<method name="TryCopyTo(System.String,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="32" />
						<method name="TrailingZeros(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32)" size="33" />
						<method name="UInt32ToDecChars(System.Char*,System.UInt32,System.Int32)" size="41" />
						<method name="DigitsToInt(System.Char*,System.Int32)" size="42" />
						<method name="Int32ToHexChars(System.Char*,System.UInt32,System.Int32,System.Int32)" size="47" />
						<method name="ParseDecimal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="51" />
						<method name="FormatDouble(System.Double,System.String,System.Globalization.NumberFormatInfo)" size="54" />
						<method name="NumberBufferToDouble(System.Number/NumberBuffer&amp;,System.Double&amp;)" size="55" />
						<method name="TryFormatDouble(System.Double,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberFormatInfo,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="56" />
						<method name="Int32ToHexStr(System.Int32,System.Char,System.Int32)" size="61" />
						<method name="TryInt32ToHexStr(System.Int32,System.Char,System.Int32,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="69" />
						<method name="MatchChars(System.Char*,System.Char*,System.String)" size="71" />
						<method name="Mul64Lossy(System.UInt64,System.UInt64,System.Int32&amp;)" size="73" />
						<method name="TryStringToNumber(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Number/NumberBuffer&amp;,System.Globalization.NumberFormatInfo,System.Boolean)" size="76" />
						<method name="StringToNumber(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Number/NumberBuffer&amp;,System.Globalization.NumberFormatInfo,System.Boolean)" size="80" />
						<method name="TryParseInt32(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Int32&amp;)" size="83" />
						<method name="TryFormatDecimal(System.Decimal,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberFormatInfo,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="88" />
						<method name="UInt32ToNumber(System.UInt32,System.Number/NumberBuffer&amp;)" size="89" />
						<method name="FormatDecimal(System.Decimal,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberFormatInfo)" size="91" />
						<method name="TryUInt32ToDecStr(System.UInt32,System.Int32,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="93" />
						<method name="NumberToUInt32(System.Number/NumberBuffer&amp;,System.UInt32&amp;)" size="94" />
						<method name="UInt32ToDecStr(System.UInt32,System.Int32)" size="97" />
						<method name="FormatExponent(System.Text.ValueStringBuilder&amp;,System.Globalization.NumberFormatInfo,System.Int32,System.Char,System.Int32,System.Boolean)" size="101" />
						<method name="TryUInt64ToDecStr(System.UInt64,System.Int32,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="104" />
						<method name="UInt64ToDecStr(System.UInt64,System.Int32)" size="105" />
						<method name="Int32ToNumber(System.Int32,System.Number/NumberBuffer&amp;)" size="106" />
						<method name="TryNegativeInt32ToDecStr(System.Int32,System.Int32,System.String,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="108" />
						<method name="NegativeInt32ToDecStr(System.Int32,System.Int32,System.String)" size="110" />
						<method name="TryInt64ToHexStr(System.Int64,System.Char,System.Int32,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="116" />
						<method name="ParseUInt32(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="118" />
						<method name="ParseUInt64(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="119" />
						<method name="ParseInt32(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="121" />
						<method name="ParseInt64(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)" size="122" />
						<method name="FormatNumber(System.Text.ValueStringBuilder&amp;,System.Number/NumberBuffer&amp;,System.Int32,System.Int32,System.Globalization.NumberFormatInfo)" size="123" />
						<method name="UInt64ToNumber(System.UInt64,System.Number/NumberBuffer&amp;)" size="124" />
						<method name="Int64ToNumber(System.Int64,System.Number/NumberBuffer&amp;)" size="145" />
						<method name="FormatCurrency(System.Text.ValueStringBuilder&amp;,System.Number/NumberBuffer&amp;,System.Int32,System.Int32,System.Globalization.NumberFormatInfo)" size="151" />
						<method name="RoundNumber(System.Number/NumberBuffer&amp;,System.Int32)" size="152" />
						<method name="DecimalToNumber(System.Decimal,System.Number/NumberBuffer&amp;)" size="154" />
						<method name="FormatGeneral(System.Text.ValueStringBuilder&amp;,System.Number/NumberBuffer&amp;,System.Int32,System.Int32,System.Globalization.NumberFormatInfo,System.Char,System.Boolean)" size="156" />
						<method name="NegativeInt64ToDecStr(System.Int64,System.Int32,System.String)" size="157" />
						<method name="FormatUInt32(System.UInt32,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="164" />
						<method name="TryFormatUInt32(System.UInt32,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="170" />
						<method name="FormatInt32(System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="186" />
						<method name="FormatInt64(System.Int64,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" size="188" />
						<method name="FindSection(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32)" size="190" />
						<method name="TryFormatInt32(System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="195" />
						<method name="TryFormatInt64(System.Int64,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" size="197" />
						<method name="ParseFormatSpecifier(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;)" size="259" />
						<method name="FormatSingle(System.Text.ValueStringBuilder&amp;,System.Single,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberFormatInfo)" size="304" />
						<method name="FormatDouble(System.Text.ValueStringBuilder&amp;,System.Double,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberFormatInfo)" size="305" />
						<method name="FormatFixed(System.Text.ValueStringBuilder&amp;,System.Number/NumberBuffer&amp;,System.Int32,System.Int32,System.Globalization.NumberFormatInfo,System.Int32[],System.String,System.String)" size="437" />
						<method name="TryParseUInt32HexNumberStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.UInt32&amp;,System.Boolean&amp;)" size="462" />
						<method name="TryParseUInt64HexNumberStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.UInt64&amp;,System.Boolean&amp;)" size="468" />
						<method name="NumberBufferToDecimal(System.Number/NumberBuffer&amp;,System.Decimal&amp;)" size="474" />
						<method name=".cctor()" size="514" />
						<method name="NumberToString(System.Text.ValueStringBuilder&amp;,System.Number/NumberBuffer&amp;,System.Char,System.Int32,System.Globalization.NumberFormatInfo,System.Boolean)" size="518" />
						<method name="DoubleToNumber(System.Double,System.Int32,System.Number/NumberBuffer&amp;)" size="524" />
						<method name="NumberToDouble(System.Number/NumberBuffer&amp;)" size="687" />
						<method name="TryParseUInt32IntegerStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.UInt32&amp;,System.Boolean&amp;)" size="700" />
						<method name="TryParseInt32IntegerStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Int32&amp;,System.Boolean&amp;)" size="709" />
						<method name="TryParseUInt64IntegerStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.UInt64&amp;,System.Boolean&amp;)" size="724" />
						<method name="TryParseInt64IntegerStyle(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Int64&amp;,System.Boolean&amp;)" size="726" />
						<method name="ParseNumber(System.Char*&amp;,System.Char*,System.Globalization.NumberStyles,System.Number/NumberBuffer&amp;,System.Globalization.NumberFormatInfo,System.Boolean)" size="1135" />
						<method name="NumberToStringFormat(System.Text.ValueStringBuilder&amp;,System.Number/NumberBuffer&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberFormatInfo)" size="1978" />
					</type>
				</namespace>
			</assembly>
		</profile>
	</size-check>
</optimizer-report>